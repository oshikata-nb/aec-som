CREATE OR REPLACE TRIGGER ITEM_GENZAIRYO_TRIGGER
AFTER INSERT OR DELETE OR UPDATE OF TYPE_DIVISION,ITEM_SUB_NAME,PARENT_ITEM_CD,KG_OF_FRACTION_MANAGEMENT,STYLE_OF_PACKING,ITEM_NAME,ITEM_CD
ON ITEM
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW 
DECLARE
	TEMP_COUNT 		NUMBER;
	TEMP_PROC_DIVISION 	NUMBER;			-- 処理区分
	CONST_INSERT 		NUMBER := 1;		-- レコード追加処理
	CONST_UPDATE 		NUMBER := 2;		-- レコード更新処理
	CONST_DELETE 		NUMBER := 3;		-- レコード削除処理
	TEMP_PRIMARY_KEY	VARCHAR2(20);		-- 主キー
	CONST_SPACE 		VARCHAR(10) := ' ';	-- スペース

	CONST_GENZAIRYO 	NUMBER := 1;		-- 種別原材料
	CONST_HOUZAI 		NUMBER := 2;		-- 種別包材

BEGIN

	IF (INSERTING) THEN	-- 新規追加時

		-- 新規時原材料＆包材のみ処理を行う
		IF :NEW.TYPE_DIVISION = CONST_GENZAIRYO OR :NEW.TYPE_DIVISION = CONST_HOUZAI THEN
			TEMP_PROC_DIVISION := CONST_INSERT;
			TEMP_PRIMARY_KEY := :NEW.ITEM_CD;
		ELSE
			RETURN;
		END IF;
	END IF;
	IF (UPDATING) THEN	-- 更新時
		-- 更新時以前のレコードの種別も見る
		IF :OLD.TYPE_DIVISION = CONST_GENZAIRYO OR :OLD.TYPE_DIVISION = CONST_HOUZAI THEN	-- 更新前が原材料＆包材の場合
			
			IF :NEW.TYPE_DIVISION = CONST_GENZAIRYO OR :NEW.TYPE_DIVISION = CONST_HOUZAI THEN
				-- 更新前が原材料＆包材の場合　かつ　更新後が原材料＆包材の場合（更新）
				TEMP_PROC_DIVISION := CONST_UPDATE;
				TEMP_PRIMARY_KEY := :NEW.ITEM_CD;
			ELSE
				-- 更新前が原材料＆包材の場合　かつ　更新後が原材料＆包材以外の場合（削除）
				TEMP_PROC_DIVISION := CONST_DELETE;
				TEMP_PRIMARY_KEY := :NEW.ITEM_CD;
			END IF;
		ELSE
			IF :NEW.TYPE_DIVISION = CONST_GENZAIRYO OR :NEW.TYPE_DIVISION = CONST_HOUZAI THEN
				-- 更新前が原材料＆包材以外で　かつ　更新後がが原材料＆包材の場合（新規）
				TEMP_PROC_DIVISION := CONST_INSERT;
				TEMP_PRIMARY_KEY := :NEW.ITEM_CD;
			ELSE
				-- 更新前が原材料＆包材以外で　かつ　更新後が原材料＆包材以外の場合（処理無し）
				RETURN;
				
			END IF;
		END IF;
	END IF;
	IF (DELETING) THEN	-- 削除時
		-- 新規時原材料＆包材のみ処理を行う
		IF :OLD.TYPE_DIVISION = CONST_GENZAIRYO OR :OLD.TYPE_DIVISION = CONST_HOUZAI THEN
			TEMP_PROC_DIVISION := CONST_DELETE;
			TEMP_PRIMARY_KEY := :OLD.ITEM_CD;
		ELSE
			RETURN;
		END IF;
	END IF;

	SELECT COUNT(*) INTO TEMP_COUNT FROM IF_MASTER_GENZAIRYO WHERE IF_MASTER_GENZAIRYO.GENZAICODE = TEMP_PRIMARY_KEY;
	
	IF TEMP_COUNT <> 0 THEN

		UPDATE IF_MASTER_GENZAIRYO SET 
			DAIGENCODE = NVL(:NEW.PARENT_ITEM_CD,CONST_SPACE),	-- 代表原材料コード
			DAIGENMEI = NVL(:NEW.ITEM_NAME,CONST_SPACE),		-- 代表原材料名
			GENZAICODE = NVL(:NEW.ITEM_CD,CONST_SPACE),		-- 原材料コード
			GENZAIMEI = NVL(:NEW.ITEM_NAME,CONST_SPACE),		-- 品目名称
			GENZAIKANA = NVL(:NEW.ITEM_SUB_NAME,CONST_SPACE),	-- 原材料カナ
			NISUGATA = NVL(:NEW.STYLE_OF_PACKING,CONST_SPACE),	-- 荷姿
			KGKANZANCHI = NVL(:NEW.KG_OF_FRACTION_MANAGEMENT,CONST_SPACE),	-- KG換算値
			GENZAISHUBETSU = NVL(:NEW.TYPE_DIVISION,CONST_SPACE),	-- 原材料種別
			PROC_DIVISION =TEMP_PROC_DIVISION
		WHERE IF_MASTER_GENZAIRYO.GENZAICODE = TEMP_PRIMARY_KEY;

	ELSE
		
		INSERT INTO IF_MASTER_GENZAIRYO VALUES(
			NVL(:NEW.PARENT_ITEM_CD,CONST_SPACE),		-- 代表原材料コード
			NVL(:NEW.ITEM_NAME,CONST_SPACE),		-- 代表原材料名
			NVL(:NEW.ITEM_CD,CONST_SPACE),			-- 原材料コード
			NVL(:NEW.ITEM_NAME,CONST_SPACE),		-- 原材料名
			NVL(:NEW.ITEM_SUB_NAME,CONST_SPACE),		-- 原材料カナ
			NVL(:NEW.STYLE_OF_PACKING,CONST_SPACE),		-- 荷姿
			NVL(:NEW.KG_OF_FRACTION_MANAGEMENT,CONST_SPACE),-- KG換算値
			CONST_SPACE,					-- 純度
			CONST_SPACE,					-- 仕入先コード
			CONST_SPACE,					-- 有償無償
			CONST_SPACE,					-- 原材料在庫種別
			NVL(:NEW.TYPE_DIVISION,CONST_SPACE),		-- 原材料種別
			CONST_SPACE,			-- 原材料使用区分
			CONST_SPACE,			-- 他社原材料コード
			CONST_SPACE,			-- 発注扱い店コード
			CONST_SPACE,			-- 原材料単位？
			CONST_SPACE,			-- メーカー名
			CONST_SPACE,			-- 工場コード
			CONST_SPACE,			-- 外注フラグ
			TEMP_PROC_DIVISION		-- 処理区分
			);
		
	END IF;
-- 異常処理
EXCEPTION
	WHEN OTHERS THEN

		OUTPUT_ERROR_LOG('ITEM_GENZAIRYO','TRIGGER',SQLCODE,SQLERRM);

END;
/
