CREATE OR REPLACE PROCEDURE      PRO_CLAIM_UPDATE
	(
		 P_STR_ORGANIZATION_CD		IN	NVARCHAR2
		,P_STR_VENDER_CD		IN	NVARCHAR2
		,P_STR_CREDIT_DATE		IN	NVARCHAR2
		,P_STR_TEMP_CLOSING_FLG	IN	NVARCHAR2
		,P_STR_INPUTOR_CD		IN	NVARCHAR2
		,P_NUM_RET				OUT	NUMBER
	)
IS
/*----------------------------------------------------------------------------------------------------------------
	種別		:	PROCEDURE
	名称		:	PRO_CLAIM_UPDATE
	処理内容	:	請求更新処理
	引数		:	P_STR_ORGANIZATION_CD		部門コード		NVARCHAR2型
	引数		:	P_STR_VENDER_CD			請求先コード	NVARCHAR2型
	引数		:	P_STR_CREDIT_DATE		請求締め日		NVARCHAR2型
	引数		:	P_STR_TEMP_CLOSING_FLG	仮締区分		NVARCHAR2型
	引数		:	P_STR_INPUTOR_CD		登録者ＩＤ		NVARCHAR2型
	引数(戻値)	:	P_NUM_RET				実行結果(0:正常終了, 99:異常終了)	NUMBER型
	VERNO.		:	1.00
(history)
	date		ver		name				comments
	----------	------	------------------	----------------------------------------------------------------------
	2008.08.28	1.00	TOSCO       		creation
*/----------------------------------------------------------------------------------------------------------------

	--------------------------------------------------------------------------------
	--定数・変数宣言
	--------------------------------------------------------------------------------
	c_DataDivUriUriage		CONSTANT SALES.DATA_TOTAL_DIVISION%TYPE			:= 1;			-- (売上)売上
	c_DataDivUriHenpin		CONSTANT SALES.DATA_TOTAL_DIVISION%TYPE			:= 2;			-- (売上)返品
	c_DataDivUriNebiki		CONSTANT SALES.DATA_TOTAL_DIVISION%TYPE			:= 3;			-- (売上)値引
	c_DataDivUriSonota		CONSTANT SALES.DATA_TOTAL_DIVISION%TYPE			:= 9;			-- (売上)その他
	c_DataDivNyuNyukin		CONSTANT SALES.DATA_TOTAL_DIVISION%TYPE			:= 1;			-- (入金)入金
	c_DataDivNyuSousai		CONSTANT SALES.DATA_TOTAL_DIVISION%TYPE			:= 2;			-- (入金)相殺
	c_DataDivNyuSonota		CONSTANT SALES.DATA_TOTAL_DIVISION%TYPE			:= 9;			-- (入金)その他
	c_DataDivShiSousai		CONSTANT SALES.DATA_TOTAL_DIVISION%TYPE			:= 2;			-- (支払)相殺
	c_DataDivSouSousai		CONSTANT SALES.DATA_TOTAL_DIVISION%TYPE			:= 1;			-- (グループ間相殺)グループ間相殺
	c_ClaimTrgDiv1			CONSTANT SALES.CLAIM_TARGET_DIVISION%TYPE		:= 1;			-- 請求対象(処理済)
	c_ClaimTrgDiv9			CONSTANT SALES.CLAIM_TARGET_DIVISION%TYPE		:= 9;			-- 請求対象(対象外)
	c_DeliveryComp2			CONSTANT SALES.DELIVERY_COMP%TYPE				:= 2;			-- 完納区分(完納)
	c_ClaimUpdDiv0			CONSTANT SALES.CLAIM_UPDATE_DIVISION%TYPE		:= 0;			-- 請求更新フラグ(未処理)
	c_ClaimUpdDiv1			CONSTANT SALES.CLAIM_UPDATE_DIVISION%TYPE		:= 1;			-- 請求更新フラグ(更新済)
	c_ClDiv0				CONSTANT CLASSIFICATION.CLAIM_DIVISION%TYPE		:= 0;			-- 請求対象(対象外)
	c_ClDiv1				CONSTANT CLASSIFICATION.CLAIM_DIVISION%TYPE		:= 1;			-- 請求対象(対象)
	c_DepositUpdDiv0		CONSTANT SALES.DEPOSIT_UPDATE_DIVISION%TYPE		:= 0;			-- 売掛更新フラグ(未処理)
	c_DepositUpdDiv1		CONSTANT SALES.DEPOSIT_UPDATE_DIVISION%TYPE		:= 1;			-- 売掛更新フラグ(更新済)
	c_ApprovalSts3			CONSTANT SALES.APPROVAL_STATUS%TYPE				:= 3;			-- 承認ステータス(承認済)
	c_TempClosingFlg1		CONSTANT VARCHAR2(1)							:= '1';			-- 仮締区分(仮締め)
	c_VenderDivTS			CONSTANT VENDER.VENDER_DIVISION%TYPE			:= 'TS';		-- 取引先区分(TS:得意先)

	nvAccountYears			SALES.ACCOUNT_YEARS%TYPE;										-- 勘定年月
	daCreditDate			CLAIM_HEADER.CREDIT_DATE%TYPE;									-- 請求締め日
	nvClaimNo				CLAIM_HEADER.CLAIM_NO%TYPE;										-- 請求番号
	rtRecWork				CLAIM_HEADER%ROWTYPE;											-- 請求ヘッダー
	nClaimAmount			CLAIM_HEADER.CLAIM_AMOUNT%TYPE;									-- 今回請求額(差引繰越額含まず)
	nvCreditScheDate		NVARCHAR2(8);													-- 入金予定日(YYYYMMDD)
	nvCreditDiv				VENDER.CATEGORY_DIVISION1%TYPE;									-- 入金分類（決済方法）
	nNoteSight				VENDER.NOTE_SIGHT1%TYPE;										-- 手形サイト
	nBillPublish			VENDER.BILL_PUBLISH%TYPE;										-- 請求書発行区分
	nHolidayFlg				VENDER.HOLIDAY_FLG%TYPE;										-- 休日指定フラグ
	nCount					NUMBER											:= 0;			-- カウンター

	--------------------------------------------------------------------------------
	--★カーソル宣言
	--------------------------------------------------------------------------------
	--請求データ抽出 カーソル
	CURSOR curSales(
		p_daCreditDate		IN	DATE
	   ,p_nvAccountYears	IN	SALES.ACCOUNT_YEARS%TYPE
	)	IS
		SELECT
			 ORGANIZATION_CD AS ORGANIZATION_CD											--部門コード
			,VENDER_CD AS VENDER_CD											--請求先コード
			,SUM(CLAIM_AMOUNT_FORWARD) AS CLAIM_AMOUNT_FORWARD					--前回請求額
			,SUM(CREDIT_AMOUNT_FORWARD) AS CREDIT_AMOUNT_FORWARD				--前回入金額
			,SUM(OTHER_CREDIT_AMOUNT_FORWARD) AS OTHER_CREDIT_AMOUNT_FORWARD	--その他入金金額
			,SUM(CLAIM_AMOUNT_FORWARD - (CREDIT_AMOUNT_FORWARD + OTHER_CREDIT_AMOUNT_FORWARD )) AS BALANCE_FORWARD	--差引繰越額
			,SUM(SALES_AMOUNT) AS SALES_AMOUNT									--今回売上額
			,SUM(SALES_RETURNED_AMOUNT) AS SALES_RETURNED_AMOUNT				--返品金額
			,SUM(SALES_DISCOUNT_AMOUNT) AS SALES_DISCOUNT_AMOUNT				--値引金額
			,SUM(OTHER_SALES_AMOUNT) AS OTHER_SALES_AMOUNT						--その他売上金額
			,SUM(OFFSET_AMOUNT) AS OFFSET_AMOUNT								--相殺金額
			,SUM(TAX_AMOUNT) AS TAX_AMOUNT										--消費税額
			,SUM((CLAIM_AMOUNT_FORWARD+SALES_AMOUNT+SALES_RETURNED_AMOUNT+SALES_DISCOUNT_AMOUNT+OTHER_SALES_AMOUNT+TAX_AMOUNT)
					-  (CREDIT_AMOUNT_FORWARD + OTHER_CREDIT_AMOUNT_FORWARD + OFFSET_AMOUNT)) AS CLAIM_AMOUNT		--今回請求額
		FROM (
			SELECT
				 ORGANIZATION_CD AS ORGANIZATION_CD											--部門コード
				,VENDER_CD AS VENDER_CD											--請求先コード
				,SUM(CLAIM_AMOUNT_FORWARD) AS CLAIM_AMOUNT_FORWARD					--前回請求額
				,SUM(CREDIT_AMOUNT_FORWARD) AS CREDIT_AMOUNT_FORWARD				--前回入金額
				,SUM(OTHER_CREDIT_AMOUNT_FORWARD) AS OTHER_CREDIT_AMOUNT_FORWARD	--その他入金金額
				,SUM(BALANCE_FORWARD) AS BALANCE_FORWARD							--差引繰越額
				,SUM(SALES_AMOUNT) AS SALES_AMOUNT									--今回売上額
				,SUM(SALES_RETURNED_AMOUNT) AS SALES_RETURNED_AMOUNT				--返品金額
				,SUM(SALES_DISCOUNT_AMOUNT) AS SALES_DISCOUNT_AMOUNT				--値引金額
				,SUM(OTHER_SALES_AMOUNT) AS OTHER_SALES_AMOUNT						--その他売上金額
				,SUM(OFFSET_AMOUNT) AS OFFSET_AMOUNT								--相殺金額
				,SUM(TAX_AMOUNT) AS TAX_AMOUNT										--消費税額
				,SUM(CLAIM_AMOUNT) AS CLAIM_AMOUNT									--今回請求額
			FROM
				(
				SELECT
					 SALES.ORGANIZATION_CD AS ORGANIZATION_CD						--部門コード
					,DECODE(SALES.INVOICE_CD, NULL, SALES.VENDER_CD, SALES.INVOICE_CD) AS VENDER_CD	--請求先コード
					,0 AS CLAIM_AMOUNT_FORWARD
					,0 AS CREDIT_AMOUNT_FORWARD
					,0 AS OTHER_CREDIT_AMOUNT_FORWARD
					,0 AS BALANCE_FORWARD
					,DECODE(SALES.TAX_DIVISION, '1', SALES.SALES_AMOUNT+SALES.TAX_AMOUNT
															, SALES.SALES_AMOUNT) AS SALES_AMOUNT	--今回売上額(内税の場合は＋消費税額)
					,0 AS SALES_RETURNED_AMOUNT
					,0 AS SALES_DISCOUNT_AMOUNT
					,0 AS OTHER_SALES_AMOUNT
					,0 AS OFFSET_AMOUNT
					,DECODE(SALES.TAX_DIVISION, '0', SALES.TAX_AMOUNT, 0) AS TAX_AMOUNT	--消費税額(区分=外税のみ)
					,0 AS CLAIM_AMOUNT
				FROM
					 (SELECT
						 SALES.ORGANIZATION_CD
						,SALES.VENDER_CD
						,VENDER.PAYMENT_INVOICE_CD AS INVOICE_CD
						,SALES.TAX_DIVISION
						,SALES.SALES_AMOUNT
						,SALES.TAX_AMOUNT
						,SALES.ACCOUNT_YEARS
						,SALES.DATA_TOTAL_DIVISION
						,SALES.CLAIM_UPDATE_DIVISION
						,SALES.INVOICE_UPDATE_DATE
						,SALES.DELIVERY_COMP
						,SALES.APPROVAL_STATUS
						,SALES.DATA_TYPE
						,SALES.CATEGORY_DIVISION
					  FROM
						 SALES SALES						--売上トラン
						,VENDER VENDER
					  WHERE
						  ('ALL' = NVL(P_STR_ORGANIZATION_CD, 'ALL') OR SALES.ORGANIZATION_CD = P_STR_ORGANIZATION_CD)
					  AND SALES.ACCOUNT_YEARS <= p_nvAccountYears
					  AND SALES.DATA_TOTAL_DIVISION = c_DataDivUriUriage	--売上
					  AND SALES.CLAIM_UPDATE_DIVISION = c_ClaimUpdDiv0		--未処理
					  AND SALES.INVOICE_UPDATE_DATE IS NULL
					  AND SALES.DELIVERY_COMP = c_DeliveryComp2				--完納
					  AND SALES.APPROVAL_STATUS = c_ApprovalSts3			--承認済
					  AND SALES.VENDER_CD = VENDER.VENDER_CD
					  AND VENDER.VENDER_DIVISION = c_VenderDivTS
					 ) SALES
					,CLASSIFICATION CLASSIFICATION		--分類マスタ
				WHERE
					('ALL' = NVL(P_STR_VENDER_CD, 'ALL') OR
					 (SALES.VENDER_CD = P_STR_VENDER_CD AND SALES.INVOICE_CD IS NULL) OR
					 SALES.INVOICE_CD = P_STR_VENDER_CD
					)
				AND SALES.DATA_TYPE = CLASSIFICATION.DATA_TYPE
				AND SALES.CATEGORY_DIVISION = CLASSIFICATION.CATEGORY_DIVISION
				AND CLASSIFICATION.CLAIM_DIVISION = c_ClDiv1			--請求対象
				UNION ALL
				SELECT
					 SALES.ORGANIZATION_CD AS ORGANIZATION_CD						--部門コード
					,DECODE(SALES.INVOICE_CD, NULL, SALES.VENDER_CD, SALES.INVOICE_CD) AS VENDER_CD	--請求先コード
					,0 AS CLAIM_AMOUNT_FORWARD
					,0 AS CREDIT_AMOUNT_FORWARD
					,0 AS OTHER_CREDIT_AMOUNT_FORWARD
					,0 AS BALANCE_FORWARD
					,0 AS SALES_AMOUNT
					,DECODE(SALES.TAX_DIVISION, '1', SALES.SALES_AMOUNT+SALES.TAX_AMOUNT
															, SALES.SALES_AMOUNT) AS SALES_RETURNED_AMOUNT	--返品金額(内税の場合は＋消費税額)
					,0 AS SALES_DISCOUNT_AMOUNT
					,0 AS OTHER_SALES_AMOUNT
					,0 AS OFFSET_AMOUNT
					,DECODE(SALES.TAX_DIVISION, '0', SALES.TAX_AMOUNT, 0) AS TAX_AMOUNT	--消費税額(区分=外税のみ)
					,0 AS CLAIM_AMOUNT
				FROM
					 (SELECT
						 SALES.ORGANIZATION_CD
						,SALES.VENDER_CD
						,VENDER.PAYMENT_INVOICE_CD AS INVOICE_CD
						,SALES.TAX_DIVISION
						,SALES.SALES_AMOUNT
						,SALES.TAX_AMOUNT
						,SALES.ACCOUNT_YEARS
						,SALES.DATA_TOTAL_DIVISION
						,SALES.CLAIM_UPDATE_DIVISION
						,SALES.INVOICE_UPDATE_DATE
						,SALES.DELIVERY_COMP
						,SALES.APPROVAL_STATUS
						,SALES.DATA_TYPE
						,SALES.CATEGORY_DIVISION
					  FROM
						 SALES SALES						--売上トラン
						,VENDER VENDER
					  WHERE
						  ('ALL' = NVL(P_STR_ORGANIZATION_CD, 'ALL') OR SALES.ORGANIZATION_CD = P_STR_ORGANIZATION_CD)
					  AND SALES.ACCOUNT_YEARS <= p_nvAccountYears
					  AND SALES.DATA_TOTAL_DIVISION = c_DataDivUriHenpin	--返品
					  AND SALES.CLAIM_UPDATE_DIVISION = c_ClaimUpdDiv0		--未処理
					  AND SALES.INVOICE_UPDATE_DATE IS NULL
					  AND SALES.DELIVERY_COMP = c_DeliveryComp2				--完納
					  AND SALES.APPROVAL_STATUS = c_ApprovalSts3			--承認済
					  AND SALES.VENDER_CD = VENDER.VENDER_CD
					  AND VENDER.VENDER_DIVISION = c_VenderDivTS
					 ) SALES
					,CLASSIFICATION CLASSIFICATION		--分類マスタ
				WHERE
					('ALL' = NVL(P_STR_VENDER_CD, 'ALL') OR
					 (SALES.VENDER_CD = P_STR_VENDER_CD AND SALES.INVOICE_CD IS NULL) OR
					 SALES.INVOICE_CD = P_STR_VENDER_CD
					)
				AND SALES.DATA_TYPE = CLASSIFICATION.DATA_TYPE
				AND SALES.CATEGORY_DIVISION = CLASSIFICATION.CATEGORY_DIVISION
				AND CLASSIFICATION.CLAIM_DIVISION = c_ClDiv1			--請求対象
				UNION ALL
				SELECT
					 SALES.ORGANIZATION_CD AS ORGANIZATION_CD						--部門コード
					,DECODE(SALES.INVOICE_CD, NULL, SALES.VENDER_CD, SALES.INVOICE_CD) AS VENDER_CD	--請求先コード
					,0 AS CLAIM_AMOUNT_FORWARD
					,0 AS CREDIT_AMOUNT_FORWARD
					,0 AS OTHER_CREDIT_AMOUNT_FORWARD
					,0 AS BALANCE_FORWARD
					,0 AS SALES_AMOUNT
					,0 AS SALES_RETURNED_AMOUNT
					,DECODE(SALES.TAX_DIVISION, '1', SALES.SALES_AMOUNT+SALES.TAX_AMOUNT
															, SALES.SALES_AMOUNT) AS SALES_DISCOUNT_AMOUNT	--値引金額(内税の場合は＋消費税額)
					,0 AS OTHER_SALES_AMOUNT
					,0 AS OFFSET_AMOUNT
					,DECODE(SALES.TAX_DIVISION, '0', SALES.TAX_AMOUNT, 0) AS TAX_AMOUNT	--消費税額(区分=外税のみ)
					,0 AS CLAIM_AMOUNT
				FROM
					 (SELECT
						 SALES.ORGANIZATION_CD
						,SALES.VENDER_CD
						,VENDER.PAYMENT_INVOICE_CD AS INVOICE_CD
						,SALES.TAX_DIVISION
						,SALES.SALES_AMOUNT
						,SALES.TAX_AMOUNT
						,SALES.ACCOUNT_YEARS
						,SALES.DATA_TOTAL_DIVISION
						,SALES.CLAIM_UPDATE_DIVISION
						,SALES.INVOICE_UPDATE_DATE
						,SALES.DELIVERY_COMP
						,SALES.APPROVAL_STATUS
						,SALES.DATA_TYPE
						,SALES.CATEGORY_DIVISION
					  FROM
						 SALES SALES						--売上トラン
						,VENDER VENDER
					  WHERE
						  ('ALL' = NVL(P_STR_ORGANIZATION_CD, 'ALL') OR SALES.ORGANIZATION_CD = P_STR_ORGANIZATION_CD)
					  AND SALES.ACCOUNT_YEARS <= p_nvAccountYears
					  AND SALES.DATA_TOTAL_DIVISION = c_DataDivUriNebiki	--値引
					  AND SALES.CLAIM_UPDATE_DIVISION = c_ClaimUpdDiv0		--未処理
					  AND SALES.INVOICE_UPDATE_DATE IS NULL
					  AND SALES.DELIVERY_COMP = c_DeliveryComp2				--完納
					  AND SALES.APPROVAL_STATUS = c_ApprovalSts3			--承認済
					  AND SALES.VENDER_CD = VENDER.VENDER_CD
					  AND VENDER.VENDER_DIVISION = c_VenderDivTS
					 ) SALES
					,CLASSIFICATION CLASSIFICATION		--分類マスタ
				WHERE
					('ALL' = NVL(P_STR_VENDER_CD, 'ALL') OR
					 (SALES.VENDER_CD = P_STR_VENDER_CD AND SALES.INVOICE_CD IS NULL) OR
					 SALES.INVOICE_CD = P_STR_VENDER_CD
					)
				AND SALES.DATA_TYPE = CLASSIFICATION.DATA_TYPE
				AND SALES.CATEGORY_DIVISION = CLASSIFICATION.CATEGORY_DIVISION
				AND CLASSIFICATION.CLAIM_DIVISION = c_ClDiv1			--請求対象
				UNION ALL
				SELECT
					 SALES.ORGANIZATION_CD AS ORGANIZATION_CD						--部門コード
					,DECODE(SALES.INVOICE_CD, NULL, SALES.VENDER_CD, SALES.INVOICE_CD) AS VENDER_CD	--請求先コード
					,0 AS CLAIM_AMOUNT_FORWARD
					,0 AS CREDIT_AMOUNT_FORWARD
					,0 AS OTHER_CREDIT_AMOUNT_FORWARD
					,0 AS BALANCE_FORWARD
					,0 AS SALES_AMOUNT
					,0 AS SALES_RETURNED_AMOUNT
					,0 AS SALES_DISCOUNT_AMOUNT
					,DECODE(SALES.TAX_DIVISION, '1', SALES.SALES_AMOUNT+SALES.TAX_AMOUNT
															, SALES.SALES_AMOUNT) AS OTHER_SALES_AMOUNT	--その他売上金額(内税の場合は＋消費税額)
					,0 AS OFFSET_AMOUNT
					,DECODE(SALES.TAX_DIVISION, '0', SALES.TAX_AMOUNT, 0) AS TAX_AMOUNT	--消費税額(区分=外税のみ)
					,0 AS CLAIM_AMOUNT
				FROM
					 (SELECT
						 SALES.ORGANIZATION_CD
						,SALES.VENDER_CD
						,VENDER.PAYMENT_INVOICE_CD AS INVOICE_CD
						,SALES.TAX_DIVISION
						,SALES.SALES_AMOUNT
						,SALES.TAX_AMOUNT
						,SALES.ACCOUNT_YEARS
						,SALES.DATA_TOTAL_DIVISION
						,SALES.CLAIM_UPDATE_DIVISION
						,SALES.INVOICE_UPDATE_DATE
						,SALES.DELIVERY_COMP
						,SALES.APPROVAL_STATUS
						,SALES.DATA_TYPE
						,SALES.CATEGORY_DIVISION
					  FROM
						 SALES SALES						--売上トラン
						,VENDER VENDER
					  WHERE
						  ('ALL' = NVL(P_STR_ORGANIZATION_CD, 'ALL') OR SALES.ORGANIZATION_CD = P_STR_ORGANIZATION_CD)
					  AND SALES.ACCOUNT_YEARS <= p_nvAccountYears
					  AND SALES.DATA_TOTAL_DIVISION = c_DataDivUriSonota		--その他売上
					  AND SALES.CLAIM_UPDATE_DIVISION = c_ClaimUpdDiv0		--未処理
					  AND SALES.INVOICE_UPDATE_DATE IS NULL
					  AND SALES.DELIVERY_COMP = c_DeliveryComp2				--完納
					  AND SALES.APPROVAL_STATUS = c_ApprovalSts3				--承認済
					  AND SALES.VENDER_CD = VENDER.VENDER_CD
					  AND VENDER.VENDER_DIVISION = c_VenderDivTS
					 ) SALES
					,CLASSIFICATION CLASSIFICATION		--分類マスタ
				WHERE
					('ALL' = NVL(P_STR_VENDER_CD, 'ALL') OR
					 (SALES.VENDER_CD = P_STR_VENDER_CD AND SALES.INVOICE_CD IS NULL) OR
					 SALES.INVOICE_CD = P_STR_VENDER_CD
					)
				AND SALES.DATA_TYPE = CLASSIFICATION.DATA_TYPE
				AND SALES.CATEGORY_DIVISION = CLASSIFICATION.CATEGORY_DIVISION
				AND CLASSIFICATION.CLAIM_DIVISION = c_ClDiv1			--請求対象
				)
			GROUP BY
				 ORGANIZATION_CD
				,VENDER_CD
			UNION ALL
			SELECT
				 ORGANIZATION_CD AS ORGANIZATION_CD											--部門コード
				,VENDER_CD AS VENDER_CD											--請求先コード
				,SUM(CLAIM_AMOUNT_FORWARD) AS CLAIM_AMOUNT_FORWARD					--前回請求額
				,SUM(CREDIT_AMOUNT_FORWARD) AS CREDIT_AMOUNT_FORWARD				--前回入金額
				,SUM(OTHER_CREDIT_AMOUNT_FORWARD) AS OTHER_CREDIT_AMOUNT_FORWARD	--その他入金金額
				,SUM(BALANCE_FORWARD) AS BALANCE_FORWARD							--差引繰越額
				,SUM(SALES_AMOUNT) AS SALES_AMOUNT									--今回売上額
				,SUM(SALES_RETURNED_AMOUNT) AS SALES_RETURNED_AMOUNT				--返品金額
				,SUM(SALES_DISCOUNT_AMOUNT) AS SALES_DISCOUNT_AMOUNT				--値引金額
				,SUM(OTHER_SALES_AMOUNT) AS OTHER_SALES_AMOUNT						--その他売上金額
				,SUM(OFFSET_AMOUNT) AS OFFSET_AMOUNT								--相殺金額
				,SUM(TAX_AMOUNT) AS TAX_AMOUNT										--消費税額
				,SUM(CLAIM_AMOUNT) AS CLAIM_AMOUNT									--今回請求額
			FROM
				(
				SELECT
					 CREDIT.ORGANIZATION_CD AS ORGANIZATION_CD						--部門コード
					,CREDIT.VENDER_CD AS VENDER_CD						--請求先コード
					,0 AS CLAIM_AMOUNT_FORWARD
					,CREDIT.CREDIT_AMOUNT AS CREDIT_AMOUNT_FORWARD			--前回入金額
					,0 AS OTHER_CREDIT_AMOUNT_FORWARD
					,0 AS BALANCE_FORWARD
					,0 AS SALES_AMOUNT
					,0 AS SALES_RETURNED_AMOUNT
					,0 AS SALES_DISCOUNT_AMOUNT
					,0 AS OTHER_SALES_AMOUNT
					,0 AS OFFSET_AMOUNT
					,0 AS TAX_AMOUNT
					,0 AS CLAIM_AMOUNT
				FROM
					 CREDIT CREDIT						--入金トラン
					,CLASSIFICATION CLASSIFICATION		--分類マスタ
				WHERE
					('ALL' = NVL(P_STR_ORGANIZATION_CD, 'ALL') OR CREDIT.ORGANIZATION_CD = P_STR_ORGANIZATION_CD)
				AND	('ALL' = NVL(P_STR_VENDER_CD, 'ALL') OR CREDIT.VENDER_CD = P_STR_VENDER_CD)
				AND CREDIT.CREDIT_DATE <= p_daCreditDate
				AND CREDIT.DATA_TOTAL_DIVISION = c_DataDivNyuNyukin		--入金
				AND CREDIT.CLAIM_UPDATE_DIVISION = c_ClaimUpdDiv0		--未処理
				AND CREDIT.INVOICE_UPDATE_DATE IS NULL
				AND CREDIT.APPROVAL_STATUS = c_ApprovalSts3				--承認済
				AND CREDIT.DATA_TYPE = CLASSIFICATION.DATA_TYPE
				AND CREDIT.CATEGORY_DIVISION = CLASSIFICATION.CATEGORY_DIVISION
				AND CLASSIFICATION.CLAIM_DIVISION = c_ClDiv1			--請求対象
				UNION ALL
				SELECT
					 CREDIT.ORGANIZATION_CD AS ORGANIZATION_CD						--部門コード
					,CREDIT.VENDER_CD AS VENDER_CD						--請求先コード
					,0 AS CLAIM_AMOUNT_FORWARD
					,0 AS CREDIT_AMOUNT_FORWARD
					,0 AS OTHER_CREDIT_AMOUNT_FORWARD
					,0 AS BALANCE_FORWARD
					,0 AS SALES_AMOUNT
					,0 AS SALES_RETURNED_AMOUNT
					,0 AS SALES_DISCOUNT_AMOUNT
					,0 AS OTHER_SALES_AMOUNT
					,CREDIT.CREDIT_AMOUNT AS OFFSET_AMOUNT					--入金相殺金額
					,0 AS TAX_AMOUNT
					,0 AS CLAIM_AMOUNT
				FROM
					 CREDIT CREDIT						--入金トラン
					,CLASSIFICATION CLASSIFICATION		--分類マスタ
				WHERE
					('ALL' = NVL(P_STR_ORGANIZATION_CD, 'ALL') OR CREDIT.ORGANIZATION_CD = P_STR_ORGANIZATION_CD)
				AND	('ALL' = NVL(P_STR_VENDER_CD, 'ALL') OR CREDIT.VENDER_CD = P_STR_VENDER_CD)
				AND CREDIT.CREDIT_DATE <= p_daCreditDate
				AND CREDIT.DATA_TOTAL_DIVISION = c_DataDivNyuSousai		--相殺
				AND CREDIT.CLAIM_UPDATE_DIVISION = c_ClaimUpdDiv0		--未処理
				AND CREDIT.INVOICE_UPDATE_DATE IS NULL
				AND CREDIT.APPROVAL_STATUS = c_ApprovalSts3				--承認済
				AND CREDIT.DATA_TYPE = CLASSIFICATION.DATA_TYPE
				AND CREDIT.CATEGORY_DIVISION = CLASSIFICATION.CATEGORY_DIVISION
				AND CLASSIFICATION.CLAIM_DIVISION = c_ClDiv1			--請求対象
				UNION ALL
				SELECT
					 CREDIT.ORGANIZATION_CD AS ORGANIZATION_CD						--部門コード
					,CREDIT.VENDER_CD AS VENDER_CD						--請求先コード
					,0 AS CLAIM_AMOUNT_FORWARD
					,0 AS CREDIT_AMOUNT_FORWARD
					,CREDIT.CREDIT_AMOUNT AS OTHER_CREDIT_AMOUNT_FORWARD	--前回その他入金額
					,0 AS BALANCE_FORWARD
					,0 AS SALES_AMOUNT
					,0 AS SALES_RETURNED_AMOUNT
					,0 AS SALES_DISCOUNT_AMOUNT
					,0 AS OTHER_SALES_AMOUNT
					,0 AS OFFSET_AMOUNT
					,0 AS TAX_AMOUNT
					,0 AS CLAIM_AMOUNT
				FROM
					 CREDIT CREDIT						--入金トラン
					,CLASSIFICATION CLASSIFICATION		--分類マスタ
				WHERE
					('ALL' = NVL(P_STR_ORGANIZATION_CD, 'ALL') OR CREDIT.ORGANIZATION_CD = P_STR_ORGANIZATION_CD)
				AND	('ALL' = NVL(P_STR_VENDER_CD, 'ALL') OR CREDIT.VENDER_CD = P_STR_VENDER_CD)
				AND CREDIT.CREDIT_DATE <= p_daCreditDate
				AND CREDIT.DATA_TOTAL_DIVISION = c_DataDivNyuSonota		--その他入金
				AND CREDIT.CLAIM_UPDATE_DIVISION = c_ClaimUpdDiv0		--未処理
				AND CREDIT.INVOICE_UPDATE_DATE IS NULL
				AND CREDIT.APPROVAL_STATUS = c_ApprovalSts3				--承認済
				AND CREDIT.DATA_TYPE = CLASSIFICATION.DATA_TYPE
				AND CREDIT.CATEGORY_DIVISION = CLASSIFICATION.CATEGORY_DIVISION
				AND CLASSIFICATION.CLAIM_DIVISION = c_ClDiv1			--請求対象
				)
			GROUP BY
				 ORGANIZATION_CD
				,VENDER_CD
			UNION ALL
			SELECT
				 ORGANIZATION_CD AS ORGANIZATION_CD											--部門コード
				,VENDER_CD AS VENDER_CD											--請求先コード
				,SUM(CLAIM_AMOUNT_FORWARD) AS CLAIM_AMOUNT_FORWARD					--前回請求額
				,SUM(CREDIT_AMOUNT_FORWARD) AS CREDIT_AMOUNT_FORWARD				--前回入金額
				,SUM(OTHER_CREDIT_AMOUNT_FORWARD) AS OTHER_CREDIT_AMOUNT_FORWARD	--その他入金金額
				,SUM(BALANCE_FORWARD) AS BALANCE_FORWARD							--差引繰越額
				,SUM(SALES_AMOUNT) AS SALES_AMOUNT									--今回売上額
				,SUM(SALES_RETURNED_AMOUNT) AS SALES_RETURNED_AMOUNT				--返品金額
				,SUM(SALES_DISCOUNT_AMOUNT) AS SALES_DISCOUNT_AMOUNT				--値引金額
				,SUM(OTHER_SALES_AMOUNT) AS OTHER_SALES_AMOUNT						--その他売上金額
				,SUM(OFFSET_AMOUNT) AS OFFSET_AMOUNT								--相殺金額
				,SUM(TAX_AMOUNT) AS TAX_AMOUNT										--消費税額
				,SUM(CLAIM_AMOUNT) AS CLAIM_AMOUNT									--今回請求額
			FROM
				(
				SELECT
					 PAYMENT.ORGANIZATION_CD AS ORGANIZATION_CD						--部門コード
					,PAYMENT.SUPPLIER_CD AS VENDER_CD						--仕入先コード
					,0 AS CLAIM_AMOUNT_FORWARD
					,0 AS CREDIT_AMOUNT_FORWARD
					,0 AS OTHER_CREDIT_AMOUNT_FORWARD
					,0 AS BALANCE_FORWARD
					,0 AS SALES_AMOUNT
					,0 AS SALES_RETURNED_AMOUNT
					,0 AS SALES_DISCOUNT_AMOUNT
					,0 AS OTHER_SALES_AMOUNT
					,PAYMENT.PAYMENT_AMOUNT AS OFFSET_AMOUNT				--支払相殺金額
					,0 AS TAX_AMOUNT
					,0 AS CLAIM_AMOUNT
				FROM
					 PAYMENT PAYMENT					--支払トラン
					,CLASSIFICATION CLASSIFICATION		--分類マスタ
				WHERE
					('ALL' = NVL(P_STR_ORGANIZATION_CD, 'ALL') OR PAYMENT.ORGANIZATION_CD = P_STR_ORGANIZATION_CD)
				AND	('ALL' = NVL(P_STR_VENDER_CD, 'ALL') OR PAYMENT.SUPPLIER_CD = P_STR_VENDER_CD)
				AND PAYMENT.PAYMENT_DATE <= p_daCreditDate
				AND PAYMENT.DATA_TOTAL_DIVISION = c_DataDivShiSousai	--相殺
				AND PAYMENT.CLAIM_UPDATE_DIVISION = c_ClaimUpdDiv0		--未処理
				AND PAYMENT.INVOICE_UPDATE_DATE IS NULL
				AND PAYMENT.APPROVAL_STATUS = c_ApprovalSts3			--承認済
				AND PAYMENT.DATA_TYPE = CLASSIFICATION.DATA_TYPE
				AND PAYMENT.CATEGORY_DIVISION = CLASSIFICATION.CATEGORY_DIVISION
				AND CLASSIFICATION.CLAIM_DIVISION = c_ClDiv1			--請求対象
				)
			GROUP BY
				 ORGANIZATION_CD
				,VENDER_CD
			UNION ALL
			SELECT
				 ORGANIZATION_CD AS ORGANIZATION_CD											--部門コード
				,VENDER_CD AS VENDER_CD											--請求先コード
				,SUM(CLAIM_AMOUNT_FORWARD) AS CLAIM_AMOUNT_FORWARD					--前回請求額
				,SUM(CREDIT_AMOUNT_FORWARD) AS CREDIT_AMOUNT_FORWARD				--前回入金額
				,SUM(OTHER_CREDIT_AMOUNT_FORWARD) AS OTHER_CREDIT_AMOUNT_FORWARD	--その他入金金額
				,SUM(BALANCE_FORWARD) AS BALANCE_FORWARD							--差引繰越額
				,SUM(SALES_AMOUNT) AS SALES_AMOUNT									--今回売上額
				,SUM(SALES_RETURNED_AMOUNT) AS SALES_RETURNED_AMOUNT				--返品金額
				,SUM(SALES_DISCOUNT_AMOUNT) AS SALES_DISCOUNT_AMOUNT				--値引金額
				,SUM(OTHER_SALES_AMOUNT) AS OTHER_SALES_AMOUNT						--その他売上金額
				,SUM(OFFSET_AMOUNT) AS OFFSET_AMOUNT								--相殺金額
				,SUM(TAX_AMOUNT) AS TAX_AMOUNT										--消費税額
				,SUM(CLAIM_AMOUNT) AS CLAIM_AMOUNT									--今回請求額
			FROM
				(
				SELECT
					 OFFSET.ORGANIZATION_CD AS ORGANIZATION_CD						--部門コード
					,OFFSET.VENDER_CD AS VENDER_CD						--請求先コード
					,0 AS CLAIM_AMOUNT_FORWARD
					,0 AS CREDIT_AMOUNT_FORWARD
					,0 AS OTHER_CREDIT_AMOUNT_FORWARD
					,0 AS BALANCE_FORWARD
					,0 AS SALES_AMOUNT
					,0 AS SALES_RETURNED_AMOUNT
					,0 AS SALES_DISCOUNT_AMOUNT
					,0 AS OTHER_SALES_AMOUNT
					,OFFSET.DEPOSIT_OFFSET_AMOUNT AS OFFSET_AMOUNT			--売掛相殺金額
					,0 AS TAX_AMOUNT
					,0 AS CLAIM_AMOUNT
				FROM
					 OFFSET_GROUP_DATA OFFSET				--グループ間トラン
					,CLASSIFICATION CLASSIFICATION			--分類マスタ
				WHERE
					('ALL' = NVL(P_STR_ORGANIZATION_CD, 'ALL') OR OFFSET.ORGANIZATION_CD = P_STR_ORGANIZATION_CD)
				AND	('ALL' = NVL(P_STR_VENDER_CD, 'ALL') OR OFFSET.VENDER_CD = P_STR_VENDER_CD)
				AND OFFSET.OFFSET_DATE <= p_daCreditDate
				AND OFFSET.DATA_TOTAL_DIVISION = c_DataDivSouSousai		--グループ間相殺
				AND OFFSET.CLAIM_UPDATE_DIVISION = c_ClaimUpdDiv0		--未処理
				AND OFFSET.INVOICE_UPDATE_DATE IS NULL
				AND OFFSET.DEPOSIT_OFFSET_AMOUNT IS NOT NULL			--売掛相殺金額
				AND OFFSET.APPROVAL_STATUS = c_ApprovalSts3				--承認済
				AND OFFSET.VENDER_DIVISION = c_VenderDivTS				--得意先
				AND OFFSET.DATA_TYPE = CLASSIFICATION.DATA_TYPE
				AND OFFSET.CATEGORY_DIVISION = CLASSIFICATION.CATEGORY_DIVISION
				AND CLASSIFICATION.CLAIM_DIVISION = c_ClDiv1			--請求対象
				)
			GROUP BY
				 ORGANIZATION_CD
				,VENDER_CD
			UNION ALL
			SELECT
				 ORGANIZATION_CD AS ORGANIZATION_CD											--部門コード
				,VENDER_CD AS VENDER_CD											--請求先コード
				,SUM(CLAIM_AMOUNT_FORWARD) AS CLAIM_AMOUNT_FORWARD					--前回請求額
				,SUM(CREDIT_AMOUNT_FORWARD) AS CREDIT_AMOUNT_FORWARD				--前回入金額
				,SUM(OTHER_CREDIT_AMOUNT_FORWARD) AS OTHER_CREDIT_AMOUNT_FORWARD	--その他入金金額
				,SUM(BALANCE_FORWARD) AS BALANCE_FORWARD							--差引繰越額
				,SUM(SALES_AMOUNT) AS SALES_AMOUNT									--今回売上額
				,SUM(SALES_RETURNED_AMOUNT) AS SALES_RETURNED_AMOUNT				--返品金額
				,SUM(SALES_DISCOUNT_AMOUNT) AS SALES_DISCOUNT_AMOUNT				--値引金額
				,SUM(OTHER_SALES_AMOUNT) AS OTHER_SALES_AMOUNT						--その他売上金額
				,SUM(OFFSET_AMOUNT) AS OFFSET_AMOUNT								--相殺金額
				,SUM(TAX_AMOUNT) AS TAX_AMOUNT										--消費税額
				,SUM(CLAIM_AMOUNT) AS CLAIM_AMOUNT									--今回請求額
			FROM
				(
				SELECT
					 HEADER.ORGANIZATION_CD AS ORGANIZATION_CD				--部門コード
					,HEADER.VENDER_CD AS VENDER_CD				--請求先コード
					,HEADER.CLAIM_AMOUNT AS CLAIM_AMOUNT_FORWARD	--前回請求額
					,0 AS CREDIT_AMOUNT_FORWARD
					,0 AS OTHER_CREDIT_AMOUNT_FORWARD
					,0 AS BALANCE_FORWARD
					,0 AS SALES_AMOUNT
					,0 AS SALES_RETURNED_AMOUNT
					,0 AS SALES_DISCOUNT_AMOUNT
					,0 AS OTHER_SALES_AMOUNT
					,0 AS OFFSET_AMOUNT
					,0 AS TAX_AMOUNT
					,0 AS CLAIM_AMOUNT
				FROM
					 CLAIM_HEADER HEADER		--請求ヘッダー
					,(SELECT
						 ORGANIZATION_CD
						,VENDER_CD
						,MAX(CREDIT_DATE) MAX_DATE
					  FROM
					  	CLAIM_HEADER
					  WHERE
					  	CREDIT_DATE < p_daCreditDate
					  GROUP BY
						 ORGANIZATION_CD
						,VENDER_CD
					 ) MAX_HEADER
				WHERE
					('ALL' = NVL(P_STR_ORGANIZATION_CD, 'ALL') OR HEADER.ORGANIZATION_CD = P_STR_ORGANIZATION_CD)
				AND	('ALL' = NVL(P_STR_VENDER_CD, 'ALL') OR HEADER.VENDER_CD = P_STR_VENDER_CD)
				AND	HEADER.CLAIM_AMOUNT <> 0
				AND HEADER.ORGANIZATION_CD = MAX_HEADER.ORGANIZATION_CD
				AND HEADER.VENDER_CD = MAX_HEADER.VENDER_CD
				AND HEADER.CREDIT_DATE = MAX_HEADER.MAX_DATE
				)
			GROUP BY
				 ORGANIZATION_CD
				,VENDER_CD
			 ) TRN
			,(
			SELECT
				VENDER_CD
			FROM (
					SELECT
						VENDER_CD
					,	DECODE(CLOSING_DATE, 99, TO_NUMBER(SUBSTR(TO_CHAR(LAST_DAY(p_daCreditDate), 'YYYYMMDD'), 7, 2)),
							CASE WHEN TO_NUMBER(SUBSTR(TO_CHAR(LAST_DAY(p_daCreditDate), 'YYYYMMDD'), 7, 2)) < CLOSING_DATE 
									THEN TO_NUMBER(SUBSTR(TO_CHAR(LAST_DAY(p_daCreditDate), 'YYYYMMDD'), 7, 2))
								 ELSE CLOSING_DATE
							END
						) CLOSING_DATE
					FROM
						VENDER
					WHERE
						('ALL' = NVL(P_STR_VENDER_CD, 'ALL') OR VENDER_CD = P_STR_VENDER_CD)
					AND VENDER_DIVISION = c_VenderDivTS
					AND (PAYMENT_INVOICE_CD IS NULL OR VENDER.PAYMENT_INVOICE_CD = VENDER_CD)
				)
			WHERE
				CLOSING_DATE = TO_NUMBER(SUBSTR(TO_CHAR(p_daCreditDate, 'YYYYMMDD'), 7, 2))
			 ) VENDER											-- 請求先.締日と画面の締日が一致する請求先のテーブル
		WHERE
			TRN.VENDER_CD = VENDER.VENDER_CD
		GROUP BY
			 ORGANIZATION_CD
			,VENDER_CD
		ORDER BY
			 ORGANIZATION_CD
			,VENDER_CD
	;

	--仮締め請求データ抽出 カーソル
	CURSOR curTempSales(
		p_daCreditDate		IN	DATE
	   ,p_nvAccountYears	IN	TEMPORARY_CLAIM_SALES.ACCOUNT_YEARS%TYPE
	)	IS
		SELECT
			 ORGANIZATION_CD AS ORGANIZATION_CD											--部門コード
			,VENDER_CD AS VENDER_CD											--請求先コード
			,SUM(CLAIM_AMOUNT_FORWARD) AS CLAIM_AMOUNT_FORWARD					--前回請求額
			,SUM(CREDIT_AMOUNT_FORWARD) AS CREDIT_AMOUNT_FORWARD				--前回入金額
			,SUM(OTHER_CREDIT_AMOUNT_FORWARD) AS OTHER_CREDIT_AMOUNT_FORWARD	--その他入金金額
			,SUM(CLAIM_AMOUNT_FORWARD - (CREDIT_AMOUNT_FORWARD + OTHER_CREDIT_AMOUNT_FORWARD)) AS BALANCE_FORWARD	--差引繰越額
			,SUM(SALES_AMOUNT) AS SALES_AMOUNT									--今回売上額
			,SUM(SALES_RETURNED_AMOUNT) AS SALES_RETURNED_AMOUNT				--返品金額
			,SUM(SALES_DISCOUNT_AMOUNT) AS SALES_DISCOUNT_AMOUNT				--値引金額
			,SUM(OTHER_SALES_AMOUNT) AS OTHER_SALES_AMOUNT						--その他売上金額
			,SUM(OFFSET_AMOUNT) AS OFFSET_AMOUNT								--相殺金額
			,SUM(TAX_AMOUNT) AS TAX_AMOUNT										--消費税額
			,SUM((CLAIM_AMOUNT_FORWARD+SALES_AMOUNT+SALES_RETURNED_AMOUNT+SALES_DISCOUNT_AMOUNT+OTHER_SALES_AMOUNT+TAX_AMOUNT)
					-  (CREDIT_AMOUNT_FORWARD + OTHER_CREDIT_AMOUNT_FORWARD + OFFSET_AMOUNT)) AS CLAIM_AMOUNT		--今回請求額
		FROM (
			SELECT
				 ORGANIZATION_CD AS ORGANIZATION_CD											--部門コード
				,VENDER_CD AS VENDER_CD											--請求先コード
				,SUM(CLAIM_AMOUNT_FORWARD) AS CLAIM_AMOUNT_FORWARD					--前回請求額
				,SUM(CREDIT_AMOUNT_FORWARD) AS CREDIT_AMOUNT_FORWARD				--前回入金額
				,SUM(OTHER_CREDIT_AMOUNT_FORWARD) AS OTHER_CREDIT_AMOUNT_FORWARD	--その他入金金額
				,SUM(BALANCE_FORWARD) AS BALANCE_FORWARD							--差引繰越額
				,SUM(SALES_AMOUNT) AS SALES_AMOUNT									--今回売上額
				,SUM(SALES_RETURNED_AMOUNT) AS SALES_RETURNED_AMOUNT				--返品金額
				,SUM(SALES_DISCOUNT_AMOUNT) AS SALES_DISCOUNT_AMOUNT				--値引金額
				,SUM(OTHER_SALES_AMOUNT) AS OTHER_SALES_AMOUNT						--その他売上金額
				,SUM(OFFSET_AMOUNT) AS OFFSET_AMOUNT								--相殺金額
				,SUM(TAX_AMOUNT) AS TAX_AMOUNT										--消費税額
				,SUM(CLAIM_AMOUNT) AS CLAIM_AMOUNT									--今回請求額
			FROM
				(
				SELECT
					 SALES.ORGANIZATION_CD AS ORGANIZATION_CD						--部門コード
					,DECODE(SALES.INVOICE_CD, NULL, SALES.VENDER_CD, SALES.INVOICE_CD) AS VENDER_CD	--請求先コード
					,0 AS CLAIM_AMOUNT_FORWARD
					,0 AS CREDIT_AMOUNT_FORWARD
					,0 AS OTHER_CREDIT_AMOUNT_FORWARD
					,0 AS BALANCE_FORWARD
					,DECODE(SALES.TAX_DIVISION, '1', SALES.SALES_AMOUNT+SALES.TAX_AMOUNT
															, SALES.SALES_AMOUNT) AS SALES_AMOUNT	--今回売上額(内税の場合は＋消費税額)
					,0 AS SALES_RETURNED_AMOUNT
					,0 AS SALES_DISCOUNT_AMOUNT
					,0 AS OTHER_SALES_AMOUNT
					,0 AS OFFSET_AMOUNT
					,DECODE(SALES.TAX_DIVISION, '0', SALES.TAX_AMOUNT, 0) AS TAX_AMOUNT	--消費税額(区分=外税のみ)
					,0 AS CLAIM_AMOUNT
				FROM
					 (SELECT
						 SALES.ORGANIZATION_CD
						,SALES.VENDER_CD
						,VENDER.PAYMENT_INVOICE_CD AS INVOICE_CD
						,SALES.TAX_DIVISION
						,SALES.SALES_AMOUNT
						,SALES.TAX_AMOUNT
						,SALES.ACCOUNT_YEARS
						,SALES.DATA_TOTAL_DIVISION
						,SALES.CLAIM_UPDATE_DIVISION
						,SALES.INVOICE_UPDATE_DATE
						,SALES.DELIVERY_COMP
						,SALES.APPROVAL_STATUS
						,SALES.DATA_TYPE
						,SALES.CATEGORY_DIVISION
					  FROM
						 TEMPORARY_CLAIM_SALES SALES	--仮締め売上トラン
						,VENDER VENDER
					  WHERE
						  ('ALL' = NVL(P_STR_ORGANIZATION_CD, 'ALL') OR SALES.ORGANIZATION_CD = P_STR_ORGANIZATION_CD)
					  AND SALES.ACCOUNT_YEARS <= p_nvAccountYears
					  AND SALES.DATA_TOTAL_DIVISION = c_DataDivUriUriage	--売上
					  AND SALES.CLAIM_UPDATE_DIVISION = c_ClaimUpdDiv0		--未処理
					  AND SALES.INVOICE_UPDATE_DATE IS NULL
					  AND SALES.DELIVERY_COMP = c_DeliveryComp2				--完納
					  AND SALES.APPROVAL_STATUS = c_ApprovalSts3			--承認済
					  AND SALES.VENDER_CD = VENDER.VENDER_CD
					  AND VENDER.VENDER_DIVISION = c_VenderDivTS
					 ) SALES
					,CLASSIFICATION CLASSIFICATION		--分類マスタ
				WHERE
					('ALL' = NVL(P_STR_VENDER_CD, 'ALL') OR
					 (SALES.VENDER_CD = P_STR_VENDER_CD AND SALES.INVOICE_CD IS NULL) OR
					 SALES.INVOICE_CD = P_STR_VENDER_CD
					)
				AND SALES.DATA_TYPE = CLASSIFICATION.DATA_TYPE
				AND SALES.CATEGORY_DIVISION = CLASSIFICATION.CATEGORY_DIVISION
				AND CLASSIFICATION.CLAIM_DIVISION = c_ClDiv1			--請求対象
				UNION ALL
				SELECT
					 SALES.ORGANIZATION_CD AS ORGANIZATION_CD						--部門コード
					,DECODE(SALES.INVOICE_CD, NULL, SALES.VENDER_CD, SALES.INVOICE_CD) AS VENDER_CD	--請求先コード
					,0 AS CLAIM_AMOUNT_FORWARD
					,0 AS CREDIT_AMOUNT_FORWARD
					,0 AS OTHER_CREDIT_AMOUNT_FORWARD
					,0 AS BALANCE_FORWARD
					,0 AS SALES_AMOUNT
					,DECODE(SALES.TAX_DIVISION, '1', SALES.SALES_AMOUNT+SALES.TAX_AMOUNT
															, SALES.SALES_AMOUNT) AS SALES_RETURNED_AMOUNT	--返品金額(内税の場合は＋消費税額)
					,0 AS SALES_DISCOUNT_AMOUNT
					,0 AS OTHER_SALES_AMOUNT
					,0 AS OFFSET_AMOUNT
					,DECODE(SALES.TAX_DIVISION, '0', SALES.TAX_AMOUNT, 0) AS TAX_AMOUNT	--消費税額(区分=外税のみ)
					,0 AS CLAIM_AMOUNT
				FROM
					 (SELECT
						 SALES.ORGANIZATION_CD
						,SALES.VENDER_CD
						,VENDER.PAYMENT_INVOICE_CD AS INVOICE_CD
						,SALES.TAX_DIVISION
						,SALES.SALES_AMOUNT
						,SALES.TAX_AMOUNT
						,SALES.ACCOUNT_YEARS
						,SALES.DATA_TOTAL_DIVISION
						,SALES.CLAIM_UPDATE_DIVISION
						,SALES.INVOICE_UPDATE_DATE
						,SALES.DELIVERY_COMP
						,SALES.APPROVAL_STATUS
						,SALES.DATA_TYPE
						,SALES.CATEGORY_DIVISION
					  FROM
						 TEMPORARY_CLAIM_SALES SALES	--仮締め売上トラン
						,VENDER VENDER
					  WHERE
						  ('ALL' = NVL(P_STR_ORGANIZATION_CD, 'ALL') OR SALES.ORGANIZATION_CD = P_STR_ORGANIZATION_CD)
					  AND SALES.ACCOUNT_YEARS <= p_nvAccountYears
					  AND SALES.DATA_TOTAL_DIVISION = c_DataDivUriHenpin	--返品
					  AND SALES.CLAIM_UPDATE_DIVISION = c_ClaimUpdDiv0		--未処理
					  AND SALES.INVOICE_UPDATE_DATE IS NULL
					  AND SALES.DELIVERY_COMP = c_DeliveryComp2				--完納
					  AND SALES.APPROVAL_STATUS = c_ApprovalSts3			--承認済
					  AND SALES.VENDER_CD = VENDER.VENDER_CD
					  AND VENDER.VENDER_DIVISION = c_VenderDivTS
					 ) SALES
					,CLASSIFICATION CLASSIFICATION		--分類マスタ
				WHERE
					('ALL' = NVL(P_STR_VENDER_CD, 'ALL') OR
					 (SALES.VENDER_CD = P_STR_VENDER_CD AND SALES.INVOICE_CD IS NULL) OR
					 SALES.INVOICE_CD = P_STR_VENDER_CD
					)
				AND SALES.DATA_TYPE = CLASSIFICATION.DATA_TYPE
				AND SALES.CATEGORY_DIVISION = CLASSIFICATION.CATEGORY_DIVISION
				AND CLASSIFICATION.CLAIM_DIVISION = c_ClDiv1			--請求対象
				UNION ALL
				SELECT
					 SALES.ORGANIZATION_CD AS ORGANIZATION_CD						--部門コード
					,DECODE(SALES.INVOICE_CD, NULL, SALES.VENDER_CD, SALES.INVOICE_CD) AS VENDER_CD	--請求先コード
					,0 AS CLAIM_AMOUNT_FORWARD
					,0 AS CREDIT_AMOUNT_FORWARD
					,0 AS OTHER_CREDIT_AMOUNT_FORWARD
					,0 AS BALANCE_FORWARD
					,0 AS SALES_AMOUNT
					,0 AS SALES_RETURNED_AMOUNT
					,DECODE(SALES.TAX_DIVISION, '1', SALES.SALES_AMOUNT+SALES.TAX_AMOUNT
															, SALES.SALES_AMOUNT) AS SALES_DISCOUNT_AMOUNT	--値引金額(内税の場合は＋消費税額)
					,0 AS OTHER_SALES_AMOUNT
					,0 AS OFFSET_AMOUNT
					,DECODE(SALES.TAX_DIVISION, '0', SALES.TAX_AMOUNT, 0) AS TAX_AMOUNT	--消費税額(区分=外税のみ)
					,0 AS CLAIM_AMOUNT
				FROM
					 (SELECT
						 SALES.ORGANIZATION_CD
						,SALES.VENDER_CD
						,VENDER.PAYMENT_INVOICE_CD AS INVOICE_CD
						,SALES.TAX_DIVISION
						,SALES.SALES_AMOUNT
						,SALES.TAX_AMOUNT
						,SALES.ACCOUNT_YEARS
						,SALES.DATA_TOTAL_DIVISION
						,SALES.CLAIM_UPDATE_DIVISION
						,SALES.INVOICE_UPDATE_DATE
						,SALES.DELIVERY_COMP
						,SALES.APPROVAL_STATUS
						,SALES.DATA_TYPE
						,SALES.CATEGORY_DIVISION
					  FROM
						 TEMPORARY_CLAIM_SALES SALES	--仮締め売上トラン
						,VENDER VENDER
					  WHERE
						  ('ALL' = NVL(P_STR_ORGANIZATION_CD, 'ALL') OR SALES.ORGANIZATION_CD = P_STR_ORGANIZATION_CD)
					  AND SALES.ACCOUNT_YEARS <= p_nvAccountYears
					  AND SALES.DATA_TOTAL_DIVISION = c_DataDivUriNebiki	--値引
					  AND SALES.CLAIM_UPDATE_DIVISION = c_ClaimUpdDiv0		--未処理
					  AND SALES.INVOICE_UPDATE_DATE IS NULL
					  AND SALES.DELIVERY_COMP = c_DeliveryComp2				--完納
					  AND SALES.APPROVAL_STATUS = c_ApprovalSts3			--承認済
					  AND SALES.VENDER_CD = VENDER.VENDER_CD
					  AND VENDER.VENDER_DIVISION = c_VenderDivTS
					 ) SALES
					,CLASSIFICATION CLASSIFICATION		--分類マスタ
				WHERE
					('ALL' = NVL(P_STR_VENDER_CD, 'ALL') OR
					 (SALES.VENDER_CD = P_STR_VENDER_CD AND SALES.INVOICE_CD IS NULL) OR
					 SALES.INVOICE_CD = P_STR_VENDER_CD
					)
				AND SALES.DATA_TYPE = CLASSIFICATION.DATA_TYPE
				AND SALES.CATEGORY_DIVISION = CLASSIFICATION.CATEGORY_DIVISION
				AND CLASSIFICATION.CLAIM_DIVISION = c_ClDiv1			--請求対象
				UNION ALL
				SELECT
					 SALES.ORGANIZATION_CD AS ORGANIZATION_CD						--部門コード
					,DECODE(SALES.INVOICE_CD, NULL, SALES.VENDER_CD, SALES.INVOICE_CD) AS VENDER_CD	--請求先コード
					,0 AS CLAIM_AMOUNT_FORWARD
					,0 AS CREDIT_AMOUNT_FORWARD
					,0 AS OTHER_CREDIT_AMOUNT_FORWARD
					,0 AS BALANCE_FORWARD
					,0 AS SALES_AMOUNT
					,0 AS SALES_RETURNED_AMOUNT
					,0 AS SALES_DISCOUNT_AMOUNT
					,DECODE(SALES.TAX_DIVISION, '1', SALES.SALES_AMOUNT+SALES.TAX_AMOUNT
															, SALES.SALES_AMOUNT) AS OTHER_SALES_AMOUNT	--その他売上金額(内税の場合は＋消費税額)
					,0 AS OFFSET_AMOUNT
					,DECODE(SALES.TAX_DIVISION, '0', SALES.TAX_AMOUNT, 0) AS TAX_AMOUNT	--消費税額(区分=外税のみ)
					,0 AS CLAIM_AMOUNT
				FROM
					 (SELECT
						 SALES.ORGANIZATION_CD
						,SALES.VENDER_CD
						,VENDER.PAYMENT_INVOICE_CD AS INVOICE_CD
						,SALES.TAX_DIVISION
						,SALES.SALES_AMOUNT
						,SALES.TAX_AMOUNT
						,SALES.ACCOUNT_YEARS
						,SALES.DATA_TOTAL_DIVISION
						,SALES.CLAIM_UPDATE_DIVISION
						,SALES.INVOICE_UPDATE_DATE
						,SALES.DELIVERY_COMP
						,SALES.APPROVAL_STATUS
						,SALES.DATA_TYPE
						,SALES.CATEGORY_DIVISION
					  FROM
						 TEMPORARY_CLAIM_SALES SALES	--仮締め売上トラン
						,VENDER VENDER
					  WHERE
						('ALL' = NVL(P_STR_ORGANIZATION_CD, 'ALL') OR SALES.ORGANIZATION_CD = P_STR_ORGANIZATION_CD)
					  AND SALES.ACCOUNT_YEARS <= p_nvAccountYears
					  AND SALES.DATA_TOTAL_DIVISION = c_DataDivUriSonota	--その他売上
					  AND SALES.CLAIM_UPDATE_DIVISION = c_ClaimUpdDiv0		--未処理
					  AND SALES.INVOICE_UPDATE_DATE IS NULL
					  AND SALES.DELIVERY_COMP = c_DeliveryComp2				--完納
					  AND SALES.APPROVAL_STATUS = c_ApprovalSts3			--承認済
					  AND SALES.VENDER_CD = VENDER.VENDER_CD
					  AND VENDER.VENDER_DIVISION = c_VenderDivTS
					 ) SALES
					,CLASSIFICATION CLASSIFICATION		--分類マスタ
				WHERE
					('ALL' = NVL(P_STR_VENDER_CD, 'ALL') OR
					 (SALES.VENDER_CD = P_STR_VENDER_CD AND SALES.INVOICE_CD IS NULL) OR
					 SALES.INVOICE_CD = P_STR_VENDER_CD
					)
				AND SALES.DATA_TYPE = CLASSIFICATION.DATA_TYPE
				AND SALES.CATEGORY_DIVISION = CLASSIFICATION.CATEGORY_DIVISION
				AND CLASSIFICATION.CLAIM_DIVISION = c_ClDiv1			--請求対象
				)
			GROUP BY
				 ORGANIZATION_CD
				,VENDER_CD
			UNION ALL
			SELECT
				 ORGANIZATION_CD AS ORGANIZATION_CD											--部門コード
				,VENDER_CD AS VENDER_CD											--請求先コード
				,SUM(CLAIM_AMOUNT_FORWARD) AS CLAIM_AMOUNT_FORWARD					--前回請求額
				,SUM(CREDIT_AMOUNT_FORWARD) AS CREDIT_AMOUNT_FORWARD				--前回入金額
				,SUM(OTHER_CREDIT_AMOUNT_FORWARD) AS OTHER_CREDIT_AMOUNT_FORWARD	--その他入金金額
				,SUM(BALANCE_FORWARD) AS BALANCE_FORWARD							--差引繰越額
				,SUM(SALES_AMOUNT) AS SALES_AMOUNT									--今回売上額
				,SUM(SALES_RETURNED_AMOUNT) AS SALES_RETURNED_AMOUNT				--返品金額
				,SUM(SALES_DISCOUNT_AMOUNT) AS SALES_DISCOUNT_AMOUNT				--値引金額
				,SUM(OTHER_SALES_AMOUNT) AS OTHER_SALES_AMOUNT						--その他売上金額
				,SUM(OFFSET_AMOUNT) AS OFFSET_AMOUNT								--相殺金額
				,SUM(TAX_AMOUNT) AS TAX_AMOUNT										--消費税額
				,SUM(CLAIM_AMOUNT) AS CLAIM_AMOUNT									--今回請求額
			FROM
				(
				SELECT
					 CREDIT.ORGANIZATION_CD AS ORGANIZATION_CD						--部門コード
					,CREDIT.VENDER_CD AS VENDER_CD						--請求先コード
					,0 AS CLAIM_AMOUNT_FORWARD
					,CREDIT.CREDIT_AMOUNT AS CREDIT_AMOUNT_FORWARD			--前回入金額
					,0 AS OTHER_CREDIT_AMOUNT_FORWARD
					,0 AS BALANCE_FORWARD
					,0 AS SALES_AMOUNT
					,0 AS SALES_RETURNED_AMOUNT
					,0 AS SALES_DISCOUNT_AMOUNT
					,0 AS OTHER_SALES_AMOUNT
					,0 AS OFFSET_AMOUNT
					,0 AS TAX_AMOUNT
					,0 AS CLAIM_AMOUNT
				FROM
					 TEMPORARY_CLAIM_CREDIT CREDIT		--仮締め入金トラン
					,CLASSIFICATION CLASSIFICATION		--分類マスタ
				WHERE
					('ALL' = NVL(P_STR_ORGANIZATION_CD, 'ALL') OR CREDIT.ORGANIZATION_CD = P_STR_ORGANIZATION_CD)
				AND	('ALL' = NVL(P_STR_VENDER_CD, 'ALL') OR CREDIT.VENDER_CD = P_STR_VENDER_CD)
				AND CREDIT.CREDIT_DATE <= p_daCreditDate
				AND CREDIT.DATA_TOTAL_DIVISION = c_DataDivNyuNyukin		--入金
				AND CREDIT.CLAIM_UPDATE_DIVISION = c_ClaimUpdDiv0		--未処理
				AND CREDIT.INVOICE_UPDATE_DATE IS NULL
				AND CREDIT.APPROVAL_STATUS = c_ApprovalSts3				--承認済
				AND CREDIT.DATA_TYPE = CLASSIFICATION.DATA_TYPE
				AND CREDIT.CATEGORY_DIVISION = CLASSIFICATION.CATEGORY_DIVISION
				AND CLASSIFICATION.CLAIM_DIVISION = c_ClDiv1			--請求対象
				UNION ALL
				SELECT
					 CREDIT.ORGANIZATION_CD AS ORGANIZATION_CD						--部門コード
					,CREDIT.VENDER_CD AS VENDER_CD						--請求先コード
					,0 AS CLAIM_AMOUNT_FORWARD
					,0 AS CREDIT_AMOUNT_FORWARD
					,0 AS OTHER_CREDIT_AMOUNT_FORWARD
					,0 AS BALANCE_FORWARD
					,0 AS SALES_AMOUNT
					,0 AS SALES_RETURNED_AMOUNT
					,0 AS SALES_DISCOUNT_AMOUNT
					,0 AS OTHER_SALES_AMOUNT
					,CREDIT.CREDIT_AMOUNT AS OFFSET_AMOUNT					--入金相殺金額
					,0 AS TAX_AMOUNT
					,0 AS CLAIM_AMOUNT
				FROM
					 TEMPORARY_CLAIM_CREDIT CREDIT		--仮締め入金トラン
					,CLASSIFICATION CLASSIFICATION		--分類マスタ
				WHERE
					('ALL' = NVL(P_STR_ORGANIZATION_CD, 'ALL') OR CREDIT.ORGANIZATION_CD = P_STR_ORGANIZATION_CD)
				AND	('ALL' = NVL(P_STR_VENDER_CD, 'ALL') OR CREDIT.VENDER_CD = P_STR_VENDER_CD)
				AND CREDIT.CREDIT_DATE <= p_daCreditDate
				AND CREDIT.DATA_TOTAL_DIVISION = c_DataDivNyuSousai		--相殺
				AND CREDIT.CLAIM_UPDATE_DIVISION = c_ClaimUpdDiv0		--未処理
				AND CREDIT.INVOICE_UPDATE_DATE IS NULL
				AND CREDIT.APPROVAL_STATUS = c_ApprovalSts3				--承認済
				AND CREDIT.DATA_TYPE = CLASSIFICATION.DATA_TYPE
				AND CREDIT.CATEGORY_DIVISION = CLASSIFICATION.CATEGORY_DIVISION
				AND CLASSIFICATION.CLAIM_DIVISION = c_ClDiv1			--請求対象
				UNION ALL
				SELECT
					 CREDIT.ORGANIZATION_CD AS ORGANIZATION_CD						--部門コード
					,CREDIT.VENDER_CD AS VENDER_CD						--請求先コード
					,0 AS CLAIM_AMOUNT_FORWARD
					,0 AS CREDIT_AMOUNT_FORWARD
					,CREDIT.CREDIT_AMOUNT AS OTHER_CREDIT_AMOUNT_FORWARD	--前回その他入金額
					,0 AS BALANCE_FORWARD
					,0 AS SALES_AMOUNT
					,0 AS SALES_RETURNED_AMOUNT
					,0 AS SALES_DISCOUNT_AMOUNT
					,0 AS OTHER_SALES_AMOUNT
					,0 AS OFFSET_AMOUNT
					,0 AS TAX_AMOUNT
					,0 AS CLAIM_AMOUNT
				FROM
					 TEMPORARY_CLAIM_CREDIT CREDIT		--仮締め入金トラン
					,CLASSIFICATION CLASSIFICATION		--分類マスタ
				WHERE
					('ALL' = NVL(P_STR_ORGANIZATION_CD, 'ALL') OR CREDIT.ORGANIZATION_CD = P_STR_ORGANIZATION_CD)
				AND	('ALL' = NVL(P_STR_VENDER_CD, 'ALL') OR CREDIT.VENDER_CD = P_STR_VENDER_CD)
				AND CREDIT.CREDIT_DATE <= p_daCreditDate
				AND CREDIT.DATA_TOTAL_DIVISION = c_DataDivNyuSonota		--その他入金
				AND CREDIT.CLAIM_UPDATE_DIVISION = c_ClaimUpdDiv0		--未処理
				AND CREDIT.INVOICE_UPDATE_DATE IS NULL
				AND CREDIT.APPROVAL_STATUS = c_ApprovalSts3				--承認済
				AND CREDIT.DATA_TYPE = CLASSIFICATION.DATA_TYPE
				AND CREDIT.CATEGORY_DIVISION = CLASSIFICATION.CATEGORY_DIVISION
				AND CLASSIFICATION.CLAIM_DIVISION = c_ClDiv1			--請求対象
				)
			GROUP BY
				 ORGANIZATION_CD
				,VENDER_CD
			UNION ALL
			SELECT
				 ORGANIZATION_CD AS ORGANIZATION_CD											--部門コード
				,VENDER_CD AS VENDER_CD											--請求先コード
				,SUM(CLAIM_AMOUNT_FORWARD) AS CLAIM_AMOUNT_FORWARD					--前回請求額
				,SUM(CREDIT_AMOUNT_FORWARD) AS CREDIT_AMOUNT_FORWARD				--前回入金額
				,SUM(OTHER_CREDIT_AMOUNT_FORWARD) AS OTHER_CREDIT_AMOUNT_FORWARD	--その他入金金額
				,SUM(BALANCE_FORWARD) AS BALANCE_FORWARD							--差引繰越額
				,SUM(SALES_AMOUNT) AS SALES_AMOUNT									--今回売上額
				,SUM(SALES_RETURNED_AMOUNT) AS SALES_RETURNED_AMOUNT				--返品金額
				,SUM(SALES_DISCOUNT_AMOUNT) AS SALES_DISCOUNT_AMOUNT				--値引金額
				,SUM(OTHER_SALES_AMOUNT) AS OTHER_SALES_AMOUNT						--その他売上金額
				,SUM(OFFSET_AMOUNT) AS OFFSET_AMOUNT								--相殺金額
				,SUM(TAX_AMOUNT) AS TAX_AMOUNT										--消費税額
				,SUM(CLAIM_AMOUNT) AS CLAIM_AMOUNT									--今回請求額
			FROM
				(
				SELECT
					 PAYMENT.ORGANIZATION_CD AS ORGANIZATION_CD						--部門コード
					,PAYMENT.SUPPLIER_CD AS VENDER_CD						--仕入先コード
					,0 AS CLAIM_AMOUNT_FORWARD
					,0 AS CREDIT_AMOUNT_FORWARD
					,0 AS OTHER_CREDIT_AMOUNT_FORWARD
					,0 AS BALANCE_FORWARD
					,0 AS SALES_AMOUNT
					,0 AS SALES_RETURNED_AMOUNT
					,0 AS SALES_DISCOUNT_AMOUNT
					,0 AS OTHER_SALES_AMOUNT
					,PAYMENT.PAYMENT_AMOUNT AS OFFSET_AMOUNT				--支払相殺金額
					,0 AS TAX_AMOUNT
					,0 AS CLAIM_AMOUNT
				FROM
					 TEMPORARY_CLAIM_PAYMENT PAYMENT	--仮締め支払トラン
					,CLASSIFICATION CLASSIFICATION		--分類マスタ
				WHERE
					('ALL' = NVL(P_STR_ORGANIZATION_CD, 'ALL') OR PAYMENT.ORGANIZATION_CD = P_STR_ORGANIZATION_CD)
				AND	('ALL' = NVL(P_STR_VENDER_CD, 'ALL') OR PAYMENT.SUPPLIER_CD = P_STR_VENDER_CD)
				AND PAYMENT.PAYMENT_DATE <= p_daCreditDate
				AND PAYMENT.DATA_TOTAL_DIVISION = c_DataDivShiSousai	--相殺
				AND PAYMENT.CLAIM_UPDATE_DIVISION = c_ClaimUpdDiv0		--未処理
				AND PAYMENT.INVOICE_UPDATE_DATE IS NULL
				AND PAYMENT.APPROVAL_STATUS = c_ApprovalSts3			--承認済
				AND PAYMENT.DATA_TYPE = CLASSIFICATION.DATA_TYPE
				AND PAYMENT.CATEGORY_DIVISION = CLASSIFICATION.CATEGORY_DIVISION
				AND CLASSIFICATION.CLAIM_DIVISION = c_ClDiv1			--請求対象
				)
			GROUP BY
				 ORGANIZATION_CD
				,VENDER_CD
			UNION ALL
			SELECT
				 ORGANIZATION_CD AS ORGANIZATION_CD											--部門コード
				,VENDER_CD AS VENDER_CD											--請求先コード
				,SUM(CLAIM_AMOUNT_FORWARD) AS CLAIM_AMOUNT_FORWARD					--前回請求額
				,SUM(CREDIT_AMOUNT_FORWARD) AS CREDIT_AMOUNT_FORWARD				--前回入金額
				,SUM(OTHER_CREDIT_AMOUNT_FORWARD) AS OTHER_CREDIT_AMOUNT_FORWARD	--その他入金金額
				,SUM(BALANCE_FORWARD) AS BALANCE_FORWARD							--差引繰越額
				,SUM(SALES_AMOUNT) AS SALES_AMOUNT									--今回売上額
				,SUM(SALES_RETURNED_AMOUNT) AS SALES_RETURNED_AMOUNT				--返品金額
				,SUM(SALES_DISCOUNT_AMOUNT) AS SALES_DISCOUNT_AMOUNT				--値引金額
				,SUM(OTHER_SALES_AMOUNT) AS OTHER_SALES_AMOUNT						--その他売上金額
				,SUM(OFFSET_AMOUNT) AS OFFSET_AMOUNT								--相殺金額
				,SUM(TAX_AMOUNT) AS TAX_AMOUNT										--消費税額
				,SUM(CLAIM_AMOUNT) AS CLAIM_AMOUNT									--今回請求額
			FROM
				(
				SELECT
					 OFFSET.ORGANIZATION_CD AS ORGANIZATION_CD						--部門コード
					,OFFSET.VENDER_CD AS VENDER_CD						--請求先コード
					,0 AS CLAIM_AMOUNT_FORWARD
					,0 AS CREDIT_AMOUNT_FORWARD
					,0 AS OTHER_CREDIT_AMOUNT_FORWARD
					,0 AS BALANCE_FORWARD
					,0 AS SALES_AMOUNT
					,0 AS SALES_RETURNED_AMOUNT
					,0 AS SALES_DISCOUNT_AMOUNT
					,0 AS OTHER_SALES_AMOUNT
					,OFFSET.DEPOSIT_OFFSET_AMOUNT AS OFFSET_AMOUNT			--売掛相殺金額
					,0 AS TAX_AMOUNT
					,0 AS CLAIM_AMOUNT
				FROM
					 TMPCLAIM_OFFSET_GROUP_DATA OFFSET		--仮締めグループ間トラン
					,CLASSIFICATION CLASSIFICATION			--分類マスタ
				WHERE
					('ALL' = NVL(P_STR_ORGANIZATION_CD, 'ALL') OR OFFSET.ORGANIZATION_CD = P_STR_ORGANIZATION_CD)
				AND	('ALL' = NVL(P_STR_VENDER_CD, 'ALL') OR OFFSET.VENDER_CD = P_STR_VENDER_CD)
				AND OFFSET.OFFSET_DATE <= p_daCreditDate
				AND OFFSET.DATA_TOTAL_DIVISION = c_DataDivSouSousai		--グループ間相殺
				AND OFFSET.CLAIM_UPDATE_DIVISION = c_ClaimUpdDiv0		--未処理
				AND OFFSET.INVOICE_UPDATE_DATE IS NULL
				AND OFFSET.DEPOSIT_OFFSET_AMOUNT IS NOT NULL			--売掛相殺金額
				AND OFFSET.APPROVAL_STATUS = c_ApprovalSts3				--承認済
				AND OFFSET.VENDER_DIVISION = c_VenderDivTS				--得意先
				AND OFFSET.DATA_TYPE = CLASSIFICATION.DATA_TYPE
				AND OFFSET.CATEGORY_DIVISION = CLASSIFICATION.CATEGORY_DIVISION
				AND CLASSIFICATION.CLAIM_DIVISION = c_ClDiv1			--請求対象
				)
			GROUP BY
				 ORGANIZATION_CD
				,VENDER_CD
			UNION ALL
			SELECT
				 ORGANIZATION_CD AS ORGANIZATION_CD											--部門コード
				,VENDER_CD AS VENDER_CD											--請求先コード
				,SUM(CLAIM_AMOUNT_FORWARD) AS CLAIM_AMOUNT_FORWARD					--前回請求額
				,SUM(CREDIT_AMOUNT_FORWARD) AS CREDIT_AMOUNT_FORWARD				--前回入金額
				,SUM(OTHER_CREDIT_AMOUNT_FORWARD) AS OTHER_CREDIT_AMOUNT_FORWARD	--その他入金金額
				,SUM(BALANCE_FORWARD) AS BALANCE_FORWARD							--差引繰越額
				,SUM(SALES_AMOUNT) AS SALES_AMOUNT									--今回売上額
				,SUM(SALES_RETURNED_AMOUNT) AS SALES_RETURNED_AMOUNT				--返品金額
				,SUM(SALES_DISCOUNT_AMOUNT) AS SALES_DISCOUNT_AMOUNT				--値引金額
				,SUM(OTHER_SALES_AMOUNT) AS OTHER_SALES_AMOUNT						--その他売上金額
				,SUM(OFFSET_AMOUNT) AS OFFSET_AMOUNT								--相殺金額
				,SUM(TAX_AMOUNT) AS TAX_AMOUNT										--消費税額
				,SUM(CLAIM_AMOUNT) AS CLAIM_AMOUNT									--今回請求額
			FROM
				(
				SELECT
					 HEADER.ORGANIZATION_CD AS ORGANIZATION_CD				--部門コード
					,HEADER.VENDER_CD AS VENDER_CD				--請求先コード
					,HEADER.CLAIM_AMOUNT AS CLAIM_AMOUNT_FORWARD	--前回請求額
					,0 AS CREDIT_AMOUNT_FORWARD
					,0 AS OTHER_CREDIT_AMOUNT_FORWARD
					,0 AS BALANCE_FORWARD
					,0 AS SALES_AMOUNT
					,0 AS SALES_RETURNED_AMOUNT
					,0 AS SALES_DISCOUNT_AMOUNT
					,0 AS OTHER_SALES_AMOUNT
					,0 AS OFFSET_AMOUNT
					,0 AS TAX_AMOUNT
					,0 AS CLAIM_AMOUNT
				FROM
					 CLAIM_HEADER HEADER		--請求ヘッダー
					,(SELECT
						 ORGANIZATION_CD
						,VENDER_CD
						,MAX(CREDIT_DATE) MAX_DATE
					  FROM
					  	CLAIM_HEADER
					  WHERE
					  	CREDIT_DATE < p_daCreditDate
					  GROUP BY
						 ORGANIZATION_CD
						,VENDER_CD
					 ) MAX_HEADER
				WHERE
					('ALL' = NVL(P_STR_ORGANIZATION_CD, 'ALL') OR HEADER.ORGANIZATION_CD = P_STR_ORGANIZATION_CD)
				AND	('ALL' = NVL(P_STR_VENDER_CD, 'ALL') OR HEADER.VENDER_CD = P_STR_VENDER_CD)
				AND	HEADER.CLAIM_AMOUNT <> 0
				AND HEADER.ORGANIZATION_CD = MAX_HEADER.ORGANIZATION_CD
				AND HEADER.VENDER_CD = MAX_HEADER.VENDER_CD
				AND HEADER.CREDIT_DATE = MAX_HEADER.MAX_DATE
				)
			GROUP BY
				 ORGANIZATION_CD
				,VENDER_CD
			 ) TRN
			,(
			SELECT
				VENDER_CD
			FROM (
					SELECT
						VENDER_CD
					,	DECODE(CLOSING_DATE, 99, TO_NUMBER(SUBSTR(TO_CHAR(LAST_DAY(p_daCreditDate), 'YYYYMMDD'), 7, 2)),
							CASE WHEN TO_NUMBER(SUBSTR(TO_CHAR(LAST_DAY(p_daCreditDate), 'YYYYMMDD'), 7, 2)) < CLOSING_DATE 
									THEN TO_NUMBER(SUBSTR(TO_CHAR(LAST_DAY(p_daCreditDate), 'YYYYMMDD'), 7, 2))
								 ELSE CLOSING_DATE
							END
						) CLOSING_DATE
					FROM
						VENDER
					WHERE
						('ALL' = NVL(P_STR_VENDER_CD, 'ALL') OR VENDER_CD = P_STR_VENDER_CD)
					AND VENDER_DIVISION = c_VenderDivTS
					AND (PAYMENT_INVOICE_CD IS NULL OR PAYMENT_INVOICE_CD = VENDER_CD)
				)
			WHERE
				CLOSING_DATE = TO_NUMBER(SUBSTR(TO_CHAR(p_daCreditDate, 'YYYYMMDD'), 7, 2))
			 ) VENDER											-- 請求先.締日と画面の締日が一致する請求先のテーブル
		WHERE
			TRN.VENDER_CD = VENDER.VENDER_CD
		GROUP BY
			 ORGANIZATION_CD
			,VENDER_CD
		ORDER BY
			 ORGANIZATION_CD
			,VENDER_CD
	;

BEGIN

	-- 文字型をDate型へキャスト
	daCreditDate := TO_DATE(P_STR_CREDIT_DATE, 'YYYY/MM/DD');
	nvAccountYears := SUBSTR(P_STR_CREDIT_DATE, 1, 6);

	--------------------------------------------------------------------------------
	--仮締めデータ削除処理
	--------------------------------------------------------------------------------
	-------------------------------------------------
	--★仮締め請求ヘッダー削除
	-------------------------------------------------
	DELETE FROM TEMPORARY_CLAIM_HEADER
	WHERE
		('ALL' = NVL(P_STR_ORGANIZATION_CD, 'ALL') OR ORGANIZATION_CD = P_STR_ORGANIZATION_CD)
	AND	('ALL' = NVL(P_STR_VENDER_CD, 'ALL') OR VENDER_CD = P_STR_VENDER_CD)
	;

	-------------------------------------------------
	--★仮締め売上トランザクション削除
	-------------------------------------------------
	DELETE FROM TEMPORARY_CLAIM_SALES
	WHERE
		('ALL' = NVL(P_STR_ORGANIZATION_CD, 'ALL') OR ORGANIZATION_CD = P_STR_ORGANIZATION_CD)
	AND	('ALL' = NVL(P_STR_VENDER_CD, 'ALL') OR INVOICE_CD = P_STR_VENDER_CD)
	;

	-------------------------------------------------
	--★仮締め入金トランザクション削除
	-------------------------------------------------
	DELETE FROM TEMPORARY_CLAIM_CREDIT
	WHERE
		('ALL' = NVL(P_STR_ORGANIZATION_CD, 'ALL') OR ORGANIZATION_CD = P_STR_ORGANIZATION_CD)
	AND	('ALL' = NVL(P_STR_VENDER_CD, 'ALL') OR VENDER_CD = P_STR_VENDER_CD)
	;

	-------------------------------------------------
	--★仮締め支払トランザクション削除
	-------------------------------------------------
	DELETE FROM TEMPORARY_CLAIM_PAYMENT
	WHERE
		('ALL' = NVL(P_STR_ORGANIZATION_CD, 'ALL') OR ORGANIZATION_CD = P_STR_ORGANIZATION_CD)
	AND	('ALL' = NVL(P_STR_VENDER_CD, 'ALL') OR SUPPLIER_CD = P_STR_VENDER_CD)
	;

	-------------------------------------------------
	--★仮締めグループ間相殺トランザクション削除
	-------------------------------------------------
	DELETE FROM TMPCLAIM_OFFSET_GROUP_DATA
	WHERE
		('ALL' = NVL(P_STR_ORGANIZATION_CD, 'ALL') OR ORGANIZATION_CD = P_STR_ORGANIZATION_CD)
	AND	('ALL' = NVL(P_STR_VENDER_CD, 'ALL') OR VENDER_CD = P_STR_VENDER_CD)
	;

	--------------------------------------------------------------------------------
	--【仮締め】の場合
	--------------------------------------------------------------------------------
	IF P_STR_TEMP_CLOSING_FLG = c_TempClosingFlg1 THEN
		-------------------------------------------------
		--★仮締め売上トランザクション登録
		-------------------------------------------------
		INSERT INTO TEMPORARY_CLAIM_SALES
			SELECT SALES.*
			FROM
				 (SELECT
SALES.SALES_DATE
,SALES.SALES_NO                       
,SALES.CANCEL_SALES_NO                
,SALES.ITEM_CD                        
,SALES.ORGANIZATION_CD                
,SALES.VENDER_CD                      
,SALES.BALANCE_CD                     
,SALES.INPUT_TANTO_CD                 
,SALES.SALES_TANTO_CD                 
,SALES.PRODUCT_LOTNO                  
,SALES.ORDER_NO                       
,SALES.ORDER_ROW_NO                   
,SALES.SALES_QUANTITY                 
,SALES.SALES_UNITPRICE                
,SALES.STANDARD_UNITPRICE             
,SALES.STANDARD_DISCOUNT              
,SALES.SPECIAL_DISCOUNT               
,SALES.TMP_UNITPRICE_FLG              
,SALES.REMARK                         
,SALES.DISBURSEMENT_LOCATION_CD       
,SALES.DELIVERY_COMP                  
,SALES.DELIVERY_UPDATE_DATE           
,SALES.INVOICE_UPDATE_DATE            
,SALES.INPUT_DIVISION                 
,SALES.DELIVERY_CD                    
,SALES.TAX_DIVISION                   
,SALES.TAX_AMOUNT                     
,VENDER.PAYMENT_INVOICE_CD AS INVOICE_CD                     
,SALES.SALES_AMOUNT                   
,SALES.SALES_BASIC                    
,SALES.TAX_RATIO                      
,SALES.UPDATE_FLG                     
,SALES.CONFIG_EXP_RATIO               
,SALES.RATIO_NOTAPPLY_SALES_UNITPRICE 
,SALES.SHIPPING_NO                    
,SALES.SALES_SLIP_NO                  
,SALES.SALES_SLIP_ROW_NO              
,SALES.SLIP_PUBLISH_COMP              
,SALES.SLIP_PUBLISH_DATE              
,SALES.TRANSMISSION_DATE              
,SALES.LEDGER_POST_DATE               
,SALES.LEDGER_POST_NO                 
,SALES.SALES_CONVERT_QUANTITY         
,SALES.ACCEPT_CONVERT_QUANTITY        
,SALES.DATA_TYPE                      
,SALES.DATA_TOTAL_DIVISION            
,SALES.CATEGORY_DIVISION              
,SALES.ACCOUNT_YEARS                  
,SALES.ACCOUNT_DEBIT_SECTION_CD       
,SALES.ACCOUNT_CREDIT_SECTION_CD      
,SALES.DEBIT_TITLE_CD                 
,SALES.DEBIT_SUB_TITLE_CD             
,SALES.CREDIT_TITLE_CD                
,SALES.CREDIT_SUB_TITLE_CD            
,SALES.DEPOSIT_TARGET_DIVISION        
,SALES.CLAIM_TARGET_DIVISION          
,SALES.SUMMARY_CD                     
,SALES.SUMMARY                        
,SALES.DEPOSIT_UPDATE_DIVISION        
,SALES.DEPOSIT_NO                     
,SALES.CLAIM_UPDATE_DIVISION          
,SALES.CLAIM_NO                       
,SALES.ERASER_COMPLETE_DIVISION       
,SALES.ERASER_COMPLETE_DATE           
,SALES.APPROVAL_STATUS                
,SALES.APPROVEDBY                     
,SALES.APPROVALDATE                   
,SALES.CHARGE_ORGANIZATION_CD         
,SALES.KEEP_FLAG                      
,SALES.RY_CD                          
,SALES.HOUSING_LOCATION_CD            
,SALES.PACKAGE_DIRECTION_NO           
,SALES.INPUT_DATE                     
,SALES.INPUTOR_CD                     
,SALES.UPDATE_DATE                    
,SALES.UPDATOR_CD                     
				  FROM
					 SALES SALES	--仮締め売上トラン
					,VENDER VENDER
				  WHERE
					  ('ALL' = NVL(P_STR_ORGANIZATION_CD, 'ALL') OR SALES.ORGANIZATION_CD = P_STR_ORGANIZATION_CD)
				  AND SALES.ACCOUNT_YEARS <= nvAccountYears
				  AND SALES.CLAIM_UPDATE_DIVISION = c_ClaimUpdDiv0		--未処理
				  AND SALES.INVOICE_UPDATE_DATE IS NULL
				  AND SALES.DELIVERY_COMP = c_DeliveryComp2				--完納
				  AND SALES.APPROVAL_STATUS = c_ApprovalSts3			--承認済
				  AND SALES.VENDER_CD = VENDER.VENDER_CD
				  AND VENDER_DIVISION = c_VenderDivTS
				 ) SALES
			WHERE
				('ALL' = NVL(P_STR_VENDER_CD, 'ALL') OR
				 (SALES.VENDER_CD = P_STR_VENDER_CD AND SALES.INVOICE_CD IS NULL) OR
				 SALES.INVOICE_CD = P_STR_VENDER_CD
				)
		;

		-------------------------------------------------
		--★仮締め入金トランザクション登録
		-------------------------------------------------
		INSERT INTO TEMPORARY_CLAIM_CREDIT
			SELECT CREDIT.*
			FROM
				 CREDIT CREDIT						--入金トラン
			WHERE
				('ALL' = NVL(P_STR_ORGANIZATION_CD, 'ALL') OR CREDIT.ORGANIZATION_CD = P_STR_ORGANIZATION_CD)
			AND	('ALL' = NVL(P_STR_VENDER_CD, 'ALL') OR CREDIT.VENDER_CD = P_STR_VENDER_CD)
			AND CREDIT.CREDIT_DATE <= daCreditDate
			AND CREDIT.CLAIM_UPDATE_DIVISION = c_ClaimUpdDiv0		--未処理
			AND CREDIT.INVOICE_UPDATE_DATE IS NULL
			AND CREDIT.APPROVAL_STATUS = c_ApprovalSts3				--承認済
		;

		-------------------------------------------------
		--★仮締め支払トランザクション登録
		-------------------------------------------------
		INSERT INTO TEMPORARY_CLAIM_PAYMENT
			SELECT PAYMENT.*
			FROM
				 PAYMENT PAYMENT					--支払トラン
			WHERE
				('ALL' = NVL(P_STR_ORGANIZATION_CD, 'ALL') OR PAYMENT.ORGANIZATION_CD = P_STR_ORGANIZATION_CD)
			AND	('ALL' = NVL(P_STR_VENDER_CD, 'ALL') OR PAYMENT.SUPPLIER_CD = P_STR_VENDER_CD)
			AND PAYMENT.PAYMENT_DATE <= daCreditDate
			AND PAYMENT.DATA_TOTAL_DIVISION = c_DataDivShiSousai	--相殺
			AND PAYMENT.CLAIM_UPDATE_DIVISION = c_ClaimUpdDiv0		--未処理
			AND PAYMENT.INVOICE_UPDATE_DATE IS NULL
			AND PAYMENT.APPROVAL_STATUS = c_ApprovalSts3			--承認済
		;

		-------------------------------------------------
		--★仮締めグループ間相殺トランザクション登録
		-------------------------------------------------
		INSERT INTO TMPCLAIM_OFFSET_GROUP_DATA
			SELECT OFFSET.*
			FROM
				 OFFSET_GROUP_DATA OFFSET				--グループ間トラン
			WHERE
				('ALL' = NVL(P_STR_ORGANIZATION_CD, 'ALL') OR OFFSET.ORGANIZATION_CD = P_STR_ORGANIZATION_CD)
			AND	('ALL' = NVL(P_STR_VENDER_CD, 'ALL') OR OFFSET.VENDER_CD = P_STR_VENDER_CD)
			AND OFFSET.OFFSET_DATE <= daCreditDate
			AND OFFSET.DATA_TOTAL_DIVISION = c_DataDivSouSousai		--グループ間相殺
			AND OFFSET.CLAIM_UPDATE_DIVISION = c_ClaimUpdDiv0		--未処理
			AND OFFSET.INVOICE_UPDATE_DATE IS NULL
			AND OFFSET.DEPOSIT_OFFSET_AMOUNT IS NOT NULL			--売掛相殺金額
			AND OFFSET.APPROVAL_STATUS = c_ApprovalSts3				--承認済
			AND OFFSET.VENDER_DIVISION = c_VenderDivTS				--得意先
		;

	END IF;

	--------------------------------------------------------------------------------
	--【仮締め】の場合
	--------------------------------------------------------------------------------
	IF P_STR_TEMP_CLOSING_FLG = c_TempClosingFlg1 THEN
		--------------------------------------------------------------------------------
		--仮締め請求データ抽出処理
		--------------------------------------------------------------------------------
		/* 仮締め請求データ抽出 カーソル */
		FOR REC_MAIN IN curTempSales(daCreditDate, nvAccountYears)
		LOOP

			-- 請求番号仮締め用取得(FUNCTION呼出)
			nvClaimNo := FUN_GET_CLAIM_NO_KARI(P_STR_INPUTOR_CD);

			-- 入金予定日取得(FUNCTION呼出)
			nvCreditScheDate := FUN_GET_CREDIT_SCHE_DATE(REC_MAIN.VENDER_CD, TO_CHAR(daCreditDate, 'YYYYMMDD'));

			-- 入金分類、手形サイト取得(PROCEDURE呼出)
			nClaimAmount := REC_MAIN.CLAIM_AMOUNT - REC_MAIN.BALANCE_FORWARD;
			PRO_GET_CREDIT_DIV(REC_MAIN.VENDER_CD, nClaimAmount, nvCreditDiv, nNoteSight);
			IF nvCreditDiv IS NULL THEN
				ROLLBACK;
				P_NUM_RET := 9;
				RETURN;
			END IF;

			-- 取引先マスタ検索
			SELECT	BILL_PUBLISH				-- 請求書発行済フラグ
				,	HOLIDAY_FLG					-- 休日指定フラグ
			INTO	nBillPublish
				,	nHolidayFlg
			FROM	VENDER
			WHERE	VENDER_DIVISION		=	c_VenderDivTS
			AND		VENDER_CD			=	REC_MAIN.VENDER_CD
			;

			-- 請求書発行区分＝1(発行しない)の場合
			IF nBillPublish = 1 THEN
				nBillPublish := 9;		-- 発行不要
			END IF;

			-- 仮締め請求ヘッダーデータ設定
			rtRecWork.CLAIM_NO					:= nvClaimNo;						-- 請求番号
			rtRecWork.ORGANIZATION_CD				:= REC_MAIN.ORGANIZATION_CD;				-- 部門コード
			rtRecWork.VENDER_CD				:= REC_MAIN.VENDER_CD;			-- 請求先コード
			rtRecWork.CREDIT_DATE				:= daCreditDate;					-- 請求締め日
			rtRecWork.CREDIT_SCHEDULED_DATE		:= TO_DATE(nvCreditScheDate, 'YYYY/MM/DD');		-- 入金予定日
			rtRecWork.CREDIT_DIVISION			:= nvCreditDiv;						-- 入金分類（決済方法）
			rtRecWork.NOTE_SIGHT				:= nNoteSight;						-- 手形サイト
			rtRecWork.HOLIDAY_FLG				:= nHolidayFlg;						-- 休日指定フラグ
			rtRecWork.CLAIM_AMOUNT_FORWARD		:= REC_MAIN.CLAIM_AMOUNT_FORWARD;	-- 前回請求額
			rtRecWork.CREDIT_AMOUNT_FORWARD		:= REC_MAIN.CREDIT_AMOUNT_FORWARD;	-- 前回入金額
			rtRecWork.OTHER_CREDIT_AMOUNT_FORWARD	:= REC_MAIN.OTHER_CREDIT_AMOUNT_FORWARD;	-- その他入金金額
			rtRecWork.BALANCE_FORWARD			:= REC_MAIN.BALANCE_FORWARD;		-- 差引繰越額
			rtRecWork.SALES_AMOUNT				:= REC_MAIN.SALES_AMOUNT;			-- 今回売上額
			rtRecWork.SALES_RETURNED_AMOUNT		:= REC_MAIN.SALES_RETURNED_AMOUNT;	-- 返品金額
			rtRecWork.SALES_DISCOUNT_AMOUNT		:= REC_MAIN.SALES_DISCOUNT_AMOUNT;	-- 値引金額
			rtRecWork.OTHER_SALES_AMOUNT		:= REC_MAIN.OTHER_SALES_AMOUNT;		-- その他売上金額
			rtRecWork.OFFSET_AMOUNT				:= REC_MAIN.OFFSET_AMOUNT;			-- 相殺金額
			rtRecWork.TAX_AMOUNT				:= REC_MAIN.TAX_AMOUNT;				-- 消費税額
			rtRecWork.CLAIM_AMOUNT				:= REC_MAIN.CLAIM_AMOUNT;			-- 今回請求額
			rtRecWork.ERASER_AMOUNT				:= 0;								-- 消込額
			rtRecWork.ERASER_BALANCE_AMOUNT		:= REC_MAIN.CLAIM_AMOUNT;			-- 消込残
			rtRecWork.BILL_DIVISION				:= nBillPublish;					-- 請求書発行済フラグ
			rtRecWork.ISSUE_DATE				:= NULL;							-- 発行日
			rtRecWork.ISSUER_CD					:= NULL;							-- 発行者ＩＤ
			rtRecWork.INPUT_DATE				:= SYSDATE;							-- 登録日時
			rtRecWork.INPUTOR_CD				:= P_STR_INPUTOR_CD;				-- 登録者ＩＤ
			rtRecWork.UPDATE_DATE				:= SYSDATE;							-- 更新日時
			rtRecWork.UPDATOR_CD				:= P_STR_INPUTOR_CD;				-- 更新者ＩＤ

			--------------------------------------------------------------------------------
			--★請求ヘッダー登録
			--------------------------------------------------------------------------------
			INSERT INTO TEMPORARY_CLAIM_HEADER VALUES rtRecWork;

			----------------------------------------------------------------------------------------------------------
			--【請求対象】【請求対象外】の各トランザクション更新処理
			----------------------------------------------------------------------------------------------------------
			--------------------------------------------------------------------------------
			--★【請求対象】仮締め売上トランザクション更新
			--------------------------------------------------------------------------------
			-- 売掛更新済対象(会計関連項目は売掛更新でセット済のため請求関連項目のみ更新)
			UPDATE TEMPORARY_CLAIM_SALES
				SET
					CLAIM_TARGET_DIVISION		=	c_ClaimTrgDiv1					-- 請求対象(処理済)
				,	CLAIM_UPDATE_DIVISION		=	c_ClaimUpdDiv1					-- 請求更新フラグ(更新済)
				,	CLAIM_NO					=	nvClaimNo						-- 請求番号
				,	INVOICE_UPDATE_DATE			=	daCreditDate					-- 請求締め日
				,	UPDATE_DATE					=	SYSDATE							-- 更新日時
				,	UPDATOR_CD					=	P_STR_INPUTOR_CD				-- 更新者ＩＤ
				,	INVOICE_CD	=	(												-- 請求先コード
										SELECT
											DECODE(PAYMENT_INVOICE_CD, NULL, VENDER_CD, PAYMENT_INVOICE_CD) AS INVOICE_CD
										FROM
											VENDER
										WHERE
											VENDER.VENDER_CD = REC_MAIN.VENDER_CD
										AND VENDER_DIVISION = c_VenderDivTS
									)
			WHERE
					DEPOSIT_UPDATE_DIVISION		=	c_DepositUpdDiv1				-- 売掛更新フラグ(更新済)
			AND		DELIVERY_UPDATE_DATE		IS NOT NULL							-- 売掛締め日
			AND		ROWID IN (
								SELECT
									 SALES.ROW_ID
								FROM
									 (SELECT
										 SALES.ORGANIZATION_CD
										,SALES.VENDER_CD
										,VENDER.PAYMENT_INVOICE_CD AS INVOICE_CD
										,SALES.DATA_TYPE
										,SALES.CATEGORY_DIVISION
										,SALES.ROWID AS ROW_ID
									  FROM
										 TEMPORARY_CLAIM_SALES SALES						--仮締め売上トラン
										,VENDER VENDER
									  WHERE
										  SALES.ORGANIZATION_CD = REC_MAIN.ORGANIZATION_CD
									  AND SALES.ACCOUNT_YEARS <= nvAccountYears
									  AND SALES.CLAIM_UPDATE_DIVISION = c_ClaimUpdDiv0		--未処理
									  AND SALES.INVOICE_UPDATE_DATE IS NULL
									  AND SALES.DELIVERY_COMP = c_DeliveryComp2				--完納
									  AND SALES.APPROVAL_STATUS = c_ApprovalSts3			--承認済
									  AND SALES.VENDER_CD = VENDER.VENDER_CD
									  AND VENDER_DIVISION = c_VenderDivTS
									 ) SALES
									,CLASSIFICATION CLASSIFICATION		--分類マスタ
								WHERE
								 ( (SALES.VENDER_CD = REC_MAIN.VENDER_CD AND SALES.INVOICE_CD IS NULL) OR
								   SALES.INVOICE_CD = REC_MAIN.VENDER_CD )
								AND SALES.DATA_TYPE = CLASSIFICATION.DATA_TYPE
								AND SALES.CATEGORY_DIVISION = CLASSIFICATION.CATEGORY_DIVISION
								AND CLASSIFICATION.CLAIM_DIVISION = c_ClDiv1			--請求対象
							 )
			;

			-- 売掛更新未処理対象(会計関連項目と請求関連項目を更新)
			UPDATE TEMPORARY_CLAIM_SALES
				SET
					(
						 ACCOUNT_SECTION_CD
						,DEBIT_TITLE_CD
						,DEBIT_SUB_TITLE_CD
						,CREDIT_TITLE_CD
						,CREDIT_SUB_TITLE_CD
						,CLAIM_TARGET_DIVISION
						,CLAIM_UPDATE_DIVISION
						,CLAIM_NO
						,INVOICE_UPDATE_DATE
						,UPDATE_DATE
						,UPDATOR_CD
						,INVOICE_CD
					)
					=
					(
					 SELECT
					 	 NVL(MAX(ACCOUNT_SECTION_CD),'') AS ACCOUNT_SECTION_CD			-- 会計部門
					 	,NVL(MAX(DEBIT_ACCOUNTS_CD),'') AS DEBIT_ACCOUNTS_CD			-- 借方科目コード
					 	,NVL(MAX(DEBIT_ACCOUNTS_SUB_CD),'') AS DEBIT_ACCOUNTS_SUB_CD	-- 借方補助科目コード
					 	,NVL(MAX(CREDIT_ACCOUNTS_CD),'') AS CREDIT_ACCOUNTS_CD			-- 貸方科目コード
					 	,NVL(MAX(CREDIT_ACCOUNTS_SUB_CD),'') AS CREDIT_ACCOUNTS_SUB_CD	-- 貸方補助科目コード
					 	,c_ClaimTrgDiv1													-- 請求対象(処理済)
					 	,c_ClaimUpdDiv1													-- 請求更新フラグ(更新済)
					 	,nvClaimNo														-- 請求番号
					 	,daCreditDate													-- 請求締め日
					 	,SYSDATE														-- 更新日時
					 	,P_STR_INPUTOR_CD												-- 更新者ＩＤ
					 	,MAX(INVOICE_CD) AS INVOICE_CD									-- 請求先コード
					 FROM
					 	(
						 SELECT
						 	 BUMON.ACCOUNT_SECTION_CD
						 	,CLASSIFICATION.DEBIT_ACCOUNTS_CD
						 	,CLASSIFICATION.DEBIT_ACCOUNTS_SUB_CD
						 	,CLASSIFICATION.CREDIT_ACCOUNTS_CD
						 	,CLASSIFICATION.CREDIT_ACCOUNTS_SUB_CD
						 	,DECODE(VENDER.PAYMENT_INVOICE_CD, NULL, VENDER.VENDER_CD, VENDER.PAYMENT_INVOICE_CD) AS INVOICE_CD
						 FROM
						 	 BUMON
						 	,CLASSIFICATION
						 	,VENDER
						 WHERE
						 		TEMPORARY_CLAIM_SALES.ORGANIZATION_CD			=	BUMON.SECTION_CD
						 AND	TEMPORARY_CLAIM_SALES.DATA_TYPE				=	CLASSIFICATION.DATA_TYPE
						 AND	TEMPORARY_CLAIM_SALES.CATEGORY_DIVISION		=	CLASSIFICATION.CATEGORY_DIVISION
						 AND	TEMPORARY_CLAIM_SALES.VENDER_CD			=	VENDER.VENDER_CD
						 AND	VENDER.VENDER_DIVISION						=	c_VenderDivTS
					 	)
					)
			WHERE
					DEPOSIT_UPDATE_DIVISION		=	c_DepositUpdDiv0				-- 売掛更新フラグ(未処理)
			AND		DELIVERY_UPDATE_DATE		IS NULL								-- 売掛締め日
			AND		ROWID IN (
								SELECT
									 SALES.ROW_ID
								FROM
									 (SELECT
										 SALES.ORGANIZATION_CD
										,SALES.VENDER_CD
										,VENDER.PAYMENT_INVOICE_CD AS INVOICE_CD
										,SALES.DATA_TYPE
										,SALES.CATEGORY_DIVISION
										,SALES.ROWID AS ROW_ID
									  FROM
										 TEMPORARY_CLAIM_SALES SALES						--仮締め売上トラン
										,VENDER VENDER
									  WHERE
										  SALES.ORGANIZATION_CD = REC_MAIN.ORGANIZATION_CD
									  AND SALES.ACCOUNT_YEARS <= nvAccountYears
									  AND SALES.CLAIM_UPDATE_DIVISION = c_ClaimUpdDiv0		--未処理
									  AND SALES.INVOICE_UPDATE_DATE IS NULL
									  AND SALES.DELIVERY_COMP = c_DeliveryComp2				--完納
									  AND SALES.APPROVAL_STATUS = c_ApprovalSts3			--承認済
									  AND SALES.VENDER_CD = VENDER.VENDER_CD
									  AND VENDER_DIVISION = c_VenderDivTS
									 ) SALES
									,CLASSIFICATION CLASSIFICATION		--分類マスタ
								WHERE
								 ( (SALES.VENDER_CD = REC_MAIN.VENDER_CD AND SALES.INVOICE_CD IS NULL) OR
								   SALES.INVOICE_CD = REC_MAIN.VENDER_CD )
								AND SALES.DATA_TYPE = CLASSIFICATION.DATA_TYPE
								AND SALES.CATEGORY_DIVISION = CLASSIFICATION.CATEGORY_DIVISION
								AND CLASSIFICATION.CLAIM_DIVISION = c_ClDiv1			--請求対象
							 )
			;

			--------------------------------------------------------------------------------
			--★【請求対象外】仮締め売上トランザクション更新
			--------------------------------------------------------------------------------
			-- 売掛更新済対象(会計関連項目は売掛更新でセット済のため請求関連項目のみ更新)
			UPDATE TEMPORARY_CLAIM_SALES
				SET
				 	CLAIM_TARGET_DIVISION		=	c_ClaimTrgDiv9					-- 請求対象(対象外)
				,	CLAIM_UPDATE_DIVISION		=	c_ClaimUpdDiv1					-- 請求更新フラグ(更新済)
				,	INVOICE_UPDATE_DATE			=	daCreditDate					-- 請求締め日
				,	UPDATE_DATE					=	SYSDATE							-- 更新日時
				,	UPDATOR_CD					=	P_STR_INPUTOR_CD				-- 更新者ＩＤ
				,	INVOICE_CD	=	(												-- 請求先コード
										SELECT
											DECODE(PAYMENT_INVOICE_CD, NULL, VENDER_CD, PAYMENT_INVOICE_CD) AS INVOICE_CD
										FROM
											VENDER
										WHERE
											VENDER.VENDER_CD = REC_MAIN.VENDER_CD
										AND VENDER_DIVISION = c_VenderDivTS
									)
			WHERE
					DEPOSIT_UPDATE_DIVISION		=	c_DepositUpdDiv1				-- 売掛更新フラグ(更新済)
			AND		DELIVERY_UPDATE_DATE		IS NOT NULL							-- 売掛締め日
			AND		ROWID IN (
								SELECT
									 SALES.ROW_ID
								FROM
									 (SELECT
										 SALES.ORGANIZATION_CD
										,SALES.VENDER_CD
										,VENDER.PAYMENT_INVOICE_CD AS INVOICE_CD
										,SALES.DATA_TYPE
										,SALES.CATEGORY_DIVISION
										,SALES.ROWID AS ROW_ID
									  FROM
										 TEMPORARY_CLAIM_SALES SALES						--仮締め売上トラン
										,VENDER VENDER
									  WHERE
										  SALES.ORGANIZATION_CD = REC_MAIN.ORGANIZATION_CD
									  AND SALES.ACCOUNT_YEARS <= nvAccountYears
									  AND SALES.CLAIM_UPDATE_DIVISION = c_ClaimUpdDiv0		--未処理
									  AND SALES.INVOICE_UPDATE_DATE IS NULL
									  AND SALES.DELIVERY_COMP = c_DeliveryComp2				--完納
									  AND SALES.APPROVAL_STATUS = c_ApprovalSts3			--承認済
									  AND SALES.VENDER_CD = VENDER.VENDER_CD
									  AND VENDER_DIVISION = c_VenderDivTS
									 ) SALES
									,CLASSIFICATION CLASSIFICATION		--分類マスタ
								WHERE
									 ( (SALES.VENDER_CD = REC_MAIN.VENDER_CD AND SALES.INVOICE_CD IS NULL) OR
									   SALES.INVOICE_CD = REC_MAIN.VENDER_CD )
								AND SALES.DATA_TYPE = CLASSIFICATION.DATA_TYPE
								AND SALES.CATEGORY_DIVISION = CLASSIFICATION.CATEGORY_DIVISION
								AND CLASSIFICATION.CLAIM_DIVISION = c_ClDiv0			--請求対象外
							 )
			;

			-- 売掛更新未処理対象(会計関連項目と請求関連項目を更新)
			UPDATE TEMPORARY_CLAIM_SALES
				SET
					(
						 ACCOUNT_SECTION_CD
						,DEBIT_TITLE_CD
						,DEBIT_SUB_TITLE_CD
						,CREDIT_TITLE_CD
						,CREDIT_SUB_TITLE_CD
						,CLAIM_TARGET_DIVISION
						,CLAIM_UPDATE_DIVISION
						,INVOICE_UPDATE_DATE
						,UPDATE_DATE
						,UPDATOR_CD
						,INVOICE_CD
					)
					=
					(
					 SELECT
					 	 NVL(MAX(ACCOUNT_SECTION_CD),'') AS ACCOUNT_SECTION_CD			-- 会計部門
					 	,NVL(MAX(DEBIT_ACCOUNTS_CD),'') AS DEBIT_ACCOUNTS_CD			-- 借方科目コード
					 	,NVL(MAX(DEBIT_ACCOUNTS_SUB_CD),'') AS DEBIT_ACCOUNTS_SUB_CD	-- 借方補助科目コード
					 	,NVL(MAX(CREDIT_ACCOUNTS_CD),'') AS CREDIT_ACCOUNTS_CD			-- 貸方科目コード
					 	,NVL(MAX(CREDIT_ACCOUNTS_SUB_CD),'') AS CREDIT_ACCOUNTS_SUB_CD	-- 貸方補助科目コード
					 	,c_ClaimTrgDiv9													-- 請求対象(対象外)
					 	,c_ClaimUpdDiv1													-- 請求更新フラグ(更新済)
					 	,daCreditDate													-- 請求締め日
					 	,SYSDATE														-- 更新日時
					 	,P_STR_INPUTOR_CD												-- 更新者ＩＤ
					 	,MAX(INVOICE_CD) AS INVOICE_CD									-- 請求先コード
					 FROM
					 	(
						 SELECT
						 	 BUMON.ACCOUNT_SECTION_CD
						 	,CLASSIFICATION.DEBIT_ACCOUNTS_CD
						 	,CLASSIFICATION.DEBIT_ACCOUNTS_SUB_CD
						 	,CLASSIFICATION.CREDIT_ACCOUNTS_CD
						 	,CLASSIFICATION.CREDIT_ACCOUNTS_SUB_CD
							,DECODE(VENDER.PAYMENT_INVOICE_CD, NULL, VENDER.VENDER_CD, VENDER.PAYMENT_INVOICE_CD) AS INVOICE_CD
						 FROM
						 	 BUMON
						 	,CLASSIFICATION
						 	,VENDER
						 WHERE
						 		TEMPORARY_CLAIM_SALES.ORGANIZATION_CD			=	BUMON.ORGANIZATION_CD
						 AND	TEMPORARY_CLAIM_SALES.DATA_TYPE				=	CLASSIFICATION.DATA_TYPE
						 AND	TEMPORARY_CLAIM_SALES.CATEGORY_DIVISION		=	CLASSIFICATION.CATEGORY_DIVISION
						 AND	TEMPORARY_CLAIM_SALES.VENDER_CD			=	VENDER.VENDER_CD
						 AND	VENDER.VENDER_DIVISION						=	c_VenderDivTS
					 	)
					)
			WHERE
					DEPOSIT_UPDATE_DIVISION		=	c_DepositUpdDiv0				-- 売掛更新フラグ(未処理)
			AND		DELIVERY_UPDATE_DATE		IS NULL								-- 売掛締め日
			AND		ROWID IN (
								SELECT
									 SALES.ROW_ID
								FROM
									 (SELECT
										 SALES.ORGANIZATION_CD
										,SALES.VENDER_CD
										,VENDER.PAYMENT_INVOICE_CD AS INVOICE_CD
										,SALES.DATA_TYPE
										,SALES.CATEGORY_DIVISION
										,SALES.ROWID AS ROW_ID
									  FROM
										 TEMPORARY_CLAIM_SALES SALES						--仮締め売上トラン
										,VENDER VENDER
									  WHERE
										  SALES.ORGANIZATION_CD = REC_MAIN.ORGANIZATION_CD
									  AND SALES.ACCOUNT_YEARS <= nvAccountYears
									  AND SALES.CLAIM_UPDATE_DIVISION = c_ClaimUpdDiv0		--未処理
									  AND SALES.INVOICE_UPDATE_DATE IS NULL
									  AND SALES.DELIVERY_COMP = c_DeliveryComp2				--完納
									  AND SALES.APPROVAL_STATUS = c_ApprovalSts3			--承認済
									  AND SALES.VENDER_CD = VENDER.VENDER_CD
									  AND VENDER_DIVISION = c_VenderDivTS
									 ) SALES
									,CLASSIFICATION CLASSIFICATION		--分類マスタ
								WHERE
									 ( (SALES.VENDER_CD = REC_MAIN.VENDER_CD AND SALES.INVOICE_CD IS NULL) OR
									   SALES.INVOICE_CD = REC_MAIN.VENDER_CD )
								AND SALES.DATA_TYPE = CLASSIFICATION.DATA_TYPE
								AND SALES.CATEGORY_DIVISION = CLASSIFICATION.CATEGORY_DIVISION
								AND CLASSIFICATION.CLAIM_DIVISION = c_ClDiv0			--請求対象外
							 )
			;

			--------------------------------------------------------------------------------
			--★【請求対象】仮締め入金トランザクション更新
			--------------------------------------------------------------------------------
			-- 売掛更新済対象(会計関連項目は売掛更新でセット済のため請求関連項目のみ更新)
			UPDATE TEMPORARY_CLAIM_CREDIT
				SET
					CLAIM_TARGET_DIVISION		=	c_ClaimTrgDiv1					-- 請求対象(処理済)
				,	CLAIM_UPDATE_DIVISION		=	c_ClaimUpdDiv1					-- 請求更新フラグ(更新済)
				,	CLAIM_NO					=	nvClaimNo						-- 請求番号
				,	INVOICE_UPDATE_DATE			=	daCreditDate					-- 請求締め日
				,	UPDATE_DATE					=	SYSDATE							-- 更新日時
				,	UPDATOR_CD					=	P_STR_INPUTOR_CD				-- 更新者ＩＤ
			WHERE
					ORGANIZATION_CD					=	REC_MAIN.ORGANIZATION_CD
			AND		VENDER_CD					=	REC_MAIN.VENDER_CD
			AND		CREDIT_DATE				   <=	daCreditDate
			AND		DEPOSIT_UPDATE_DIVISION		=	c_DepositUpdDiv1				-- 売掛更新フラグ(更新済)
			AND		DELIVERY_UPDATE_DATE		IS NOT NULL							-- 売掛締め日
			AND		CLAIM_UPDATE_DIVISION		=	c_ClaimUpdDiv0					-- 請求更新フラグ(未処理)
			AND		INVOICE_UPDATE_DATE			IS NULL								-- 請求締め日
			AND		APPROVAL_STATUS				=	c_ApprovalSts3					-- 承認ステータス(承認済)
			AND		c_ClDiv1 = (													-- 請求対象
								SELECT
									CLAIM_DIVISION
								FROM
									CLASSIFICATION
								WHERE
									TEMPORARY_CLAIM_CREDIT.DATA_TYPE			=	CLASSIFICATION.DATA_TYPE
								AND TEMPORARY_CLAIM_CREDIT.CATEGORY_DIVISION	=	CLASSIFICATION.CATEGORY_DIVISION
							   )
			;

			-- 売掛更新未処理対象(会計関連項目と請求関連項目を更新)
			UPDATE TEMPORARY_CLAIM_CREDIT
				SET
					(
						 ACCOUNT_SECTION_CD
						,CLAIM_TARGET_DIVISION
						,CLAIM_UPDATE_DIVISION
						,CLAIM_NO
						,INVOICE_UPDATE_DATE
						,UPDATE_DATE
						,UPDATOR_CD
					)
					=
					(
					 SELECT
					 	 NVL(MAX(ACCOUNT_SECTION_CD),'') AS ACCOUNT_SECTION_CD		-- 会計部門
					 	,c_ClaimTrgDiv1												-- 請求対象(処理済)
					 	,c_ClaimUpdDiv1												-- 請求更新フラグ(更新済)
					 	,nvClaimNo													-- 請求番号
					 	,daCreditDate												-- 請求締め日
					 	,SYSDATE													-- 更新日時
					 	,P_STR_INPUTOR_CD											-- 更新者ＩＤ
					 FROM
					 	(
						 SELECT
						 	 BUMON.ACCOUNT_SECTION_CD
						 FROM
						 	 BUMON
						 WHERE
							 TEMPORARY_CLAIM_CREDIT.ORGANIZATION_CD			=	BUMON.SECTION_CD
					 	)
					)
			WHERE
					ORGANIZATION_CD					=	REC_MAIN.ORGANIZATION_CD
			AND		VENDER_CD					=	REC_MAIN.VENDER_CD
			AND		CREDIT_DATE				   <=	daCreditDate
			AND		DEPOSIT_UPDATE_DIVISION		=	c_DepositUpdDiv0				-- 売掛更新フラグ(未処理)
			AND		DELIVERY_UPDATE_DATE		IS NULL								-- 売掛締め日
			AND		CLAIM_UPDATE_DIVISION		=	c_ClaimUpdDiv0					-- 請求更新フラグ(未処理)
			AND		INVOICE_UPDATE_DATE			IS NULL								-- 請求締め日
			AND		APPROVAL_STATUS				=	c_ApprovalSts3					-- 承認ステータス(承認済)
			AND		c_ClDiv1 = (													-- 請求対象
								SELECT
									CLAIM_DIVISION
								FROM
									CLASSIFICATION
								WHERE
									TEMPORARY_CLAIM_CREDIT.DATA_TYPE			=	CLASSIFICATION.DATA_TYPE
								AND TEMPORARY_CLAIM_CREDIT.CATEGORY_DIVISION	=	CLASSIFICATION.CATEGORY_DIVISION
							   )
			;

			--------------------------------------------------------------------------------
			--★【請求対象外】仮締め入金トランザクション更新
			--------------------------------------------------------------------------------
			-- 売掛更新済対象(会計関連項目は売掛更新でセット済のため請求関連項目のみ更新)
			UPDATE TEMPORARY_CLAIM_CREDIT
				SET
					CLAIM_TARGET_DIVISION		=	c_ClaimTrgDiv9					-- 請求対象(対象外)
				,	CLAIM_UPDATE_DIVISION		=	c_ClaimUpdDiv1					-- 請求更新フラグ(更新済)
				,	INVOICE_UPDATE_DATE			=	daCreditDate					-- 請求締め日
				,	UPDATE_DATE					=	SYSDATE							-- 更新日時
				,	UPDATOR_CD					=	P_STR_INPUTOR_CD				-- 更新者ＩＤ
			WHERE
					ORGANIZATION_CD					=	REC_MAIN.ORGANIZATION_CD
			AND		VENDER_CD					=	REC_MAIN.VENDER_CD
			AND		CREDIT_DATE				   <=	daCreditDate
			AND		DEPOSIT_UPDATE_DIVISION		=	c_DepositUpdDiv1				-- 売掛更新フラグ(更新済)
			AND		DELIVERY_UPDATE_DATE		IS NOT NULL							-- 売掛締め日
			AND		CLAIM_UPDATE_DIVISION		=	c_ClaimUpdDiv0					-- 請求更新フラグ(未処理)
			AND		INVOICE_UPDATE_DATE			IS NULL								-- 請求締め日
			AND		APPROVAL_STATUS				=	c_ApprovalSts3					-- 承認ステータス(承認済)
			;

			-- 売掛更新未処理対象(会計関連項目と請求関連項目を更新)
			UPDATE TEMPORARY_CLAIM_CREDIT
				SET
					(
						 ACCOUNT_SECTION_CD
						,CLAIM_TARGET_DIVISION
						,CLAIM_UPDATE_DIVISION
						,INVOICE_UPDATE_DATE
						,UPDATE_DATE
						,UPDATOR_CD
					)
					=
					(
					 SELECT
					 	 NVL(MAX(ACCOUNT_SECTION_CD),'') AS ACCOUNT_SECTION_CD		-- 会計部門
					 	,c_ClaimTrgDiv9												-- 請求対象(対象外)
					 	,c_ClaimUpdDiv1												-- 請求更新フラグ(更新済)
					 	,daCreditDate												-- 請求締め日
					 	,SYSDATE													-- 更新日時
					 	,P_STR_INPUTOR_CD											-- 更新者ＩＤ
					 FROM
					 	(
						 SELECT
						 	 BUMON.ACCOUNT_SECTION_CD
						 FROM
						 	 BUMON
						 WHERE
							 TEMPORARY_CLAIM_CREDIT.ORGANIZATION_CD			=	BUMON.SECTION_CD
					 	)
					)
			WHERE
					ORGANIZATION_CD					=	REC_MAIN.ORGANIZATION_CD
			AND		VENDER_CD					=	REC_MAIN.VENDER_CD
			AND		CREDIT_DATE				   <=	daCreditDate
			AND		DEPOSIT_UPDATE_DIVISION		=	c_DepositUpdDiv0				-- 売掛更新フラグ(未処理)
			AND		DELIVERY_UPDATE_DATE		IS NULL								-- 売掛締め日
			AND		CLAIM_UPDATE_DIVISION		=	c_ClaimUpdDiv0					-- 請求更新フラグ(未処理)
			AND		INVOICE_UPDATE_DATE			IS NULL								-- 請求締め日
			AND		APPROVAL_STATUS				=	c_ApprovalSts3					-- 承認ステータス(承認済)
			;

			--------------------------------------------------------------------------------
			--★【請求対象】仮締め支払トランザクション更新
			--------------------------------------------------------------------------------
			-- 売掛更新済対象(会計関連項目は売掛更新でセット済のため請求関連項目のみ更新)
			UPDATE TEMPORARY_CLAIM_PAYMENT
				SET
					CLAIM_TARGET_DIVISION		=	c_ClaimTrgDiv1					-- 請求対象(処理済)
				,	CLAIM_UPDATE_DIVISION		=	c_ClaimUpdDiv1					-- 請求更新フラグ(更新済)
				,	CLAIM_NO					=	nvClaimNo						-- 請求番号
				,	INVOICE_UPDATE_DATE			=	daCreditDate					-- 請求締め日
				,	UPDATE_DATE					=	SYSDATE							-- 更新日時
				,	UPDATOR_CD					=	P_STR_INPUTOR_CD				-- 更新者ＩＤ
			WHERE
					ORGANIZATION_CD					=	REC_MAIN.ORGANIZATION_CD
			AND		SUPPLIER_CD					=	REC_MAIN.VENDER_CD
			AND		PAYMENT_DATE			   <=	daCreditDate
			AND		DEPOSIT_UPDATE_DIVISION		=	c_DepositUpdDiv1				-- 売掛更新フラグ(更新済)
			AND		DELIVERY_UPDATE_DATE		IS NOT NULL							-- 売掛締め日
			AND		CLAIM_UPDATE_DIVISION		=	c_ClaimUpdDiv0					-- 請求更新フラグ(未処理)
			AND		INVOICE_UPDATE_DATE			IS NULL								-- 請求締め日
			AND		APPROVAL_STATUS				=	c_ApprovalSts3					-- 承認ステータス(承認済)
			AND		c_ClDiv1 = (													-- 請求対象
								SELECT
									CLAIM_DIVISION
								FROM
									CLASSIFICATION
								WHERE
									TEMPORARY_CLAIM_PAYMENT.DATA_TYPE			=	CLASSIFICATION.DATA_TYPE
								AND TEMPORARY_CLAIM_PAYMENT.CATEGORY_DIVISION	=	CLASSIFICATION.CATEGORY_DIVISION
							   )
			;

			-- 売掛更新未処理対象(会計関連項目と請求関連項目を更新)
			UPDATE TEMPORARY_CLAIM_PAYMENT
				SET
					(
						 ACCOUNT_SECTION_CD
						,CLAIM_TARGET_DIVISION
						,CLAIM_UPDATE_DIVISION
						,CLAIM_NO
						,INVOICE_UPDATE_DATE
						,UPDATE_DATE
						,UPDATOR_CD
					)
					=
					(
					 SELECT
					 	 NVL(MAX(ACCOUNT_SECTION_CD),'') AS ACCOUNT_SECTION_CD		-- 会計部門
					 	,c_ClaimTrgDiv1												-- 請求対象(処理済)
					 	,c_ClaimUpdDiv1												-- 請求更新フラグ(更新済)
					 	,nvClaimNo													-- 請求番号
					 	,daCreditDate												-- 請求締め日
					 	,SYSDATE													-- 更新日時
					 	,P_STR_INPUTOR_CD											-- 更新者ＩＤ
					 FROM
					 	(
						 SELECT
						 	 BUMON.ACCOUNT_SECTION_CD
						 FROM
						 	 BUMON
						 WHERE
							 TEMPORARY_CLAIM_PAYMENT.ORGANIZATION_CD			=	BUMON.SECTION_CD
					 	)
					)
			WHERE
					ORGANIZATION_CD					=	REC_MAIN.ORGANIZATION_CD
			AND		SUPPLIER_CD					=	REC_MAIN.VENDER_CD
			AND		PAYMENT_DATE			   <=	daCreditDate
			AND		DEPOSIT_UPDATE_DIVISION		=	c_DepositUpdDiv0				-- 売掛更新フラグ(未処理)
			AND		DELIVERY_UPDATE_DATE		IS NULL								-- 売掛締め日
			AND		CLAIM_UPDATE_DIVISION		=	c_ClaimUpdDiv0					-- 請求更新フラグ(未処理)
			AND		INVOICE_UPDATE_DATE			IS NULL								-- 請求締め日
			AND		APPROVAL_STATUS				=	c_ApprovalSts3					-- 承認ステータス(承認済)
			AND		c_ClDiv1 = (													-- 請求対象
								SELECT
									CLAIM_DIVISION
								FROM
									CLASSIFICATION
								WHERE
									TEMPORARY_CLAIM_PAYMENT.DATA_TYPE			=	CLASSIFICATION.DATA_TYPE
								AND TEMPORARY_CLAIM_PAYMENT.CATEGORY_DIVISION	=	CLASSIFICATION.CATEGORY_DIVISION
							   )
			;

			--------------------------------------------------------------------------------
			--★【請求対象外】仮締め支払トランザクション更新
			--------------------------------------------------------------------------------
			-- 売掛更新済対象(会計関連項目は売掛更新でセット済のため請求関連項目のみ更新)
			UPDATE TEMPORARY_CLAIM_PAYMENT
				SET
					CLAIM_TARGET_DIVISION		=	c_ClaimTrgDiv9					-- 請求対象(対象外)
				,	CLAIM_UPDATE_DIVISION		=	c_ClaimUpdDiv1					-- 請求更新フラグ(更新済)
				,	INVOICE_UPDATE_DATE			=	daCreditDate					-- 請求締め日
				,	UPDATE_DATE					=	SYSDATE							-- 更新日時
				,	UPDATOR_CD					=	P_STR_INPUTOR_CD				-- 更新者ＩＤ
			WHERE
					ORGANIZATION_CD					=	REC_MAIN.ORGANIZATION_CD
			AND		SUPPLIER_CD					=	REC_MAIN.VENDER_CD
			AND		PAYMENT_DATE			   <=	daCreditDate
			AND		DEPOSIT_UPDATE_DIVISION		=	c_DepositUpdDiv1				-- 売掛更新フラグ(更新済)
			AND		DELIVERY_UPDATE_DATE		IS NOT NULL							-- 売掛締め日
			AND		CLAIM_UPDATE_DIVISION		=	c_ClaimUpdDiv0					-- 請求更新フラグ(未処理)
			AND		INVOICE_UPDATE_DATE			IS NULL								-- 請求締め日
			AND		APPROVAL_STATUS				=	c_ApprovalSts3					-- 承認ステータス(承認済)
			;

			-- 売掛更新未処理対象(会計関連項目と請求関連項目を更新)
			UPDATE TEMPORARY_CLAIM_PAYMENT
				SET
					(
						 ACCOUNT_SECTION_CD
						,CLAIM_TARGET_DIVISION
						,CLAIM_UPDATE_DIVISION
						,INVOICE_UPDATE_DATE
						,UPDATE_DATE
						,UPDATOR_CD
					)
					=
					(
					 SELECT
					 	 NVL(MAX(ACCOUNT_SECTION_CD),'') AS ACCOUNT_SECTION_CD		-- 会計部門
					 	,c_ClaimTrgDiv9												-- 請求対象(対象外)
					 	,c_ClaimUpdDiv1												-- 請求更新フラグ(更新済)
					 	,daCreditDate												-- 請求締め日
					 	,SYSDATE													-- 更新日時
					 	,P_STR_INPUTOR_CD											-- 更新者ＩＤ
					 FROM
					 	(
						 SELECT
						 	 BUMON.ACCOUNT_SECTION_CD
						 FROM
						 	 BUMON
						 WHERE
							 TEMPORARY_CLAIM_PAYMENT.ORGANIZATION_CD			=	BUMON.SECTION_CD
					 	)
					)
			WHERE
					ORGANIZATION_CD					=	REC_MAIN.ORGANIZATION_CD
			AND		SUPPLIER_CD					=	REC_MAIN.VENDER_CD
			AND		PAYMENT_DATE			   <=	daCreditDate
			AND		DEPOSIT_UPDATE_DIVISION		=	c_DepositUpdDiv0				-- 売掛更新フラグ(未処理)
			AND		DELIVERY_UPDATE_DATE		IS NULL								-- 売掛締め日
			AND		CLAIM_UPDATE_DIVISION		=	c_ClaimUpdDiv0					-- 請求更新フラグ(未処理)
			AND		INVOICE_UPDATE_DATE			IS NULL								-- 請求締め日
			AND		APPROVAL_STATUS				=	c_ApprovalSts3					-- 承認ステータス(承認済)
			;

			--------------------------------------------------------------------------------
			--★【請求対象】仮締めグループ間相殺トランザクション更新
			--------------------------------------------------------------------------------
			-- 売掛更新済対象(会計関連項目は売掛更新でセット済のため請求関連項目のみ更新)
			UPDATE TMPCLAIM_OFFSET_GROUP_DATA
				SET
					CLAIM_TARGET_DIVISION		=	c_ClaimTrgDiv1					-- 請求対象(処理済)
				,	CLAIM_UPDATE_DIVISION		=	c_ClaimUpdDiv1					-- 請求更新フラグ(更新済)
				,	CLAIM_NO					=	nvClaimNo						-- 請求番号
				,	INVOICE_UPDATE_DATE			=	daCreditDate					-- 請求締め日
				,	UPDATE_DATE					=	SYSDATE							-- 更新日時
				,	UPDATOR_CD					=	P_STR_INPUTOR_CD				-- 更新者ＩＤ
			WHERE
					ORGANIZATION_CD					=	REC_MAIN.ORGANIZATION_CD
			AND		VENDER_CD					=	REC_MAIN.VENDER_CD
			AND		OFFSET_DATE				   <=	daCreditDate
			AND		DEPOSIT_UPDATE_DIVISION		=	c_DepositUpdDiv1				-- 売掛更新フラグ(更新済)
			AND		DELIVERY_UPDATE_DATE		IS NOT NULL							-- 売掛締め日
			AND		CLAIM_UPDATE_DIVISION		=	c_ClaimUpdDiv0					-- 請求更新フラグ(未処理)
			AND		INVOICE_UPDATE_DATE			IS NULL								-- 請求締め日
			AND		DEPOSIT_OFFSET_AMOUNT		IS NOT NULL
			AND		APPROVAL_STATUS				=	c_ApprovalSts3					-- 承認ステータス(承認済)
			AND		VENDER_DIVISION				=	c_VenderDivTS					-- 得意先
			AND		c_ClDiv1 = (													-- 請求対象
								SELECT
									CLAIM_DIVISION
								FROM
									CLASSIFICATION
								WHERE
									TMPCLAIM_OFFSET_GROUP_DATA.DATA_TYPE				=	CLASSIFICATION.DATA_TYPE
								AND TMPCLAIM_OFFSET_GROUP_DATA.CATEGORY_DIVISION		=	CLASSIFICATION.CATEGORY_DIVISION
							   )
			;

			-- 売掛更新未処理対象(会計関連項目と請求関連項目を更新)
			UPDATE TMPCLAIM_OFFSET_GROUP_DATA
				SET
					(
						 ACCOUNT_SECTION_CD
						,DEBIT_TITLE_CD
						,DEBIT_SUB_TITLE_CD
						,CREDIT_TITLE_CD
						,CREDIT_SUB_TITLE_CD
						,CLAIM_TARGET_DIVISION
						,CLAIM_UPDATE_DIVISION
						,CLAIM_NO
						,INVOICE_UPDATE_DATE
						,UPDATE_DATE
						,UPDATOR_CD
					)
					=
					(
					 SELECT
					 	 NVL(MAX(ACCOUNT_SECTION_CD),'') AS ACCOUNT_SECTION_CD			-- 会計部門
					 	,NVL(MAX(DEBIT_ACCOUNTS_CD),'') AS DEBIT_ACCOUNTS_CD			-- 借方科目コード
					 	,NVL(MAX(DEBIT_ACCOUNTS_SUB_CD),'') AS DEBIT_ACCOUNTS_SUB_CD	-- 借方補助科目コード
					 	,NVL(MAX(CREDIT_ACCOUNTS_CD),'') AS CREDIT_ACCOUNTS_CD			-- 貸方科目コード
					 	,NVL(MAX(CREDIT_ACCOUNTS_SUB_CD),'') AS CREDIT_ACCOUNTS_SUB_CD	-- 貸方補助科目コード
					 	,c_ClaimTrgDiv1													-- 請求対象(処理済)
					 	,c_ClaimUpdDiv1													-- 請求更新フラグ(更新済)
					 	,nvClaimNo														-- 請求番号
					 	,daCreditDate													-- 請求締め日
					 	,SYSDATE														-- 更新日時
					 	,P_STR_INPUTOR_CD												-- 更新者ＩＤ
					 FROM
					 	(
						 SELECT
						 	 BUMON.ACCOUNT_SECTION_CD
						 	,CLASSIFICATION.DEBIT_ACCOUNTS_CD
						 	,CLASSIFICATION.DEBIT_ACCOUNTS_SUB_CD
						 	,CLASSIFICATION.CREDIT_ACCOUNTS_CD
						 	,CLASSIFICATION.CREDIT_ACCOUNTS_SUB_CD
						 FROM
						 	 BUMON
						 	,CLASSIFICATION
						 WHERE
						 		TMPCLAIM_OFFSET_GROUP_DATA.ORGANIZATION_CD			=	BUMON.SECTION_CD
						 AND	TMPCLAIM_OFFSET_GROUP_DATA.DATA_TYPE			=	CLASSIFICATION.DATA_TYPE
						 AND	TMPCLAIM_OFFSET_GROUP_DATA.CATEGORY_DIVISION	=	CLASSIFICATION.CATEGORY_DIVISION
					 	)
					)
			WHERE
					ORGANIZATION_CD					=	REC_MAIN.ORGANIZATION_CD
			AND		VENDER_CD					=	REC_MAIN.VENDER_CD
			AND		OFFSET_DATE				   <=	daCreditDate
			AND		DEPOSIT_UPDATE_DIVISION		=	c_DepositUpdDiv0				-- 売掛更新フラグ(未処理)
			AND		DELIVERY_UPDATE_DATE		IS NULL								-- 売掛締め日
			AND		CLAIM_UPDATE_DIVISION		=	c_ClaimUpdDiv0					-- 請求更新フラグ(未処理)
			AND		INVOICE_UPDATE_DATE			IS NULL								-- 請求締め日
			AND		DEPOSIT_OFFSET_AMOUNT		IS NOT NULL
			AND		APPROVAL_STATUS				=	c_ApprovalSts3					-- 承認ステータス(承認済)
			AND		VENDER_DIVISION				=	c_VenderDivTS					-- 得意先
			AND		c_ClDiv1 = (													-- 請求対象
								SELECT
									CLAIM_DIVISION
								FROM
									CLASSIFICATION
								WHERE
									TMPCLAIM_OFFSET_GROUP_DATA.DATA_TYPE				=	CLASSIFICATION.DATA_TYPE
								AND TMPCLAIM_OFFSET_GROUP_DATA.CATEGORY_DIVISION		=	CLASSIFICATION.CATEGORY_DIVISION
							   )
			;

			--------------------------------------------------------------------------------
			--★【請求対象外】仮締めグループ間相殺トランザクション更新
			--------------------------------------------------------------------------------
			-- 売掛更新済対象(会計関連項目は売掛更新でセット済のため請求関連項目のみ更新)
			UPDATE TMPCLAIM_OFFSET_GROUP_DATA
				SET
					CLAIM_TARGET_DIVISION		=	c_ClaimTrgDiv9					-- 請求対象(対象外)
				,	CLAIM_UPDATE_DIVISION		=	c_ClaimUpdDiv1					-- 請求更新フラグ(更新済)
				,	INVOICE_UPDATE_DATE			=	daCreditDate					-- 請求締め日
				,	UPDATE_DATE					=	SYSDATE							-- 更新日時
				,	UPDATOR_CD					=	P_STR_INPUTOR_CD				-- 更新者ＩＤ
			WHERE
					ORGANIZATION_CD					=	REC_MAIN.ORGANIZATION_CD
			AND		VENDER_CD					=	REC_MAIN.VENDER_CD
			AND		OFFSET_DATE				   <=	daCreditDate
			AND		DEPOSIT_UPDATE_DIVISION		=	c_DepositUpdDiv1				-- 売掛更新フラグ(更新済)
			AND		DELIVERY_UPDATE_DATE		IS NOT NULL							-- 売掛締め日
			AND		CLAIM_UPDATE_DIVISION		=	c_ClaimUpdDiv0					-- 請求更新フラグ(未処理)
			AND		INVOICE_UPDATE_DATE			IS NULL								-- 請求締め日
			AND		APPROVAL_STATUS				=	c_ApprovalSts3					-- 承認ステータス(承認済)
			AND		VENDER_DIVISION				=	c_VenderDivTS					-- 得意先
			;

			-- 売掛更新未処理対象(会計関連項目と請求関連項目を更新)
			UPDATE TMPCLAIM_OFFSET_GROUP_DATA
				SET
					(
						 ACCOUNT_SECTION_CD
						,DEBIT_TITLE_CD
						,DEBIT_SUB_TITLE_CD
						,CREDIT_TITLE_CD
						,CREDIT_SUB_TITLE_CD
						,CLAIM_TARGET_DIVISION
						,CLAIM_UPDATE_DIVISION
						,INVOICE_UPDATE_DATE
						,UPDATE_DATE
						,UPDATOR_CD
					)
					=
					(
					 SELECT
					 	 NVL(MAX(ACCOUNT_SECTION_CD),'') AS ACCOUNT_SECTION_CD			-- 会計部門
					 	,NVL(MAX(DEBIT_ACCOUNTS_CD),'') AS DEBIT_ACCOUNTS_CD			-- 借方科目コード
					 	,NVL(MAX(DEBIT_ACCOUNTS_SUB_CD),'') AS DEBIT_ACCOUNTS_SUB_CD	-- 借方補助科目コード
					 	,NVL(MAX(CREDIT_ACCOUNTS_CD),'') AS CREDIT_ACCOUNTS_CD			-- 貸方科目コード
					 	,NVL(MAX(CREDIT_ACCOUNTS_SUB_CD),'') AS CREDIT_ACCOUNTS_SUB_CD	-- 貸方補助科目コード
					 	,c_ClaimTrgDiv9													-- 請求対象(対象外)
					 	,c_ClaimUpdDiv1													-- 請求更新フラグ(更新済)
					 	,daCreditDate													-- 請求締め日
					 	,SYSDATE														-- 更新日時
					 	,P_STR_INPUTOR_CD												-- 更新者ＩＤ
					 FROM
					 	(
						 SELECT
						 	 BUMON.ACCOUNT_SECTION_CD
						 	,CLASSIFICATION.DEBIT_ACCOUNTS_CD
						 	,CLASSIFICATION.DEBIT_ACCOUNTS_SUB_CD
						 	,CLASSIFICATION.CREDIT_ACCOUNTS_CD
						 	,CLASSIFICATION.CREDIT_ACCOUNTS_SUB_CD
						 FROM
						 	 BUMON
						 	,CLASSIFICATION
						 WHERE
						 		TMPCLAIM_OFFSET_GROUP_DATA.ORGANIZATION_CD			=	BUMON.SECTION_CD
						 AND	TMPCLAIM_OFFSET_GROUP_DATA.DATA_TYPE				=	CLASSIFICATION.DATA_TYPE
						 AND	TMPCLAIM_OFFSET_GROUP_DATA.CATEGORY_DIVISION		=	CLASSIFICATION.CATEGORY_DIVISION
					 	)
					)
			WHERE
					ORGANIZATION_CD					=	REC_MAIN.ORGANIZATION_CD
			AND		VENDER_CD					=	REC_MAIN.VENDER_CD
			AND		OFFSET_DATE				   <=	daCreditDate
			AND		DEPOSIT_UPDATE_DIVISION		=	c_DepositUpdDiv0				-- 売掛更新フラグ(未処理)
			AND		DELIVERY_UPDATE_DATE		IS NULL								-- 売掛締め日
			AND		CLAIM_UPDATE_DIVISION		=	c_ClaimUpdDiv0					-- 請求更新フラグ(未処理)
			AND		INVOICE_UPDATE_DATE			IS NULL								-- 請求締め日
			AND		APPROVAL_STATUS				=	c_ApprovalSts3					-- 承認ステータス(承認済)
			AND		VENDER_DIVISION				=	c_VenderDivTS					-- 得意先
			;

			-- カウント
			nCount := nCount + 1;

		END LOOP;

		--対象データなしの場合
		IF nCount = 0 THEN
			--ロールバック
			ROLLBACK;
			--戻り値設定
			P_NUM_RET := 9;

			RETURN;
		END IF;

	ELSE
	--------------------------------------------------------------------------------
	--【本締め】の場合
	--------------------------------------------------------------------------------
		--------------------------------------------------------------------------------
		--請求データ抽出処理
		--------------------------------------------------------------------------------
		/* 請求データ抽出 カーソル */
		FOR REC_MAIN IN curSales(daCreditDate, nvAccountYears)
		LOOP
			-- 請求番号取得
			nvClaimNo := FUN_GET_CLAIM_NO(P_STR_INPUTOR_CD);

			-- 入金予定日取得(FUNCTION呼出)
			nvCreditScheDate := FUN_GET_CREDIT_SCHE_DATE(REC_MAIN.VENDER_CD, TO_CHAR(daCreditDate, 'YYYYMMDD'));

			-- 入金分類、手形サイト取得(PROCEDURE呼出)
			nClaimAmount := REC_MAIN.CLAIM_AMOUNT - REC_MAIN.BALANCE_FORWARD;
			PRO_GET_CREDIT_DIV(REC_MAIN.VENDER_CD, nClaimAmount, nvCreditDiv, nNoteSight);
			IF nvCreditDiv IS NULL THEN
				ROLLBACK;
				P_NUM_RET := 9;
				RETURN;
			END IF;

			-- 取引先マスタ検索
			SELECT	BILL_PUBLISH				-- 請求書発行済フラグ
				,	HOLIDAY_FLG					-- 休日指定フラグ
			INTO	nBillPublish
				,	nHolidayFlg
			FROM	VENDER
			WHERE	VENDER_DIVISION		=	c_VenderDivTS
			AND		VENDER_CD			=	REC_MAIN.VENDER_CD
			;

			-- 請求書発行区分＝1(発行しない)の場合
			IF nBillPublish = 1 THEN
				nBillPublish := 9;		-- 発行不要
			END IF;

			-- 請求ヘッダーデータ設定
			rtRecWork.CLAIM_NO					:= nvClaimNo;						-- 請求番号
			rtRecWork.ORGANIZATION_CD				:= REC_MAIN.ORGANIZATION_CD;				-- 部門コード
			rtRecWork.VENDER_CD				:= REC_MAIN.VENDER_CD;			-- 請求先コード
			rtRecWork.CREDIT_DATE				:= daCreditDate;					-- 請求締め日
			rtRecWork.CREDIT_SCHEDULED_DATE		:= TO_DATE(nvCreditScheDate, 'YYYY/MM/DD');		-- 入金予定日
			rtRecWork.CREDIT_DIVISION			:= nvCreditDiv;						-- 入金分類（決済方法）
			rtRecWork.NOTE_SIGHT				:= nNoteSight;						-- 手形サイト
			rtRecWork.HOLIDAY_FLG				:= nHolidayFlg;						-- 休日指定フラグ
			rtRecWork.CLAIM_AMOUNT_FORWARD		:= REC_MAIN.CLAIM_AMOUNT_FORWARD;	-- 前回請求額
			rtRecWork.CREDIT_AMOUNT_FORWARD		:= REC_MAIN.CREDIT_AMOUNT_FORWARD;	-- 前回入金額
			rtRecWork.OTHER_CREDIT_AMOUNT_FORWARD	:= REC_MAIN.OTHER_CREDIT_AMOUNT_FORWARD;	-- その他入金金額
			rtRecWork.BALANCE_FORWARD			:= REC_MAIN.BALANCE_FORWARD;		-- 差引繰越額
			rtRecWork.SALES_AMOUNT				:= REC_MAIN.SALES_AMOUNT;			-- 今回売上額
			rtRecWork.SALES_RETURNED_AMOUNT		:= REC_MAIN.SALES_RETURNED_AMOUNT;	-- 返品金額
			rtRecWork.SALES_DISCOUNT_AMOUNT		:= REC_MAIN.SALES_DISCOUNT_AMOUNT;	-- 値引金額
			rtRecWork.OTHER_SALES_AMOUNT		:= REC_MAIN.OTHER_SALES_AMOUNT;		-- その他売上金額
			rtRecWork.OFFSET_AMOUNT				:= REC_MAIN.OFFSET_AMOUNT;			-- 相殺金額
			rtRecWork.TAX_AMOUNT				:= REC_MAIN.TAX_AMOUNT;				-- 消費税額
			rtRecWork.CLAIM_AMOUNT				:= REC_MAIN.CLAIM_AMOUNT;			-- 今回請求額
			rtRecWork.ERASER_AMOUNT				:= 0;								-- 消込額
			rtRecWork.ERASER_BALANCE_AMOUNT		:= REC_MAIN.CLAIM_AMOUNT;			-- 消込残
			rtRecWork.BILL_DIVISION				:= nBillPublish;					-- 請求書発行済フラグ
			rtRecWork.ISSUE_DATE				:= NULL;							-- 発行日
			rtRecWork.ISSUER_CD					:= NULL;							-- 発行者ＩＤ
			rtRecWork.INPUT_DATE				:= SYSDATE;							-- 登録日時
			rtRecWork.INPUTOR_CD				:= P_STR_INPUTOR_CD;				-- 登録者ＩＤ
			rtRecWork.UPDATE_DATE				:= SYSDATE;							-- 更新日時
			rtRecWork.UPDATOR_CD				:= P_STR_INPUTOR_CD;				-- 更新者ＩＤ

			--------------------------------------------------------------------------------
			--★請求ヘッダー登録
			--------------------------------------------------------------------------------
			INSERT INTO CLAIM_HEADER VALUES rtRecWork;

			----------------------------------------------------------------------------------------------------------
			--【請求対象】【請求対象外】の各トランザクション更新処理
			----------------------------------------------------------------------------------------------------------
			--------------------------------------------------------------------------------
			--★【請求対象】売上トランザクション更新
			--------------------------------------------------------------------------------
			-- 売掛更新済対象(会計関連項目は売掛更新でセット済のため請求関連項目のみ更新)
			UPDATE SALES
				SET
					CLAIM_TARGET_DIVISION		=	c_ClaimTrgDiv1					-- 請求対象(処理済)
				,	CLAIM_UPDATE_DIVISION		=	c_ClaimUpdDiv1					-- 請求更新フラグ(更新済)
				,	CLAIM_NO					=	nvClaimNo						-- 請求番号
				,	INVOICE_UPDATE_DATE			=	daCreditDate					-- 請求締め日
				,	UPDATE_DATE					=	SYSDATE							-- 更新日時
				,	UPDATOR_CD					=	P_STR_INPUTOR_CD				-- 更新者ＩＤ
				,	INVOICE_CD	=	(												-- 請求先コード
										SELECT
											DECODE(PAYMENT_INVOICE_CD, NULL, VENDER_CD, PAYMENT_INVOICE_CD) AS INVOICE_CD
										FROM
											VENDER
										WHERE
											VENDER_CD = REC_MAIN.VENDER_CD
										AND VENDER_DIVISION = c_VenderDivTS
									)
			WHERE
					DEPOSIT_UPDATE_DIVISION		=	c_DepositUpdDiv1				-- 売掛更新フラグ(更新済)
			AND		DELIVERY_UPDATE_DATE		IS NOT NULL							-- 売掛締め日
			AND		ROWID IN (
								SELECT
									 SALES.ROW_ID
								FROM
									 (SELECT
										 SALES.ORGANIZATION_CD
										,SALES.VENDER_CD
										,VENDER.PAYMENT_INVOICE_CD AS INVOICE_CD
										,SALES.DATA_TYPE
										,SALES.CATEGORY_DIVISION
										,SALES.ROWID AS ROW_ID
									  FROM
										 SALES SALES						--売上トラン
										,VENDER VENDER
									  WHERE
										  SALES.ORGANIZATION_CD = REC_MAIN.ORGANIZATION_CD
									  AND SALES.ACCOUNT_YEARS <= nvAccountYears
									  AND SALES.CLAIM_UPDATE_DIVISION = c_ClaimUpdDiv0		--未処理
									  AND SALES.INVOICE_UPDATE_DATE IS NULL
									  AND SALES.DELIVERY_COMP = c_DeliveryComp2				--完納
									  AND SALES.APPROVAL_STATUS = c_ApprovalSts3			--承認済
									  AND SALES.VENDER_CD = VENDER.VENDER_CD
									  AND VENDER_DIVISION = c_VenderDivTS
									 ) SALES
									,CLASSIFICATION CLASSIFICATION		--分類マスタ
								WHERE
									( (SALES.VENDER_CD = REC_MAIN.VENDER_CD AND SALES.INVOICE_CD IS NULL) OR
									  SALES.INVOICE_CD = REC_MAIN.VENDER_CD )
								AND SALES.DATA_TYPE = CLASSIFICATION.DATA_TYPE
								AND SALES.CATEGORY_DIVISION = CLASSIFICATION.CATEGORY_DIVISION
								AND CLASSIFICATION.CLAIM_DIVISION = c_ClDiv1			--請求対象
							 )
			;

			-- 売掛更新未処理対象(会計関連項目と請求関連項目を更新)
			UPDATE SALES
				SET
					(
						 ACCOUNT_SECTION_CD
						,DEBIT_TITLE_CD
						,DEBIT_SUB_TITLE_CD
						,CREDIT_TITLE_CD
						,CREDIT_SUB_TITLE_CD
						,CLAIM_TARGET_DIVISION
						,CLAIM_UPDATE_DIVISION
						,CLAIM_NO
						,INVOICE_UPDATE_DATE
						,UPDATE_DATE
						,UPDATOR_CD
						,INVOICE_CD
					)
					=
					(
					 SELECT
					 	 NVL(MAX(ACCOUNT_SECTION_CD),'') AS ACCOUNT_SECTION_CD			-- 会計部門
					 	,NVL(MAX(DEBIT_ACCOUNTS_CD),'') AS DEBIT_ACCOUNTS_CD			-- 借方科目コード
					 	,NVL(MAX(DEBIT_ACCOUNTS_SUB_CD),'') AS DEBIT_ACCOUNTS_SUB_CD	-- 借方補助科目コード
					 	,NVL(MAX(CREDIT_ACCOUNTS_CD),'') AS CREDIT_ACCOUNTS_CD			-- 貸方科目コード
					 	,NVL(MAX(CREDIT_ACCOUNTS_SUB_CD),'') AS CREDIT_ACCOUNTS_SUB_CD	-- 貸方補助科目コード
					 	,c_ClaimTrgDiv1													-- 請求対象(処理済)
					 	,c_ClaimUpdDiv1													-- 請求更新フラグ(更新済)
					 	,nvClaimNo														-- 請求番号
					 	,daCreditDate													-- 請求締め日
					 	,SYSDATE														-- 更新日時
					 	,P_STR_INPUTOR_CD												-- 更新者ＩＤ
					 	,MAX(INVOICE_CD) AS INVOICE_CD									-- 請求先コード
					 FROM
					 	(
						 SELECT
						 	 BUMON.ACCOUNT_SECTION_CD
						 	,CLASSIFICATION.DEBIT_ACCOUNTS_CD
						 	,CLASSIFICATION.DEBIT_ACCOUNTS_SUB_CD
						 	,CLASSIFICATION.CREDIT_ACCOUNTS_CD
						 	,CLASSIFICATION.CREDIT_ACCOUNTS_SUB_CD
							,DECODE(VENDER.PAYMENT_INVOICE_CD, NULL, VENDER.VENDER_CD, VENDER.PAYMENT_INVOICE_CD) AS INVOICE_CD
						 FROM
						 	 BUMON
						 	,CLASSIFICATION
						 	,VENDER
						 WHERE
						 		SALES.ORGANIZATION_CD			=	BUMON.SECTION_CD
						 AND	SALES.DATA_TYPE				=	CLASSIFICATION.DATA_TYPE
						 AND	SALES.CATEGORY_DIVISION		=	CLASSIFICATION.CATEGORY_DIVISION
						 AND	SALES.VENDER_CD = VENDER.VENDER_CD
						 AND	VENDER_DIVISION = c_VenderDivTS
					 	)
					)
			WHERE
					DEPOSIT_UPDATE_DIVISION		=	c_DepositUpdDiv0				-- 売掛更新フラグ(未処理)
			AND		DELIVERY_UPDATE_DATE		IS NULL								-- 売掛締め日
			AND		ROWID IN (
								SELECT
									 SALES.ROW_ID
								FROM
									 (SELECT
										 SALES.ORGANIZATION_CD
										,SALES.VENDER_CD
										,VENDER.PAYMENT_INVOICE_CD AS INVOICE_CD
										,SALES.DATA_TYPE
										,SALES.CATEGORY_DIVISION
										,SALES.ROWID AS ROW_ID
									  FROM
										 SALES SALES						--売上トラン
										,VENDER VENDER
									  WHERE
										  SALES.ORGANIZATION_CD = REC_MAIN.ORGANIZATION_CD
									  AND SALES.ACCOUNT_YEARS <= nvAccountYears
									  AND SALES.CLAIM_UPDATE_DIVISION = c_ClaimUpdDiv0		--未処理
									  AND SALES.INVOICE_UPDATE_DATE IS NULL
									  AND SALES.DELIVERY_COMP = c_DeliveryComp2				--完納
									  AND SALES.APPROVAL_STATUS = c_ApprovalSts3			--承認済
									  AND SALES.VENDER_CD = VENDER.VENDER_CD
									  AND VENDER_DIVISION = c_VenderDivTS
									 ) SALES
									,CLASSIFICATION CLASSIFICATION		--分類マスタ
								WHERE
									( (SALES.VENDER_CD = REC_MAIN.VENDER_CD AND SALES.INVOICE_CD IS NULL) OR
									  SALES.INVOICE_CD = REC_MAIN.VENDER_CD )
								AND SALES.DATA_TYPE = CLASSIFICATION.DATA_TYPE
								AND SALES.CATEGORY_DIVISION = CLASSIFICATION.CATEGORY_DIVISION
								AND CLASSIFICATION.CLAIM_DIVISION = c_ClDiv1			--請求対象
							 )
			;

			--------------------------------------------------------------------------------
			--★【請求対象外】売上トランザクション更新
			--------------------------------------------------------------------------------
			-- 売掛更新済対象(会計関連項目は売掛更新でセット済のため請求関連項目のみ更新)
			UPDATE SALES
				SET
				 	CLAIM_TARGET_DIVISION		=	c_ClaimTrgDiv9					-- 請求対象(対象外)
				,	CLAIM_UPDATE_DIVISION		=	c_ClaimUpdDiv1					-- 請求更新フラグ(更新済)
				,	INVOICE_UPDATE_DATE			=	daCreditDate					-- 請求締め日
				,	UPDATE_DATE					=	SYSDATE							-- 更新日時
				,	UPDATOR_CD					=	P_STR_INPUTOR_CD				-- 更新者ＩＤ
				,	INVOICE_CD	=	(												-- 請求先コード
										SELECT
											DECODE(PAYMENT_INVOICE_CD, NULL, VENDER_CD, PAYMENT_INVOICE_CD) AS INVOICE_CD
										FROM
											VENDER
										WHERE
											VENDER.VENDER_CD = REC_MAIN.VENDER_CD
										AND VENDER_DIVISION = c_VenderDivTS
									)
			WHERE
					DEPOSIT_UPDATE_DIVISION		=	c_DepositUpdDiv1				-- 売掛更新フラグ(更新済)
			AND		DELIVERY_UPDATE_DATE		IS NOT NULL							-- 売掛締め日
			AND		ROWID IN (
								SELECT
									 SALES.ROW_ID
								FROM
									 (SELECT
										 SALES.ORGANIZATION_CD
										,SALES.VENDER_CD
										,VENDER.PAYMENT_INVOICE_CD AS INVOICE_CD
										,SALES.DATA_TYPE
										,SALES.CATEGORY_DIVISION
										,SALES.ROWID AS ROW_ID
									  FROM
										 SALES SALES						--売上トラン
										,VENDER VENDER
									  WHERE
										  SALES.ORGANIZATION_CD = REC_MAIN.ORGANIZATION_CD
									  AND SALES.ACCOUNT_YEARS <= nvAccountYears
									  AND SALES.CLAIM_UPDATE_DIVISION = c_ClaimUpdDiv0		--未処理
									  AND SALES.INVOICE_UPDATE_DATE IS NULL
									  AND SALES.DELIVERY_COMP = c_DeliveryComp2				--完納
									  AND SALES.APPROVAL_STATUS = c_ApprovalSts3			--承認済
									  AND SALES.VENDER_CD = VENDER.VENDER_CD
									  AND VENDER_DIVISION = c_VenderDivTS
									 ) SALES
									,CLASSIFICATION CLASSIFICATION		--分類マスタ
								WHERE
									( (SALES.VENDER_CD = REC_MAIN.VENDER_CD AND SALES.INVOICE_CD IS NULL) OR
									  SALES.INVOICE_CD = REC_MAIN.VENDER_CD )
								AND SALES.DATA_TYPE = CLASSIFICATION.DATA_TYPE
								AND SALES.CATEGORY_DIVISION = CLASSIFICATION.CATEGORY_DIVISION
								AND CLASSIFICATION.CLAIM_DIVISION = c_ClDiv0			--請求対象外
							 )
			;

			-- 売掛更新未処理対象(会計関連項目と請求関連項目を更新)
			UPDATE SALES
				SET
					(
						 ACCOUNT_SECTION_CD
						,DEBIT_TITLE_CD
						,DEBIT_SUB_TITLE_CD
						,CREDIT_TITLE_CD
						,CREDIT_SUB_TITLE_CD
						,CLAIM_TARGET_DIVISION
						,CLAIM_UPDATE_DIVISION
						,INVOICE_UPDATE_DATE
						,UPDATE_DATE
						,UPDATOR_CD
						,INVOICE_CD
					)
					=
					(
					 SELECT
					 	 NVL(MAX(ACCOUNT_SECTION_CD),'') AS ACCOUNT_SECTION_CD			-- 会計部門
					 	,NVL(MAX(DEBIT_ACCOUNTS_CD),'') AS DEBIT_ACCOUNTS_CD			-- 借方科目コード
					 	,NVL(MAX(DEBIT_ACCOUNTS_SUB_CD),'') AS DEBIT_ACCOUNTS_SUB_CD	-- 借方補助科目コード
					 	,NVL(MAX(CREDIT_ACCOUNTS_CD),'') AS CREDIT_ACCOUNTS_CD			-- 貸方科目コード
					 	,NVL(MAX(CREDIT_ACCOUNTS_SUB_CD),'') AS CREDIT_ACCOUNTS_SUB_CD	-- 貸方補助科目コード
					 	,c_ClaimTrgDiv9													-- 請求対象(対象外)
					 	,c_ClaimUpdDiv1													-- 請求更新フラグ(更新済)
					 	,daCreditDate													-- 請求締め日
					 	,SYSDATE														-- 更新日時
					 	,P_STR_INPUTOR_CD												-- 更新者ＩＤ
					 	,MAX(INVOICE_CD) AS INVOICE_CD									-- 請求先コード
					 FROM
					 	(
						 SELECT
						 	 BUMON.ACCOUNT_SECTION_CD
						 	,CLASSIFICATION.DEBIT_ACCOUNTS_CD
						 	,CLASSIFICATION.DEBIT_ACCOUNTS_SUB_CD
						 	,CLASSIFICATION.CREDIT_ACCOUNTS_CD
						 	,CLASSIFICATION.CREDIT_ACCOUNTS_SUB_CD
							,DECODE(VENDER.PAYMENT_INVOICE_CD, NULL, VENDER.VENDER_CD, VENDER.PAYMENT_INVOICE_CD) AS INVOICE_CD
						 FROM
						 	 BUMON
						 	,CLASSIFICATION
						 	,VENDER
						 WHERE
						 		SALES.ORGANIZATION_CD			=	BUMON.SECTION_CD
						 AND	SALES.DATA_TYPE				=	CLASSIFICATION.DATA_TYPE
						 AND	SALES.CATEGORY_DIVISION		=	CLASSIFICATION.CATEGORY_DIVISION
						 AND	SALES.VENDER_CD			=	VENDER.VENDER_CD
						 AND	VENDER.VENDER_DIVISION		=	c_VenderDivTS
					 	)
					)
			WHERE
					DEPOSIT_UPDATE_DIVISION		=	c_DepositUpdDiv0				-- 売掛更新フラグ(未処理)
			AND		DELIVERY_UPDATE_DATE		IS NULL								-- 売掛締め日
			AND		ROWID IN (
								SELECT
									 SALES.ROW_ID
								FROM
									 (SELECT
										 SALES.ORGANIZATION_CD
										,SALES.VENDER_CD
										,VENDER.PAYMENT_INVOICE_CD AS INVOICE_CD
										,SALES.DATA_TYPE
										,SALES.CATEGORY_DIVISION
										,SALES.ROWID AS ROW_ID
									  FROM
										 SALES SALES						--売上トラン
										,VENDER VENDER
									  WHERE
										  SALES.ORGANIZATION_CD = REC_MAIN.ORGANIZATION_CD
									  AND SALES.ACCOUNT_YEARS <= nvAccountYears
									  AND SALES.CLAIM_UPDATE_DIVISION = c_ClaimUpdDiv0		--未処理
									  AND SALES.INVOICE_UPDATE_DATE IS NULL
									  AND SALES.DELIVERY_COMP = c_DeliveryComp2				--完納
									  AND SALES.APPROVAL_STATUS = c_ApprovalSts3			--承認済
									  AND SALES.VENDER_CD = VENDER.VENDER_CD
									  AND VENDER_DIVISION = c_VenderDivTS
									 ) SALES
									,CLASSIFICATION CLASSIFICATION		--分類マスタ
								WHERE
									( (SALES.VENDER_CD = REC_MAIN.VENDER_CD AND SALES.INVOICE_CD IS NULL) OR
									  SALES.INVOICE_CD = REC_MAIN.VENDER_CD )
								AND SALES.DATA_TYPE = CLASSIFICATION.DATA_TYPE
								AND SALES.CATEGORY_DIVISION = CLASSIFICATION.CATEGORY_DIVISION
								AND CLASSIFICATION.CLAIM_DIVISION = c_ClDiv0			--請求対象外
							 )
			;

			--------------------------------------------------------------------------------
			--★【請求対象】入金トランザクション更新
			--------------------------------------------------------------------------------
			-- 売掛更新済対象(会計関連項目は売掛更新でセット済のため請求関連項目のみ更新)
			UPDATE CREDIT
				SET
					CLAIM_TARGET_DIVISION		=	c_ClaimTrgDiv1					-- 請求対象(処理済)
				,	CLAIM_UPDATE_DIVISION		=	c_ClaimUpdDiv1					-- 請求更新フラグ(更新済)
				,	CLAIM_NO					=	nvClaimNo						-- 請求番号
				,	INVOICE_UPDATE_DATE			=	daCreditDate					-- 請求締め日
				,	UPDATE_DATE					=	SYSDATE							-- 更新日時
				,	UPDATOR_CD					=	P_STR_INPUTOR_CD				-- 更新者ＩＤ
			WHERE
					ORGANIZATION_CD					=	REC_MAIN.ORGANIZATION_CD
			AND		VENDER_CD					=	REC_MAIN.VENDER_CD
			AND		CREDIT_DATE				   <=	daCreditDate
			AND		DEPOSIT_UPDATE_DIVISION		=	c_DepositUpdDiv1				-- 売掛更新フラグ(更新済)
			AND		DELIVERY_UPDATE_DATE		IS NOT NULL							-- 売掛締め日
			AND		CLAIM_UPDATE_DIVISION		=	c_ClaimUpdDiv0					-- 請求更新フラグ(未処理)
			AND		INVOICE_UPDATE_DATE			IS NULL								-- 請求締め日
			AND		APPROVAL_STATUS				=	c_ApprovalSts3					-- 承認ステータス(承認済)
			AND		c_ClDiv1 = (													-- 請求対象
								SELECT
									CLAIM_DIVISION
								FROM
									CLASSIFICATION
								WHERE
									CREDIT.DATA_TYPE			=	CLASSIFICATION.DATA_TYPE
								AND CREDIT.CATEGORY_DIVISION	=	CLASSIFICATION.CATEGORY_DIVISION
							   )
			;

			-- 売掛更新未処理対象(会計関連項目と請求関連項目を更新)
			UPDATE CREDIT
				SET
					(
						 ACCOUNT_SECTION_CD
						,CLAIM_TARGET_DIVISION
						,CLAIM_UPDATE_DIVISION
						,CLAIM_NO
						,INVOICE_UPDATE_DATE
						,UPDATE_DATE
						,UPDATOR_CD
					)
					=
					(
					 SELECT
					 	 NVL(MAX(ACCOUNT_SECTION_CD),'') AS ACCOUNT_SECTION_CD		-- 会計部門
					 	,c_ClaimTrgDiv1												-- 請求対象(処理済)
					 	,c_ClaimUpdDiv1												-- 請求更新フラグ(更新済)
					 	,nvClaimNo													-- 請求番号
					 	,daCreditDate												-- 請求締め日
					 	,SYSDATE													-- 更新日時
					 	,P_STR_INPUTOR_CD											-- 更新者ＩＤ
					 FROM
					 	(
						 SELECT
						 	 BUMON.ACCOUNT_SECTION_CD
						 FROM
						 	 BUMON
						 WHERE
							 CREDIT.ORGANIZATION_CD			=	BUMON.SECTION_CD
					 	)
					)
			WHERE
					ORGANIZATION_CD					=	REC_MAIN.ORGANIZATION_CD
			AND		VENDER_CD					=	REC_MAIN.VENDER_CD
			AND		CREDIT_DATE				   <=	daCreditDate
			AND		DEPOSIT_UPDATE_DIVISION		=	c_DepositUpdDiv0				-- 売掛更新フラグ(未処理)
			AND		DELIVERY_UPDATE_DATE		IS NULL								-- 売掛締め日
			AND		CLAIM_UPDATE_DIVISION		=	c_ClaimUpdDiv0					-- 請求更新フラグ(未処理)
			AND		INVOICE_UPDATE_DATE			IS NULL								-- 請求締め日
			AND		APPROVAL_STATUS				=	c_ApprovalSts3					-- 承認ステータス(承認済)
			AND		c_ClDiv1 = (													-- 請求対象
								SELECT
									CLAIM_DIVISION
								FROM
									CLASSIFICATION
								WHERE
									CREDIT.DATA_TYPE			=	CLASSIFICATION.DATA_TYPE
								AND CREDIT.CATEGORY_DIVISION	=	CLASSIFICATION.CATEGORY_DIVISION
							   )
			;

			--------------------------------------------------------------------------------
			--★【請求対象外】入金トランザクション更新
			--------------------------------------------------------------------------------
			-- 売掛更新済対象(会計関連項目は売掛更新でセット済のため請求関連項目のみ更新)
			UPDATE CREDIT
				SET
					CLAIM_TARGET_DIVISION		=	c_ClaimTrgDiv9					-- 請求対象(対象外)
				,	CLAIM_UPDATE_DIVISION		=	c_ClaimUpdDiv1					-- 請求更新フラグ(更新済)
				,	INVOICE_UPDATE_DATE			=	daCreditDate					-- 請求締め日
				,	UPDATE_DATE					=	SYSDATE							-- 更新日時
				,	UPDATOR_CD					=	P_STR_INPUTOR_CD				-- 更新者ＩＤ
			WHERE
					ORGANIZATION_CD					=	REC_MAIN.ORGANIZATION_CD
			AND		VENDER_CD					=	REC_MAIN.VENDER_CD
			AND		CREDIT_DATE				   <=	daCreditDate
			AND		DEPOSIT_UPDATE_DIVISION		=	c_DepositUpdDiv1				-- 売掛更新フラグ(更新済)
			AND		DELIVERY_UPDATE_DATE		IS NOT NULL							-- 売掛締め日
			AND		CLAIM_UPDATE_DIVISION		=	c_ClaimUpdDiv0					-- 請求更新フラグ(未処理)
			AND		INVOICE_UPDATE_DATE			IS NULL								-- 請求締め日
			AND		APPROVAL_STATUS				=	c_ApprovalSts3					-- 承認ステータス(承認済)
			;

			-- 売掛更新未処理対象(会計関連項目と請求関連項目を更新)
			UPDATE CREDIT
				SET
					(
						 ACCOUNT_SECTION_CD
						,CLAIM_TARGET_DIVISION
						,CLAIM_UPDATE_DIVISION
						,INVOICE_UPDATE_DATE
						,UPDATE_DATE
						,UPDATOR_CD
					)
					=
					(
					 SELECT
					 	 NVL(MAX(ACCOUNT_SECTION_CD),'') AS ACCOUNT_SECTION_CD		-- 会計部門
					 	,c_ClaimTrgDiv9												-- 請求対象(対象外)
					 	,c_ClaimUpdDiv1												-- 請求更新フラグ(更新済)
					 	,daCreditDate												-- 請求締め日
					 	,SYSDATE													-- 更新日時
					 	,P_STR_INPUTOR_CD											-- 更新者ＩＤ
					 FROM
					 	(
						 SELECT
						 	 BUMON.ACCOUNT_SECTION_CD
						 FROM
						 	 BUMON
						 WHERE
							 CREDIT.ORGANIZATION_CD			=	BUMON.SECTION_CD
					 	)
					)
			WHERE
					ORGANIZATION_CD					=	REC_MAIN.ORGANIZATION_CD
			AND		VENDER_CD					=	REC_MAIN.VENDER_CD
			AND		CREDIT_DATE				   <=	daCreditDate
			AND		DEPOSIT_UPDATE_DIVISION		=	c_DepositUpdDiv0				-- 売掛更新フラグ(未処理)
			AND		DELIVERY_UPDATE_DATE		IS NULL								-- 売掛締め日
			AND		CLAIM_UPDATE_DIVISION		=	c_ClaimUpdDiv0					-- 請求更新フラグ(未処理)
			AND		INVOICE_UPDATE_DATE			IS NULL								-- 請求締め日
			AND		APPROVAL_STATUS				=	c_ApprovalSts3					-- 承認ステータス(承認済)
			;

			--------------------------------------------------------------------------------
			--★【請求対象】支払トランザクション更新
			--------------------------------------------------------------------------------
			-- 売掛更新済対象(会計関連項目は売掛更新でセット済のため請求関連項目のみ更新)
			UPDATE PAYMENT
				SET
					CLAIM_TARGET_DIVISION		=	c_ClaimTrgDiv1					-- 請求対象(処理済)
				,	CLAIM_UPDATE_DIVISION		=	c_ClaimUpdDiv1					-- 請求更新フラグ(更新済)
				,	CLAIM_NO					=	nvClaimNo						-- 請求番号
				,	INVOICE_UPDATE_DATE			=	daCreditDate					-- 請求締め日
				,	UPDATE_DATE					=	SYSDATE							-- 更新日時
				,	UPDATOR_CD					=	P_STR_INPUTOR_CD				-- 更新者ＩＤ
			WHERE
					ORGANIZATION_CD					=	REC_MAIN.ORGANIZATION_CD
			AND		SUPPLIER_CD					=	REC_MAIN.VENDER_CD
			AND		PAYMENT_DATE			   <=	daCreditDate
			AND		DEPOSIT_UPDATE_DIVISION		=	c_DepositUpdDiv1				-- 売掛更新フラグ(更新済)
			AND		DELIVERY_UPDATE_DATE		IS NOT NULL							-- 売掛締め日
			AND		CLAIM_UPDATE_DIVISION		=	c_ClaimUpdDiv0					-- 請求更新フラグ(未処理)
			AND		INVOICE_UPDATE_DATE			IS NULL								-- 請求締め日
			AND		APPROVAL_STATUS				=	c_ApprovalSts3					-- 承認ステータス(承認済)
			AND		c_ClDiv1 = (													-- 請求対象
								SELECT
									CLAIM_DIVISION
								FROM
									CLASSIFICATION
								WHERE
									PAYMENT.DATA_TYPE			=	CLASSIFICATION.DATA_TYPE
								AND PAYMENT.CATEGORY_DIVISION	=	CLASSIFICATION.CATEGORY_DIVISION
							   )
			;

			-- 売掛更新未処理対象(会計関連項目と請求関連項目を更新)
			UPDATE PAYMENT
				SET
					(
						 ACCOUNT_SECTION_CD
						,CLAIM_TARGET_DIVISION
						,CLAIM_UPDATE_DIVISION
						,CLAIM_NO
						,INVOICE_UPDATE_DATE
						,UPDATE_DATE
						,UPDATOR_CD
					)
					=
					(
					 SELECT
					 	 NVL(MAX(ACCOUNT_SECTION_CD),'') AS ACCOUNT_SECTION_CD		-- 会計部門
					 	,c_ClaimTrgDiv1												-- 請求対象(処理済)
					 	,c_ClaimUpdDiv1												-- 請求更新フラグ(更新済)
					 	,nvClaimNo													-- 請求番号
					 	,daCreditDate												-- 請求締め日
					 	,SYSDATE													-- 更新日時
					 	,P_STR_INPUTOR_CD											-- 更新者ＩＤ
					 FROM
					 	(
						 SELECT
						 	 BUMON.ACCOUNT_SECTION_CD
						 FROM
						 	 BUMON
						 WHERE
							 PAYMENT.ORGANIZATION_CD			=	BUMON.SECTION_CD
					 	)
					)
			WHERE
					ORGANIZATION_CD					=	REC_MAIN.ORGANIZATION_CD
			AND		SUPPLIER_CD					=	REC_MAIN.VENDER_CD
			AND		PAYMENT_DATE			   <=	daCreditDate
			AND		DEPOSIT_UPDATE_DIVISION		=	c_DepositUpdDiv0				-- 売掛更新フラグ(未処理)
			AND		DELIVERY_UPDATE_DATE		IS NULL								-- 売掛締め日
			AND		CLAIM_UPDATE_DIVISION		=	c_ClaimUpdDiv0					-- 請求更新フラグ(未処理)
			AND		INVOICE_UPDATE_DATE			IS NULL								-- 請求締め日
			AND		APPROVAL_STATUS				=	c_ApprovalSts3					-- 承認ステータス(承認済)
			AND		c_ClDiv1 = (													-- 請求対象
								SELECT
									CLAIM_DIVISION
								FROM
									CLASSIFICATION
								WHERE
									PAYMENT.DATA_TYPE			=	CLASSIFICATION.DATA_TYPE
								AND PAYMENT.CATEGORY_DIVISION	=	CLASSIFICATION.CATEGORY_DIVISION
							   )
			;

			--------------------------------------------------------------------------------
			--★【請求対象外】支払トランザクション更新
			--------------------------------------------------------------------------------
			-- 売掛更新済対象(会計関連項目は売掛更新でセット済のため請求関連項目のみ更新)
			UPDATE PAYMENT
				SET
					CLAIM_TARGET_DIVISION		=	c_ClaimTrgDiv9					-- 請求対象(対象外)
				,	CLAIM_UPDATE_DIVISION		=	c_ClaimUpdDiv1					-- 請求更新フラグ(更新済)
				,	INVOICE_UPDATE_DATE			=	daCreditDate					-- 請求締め日
				,	UPDATE_DATE					=	SYSDATE							-- 更新日時
				,	UPDATOR_CD					=	P_STR_INPUTOR_CD				-- 更新者ＩＤ
			WHERE
					ORGANIZATION_CD					=	REC_MAIN.ORGANIZATION_CD
			AND		SUPPLIER_CD					=	REC_MAIN.VENDER_CD
			AND		PAYMENT_DATE			   <=	daCreditDate
			AND		DEPOSIT_UPDATE_DIVISION		=	c_DepositUpdDiv1				-- 売掛更新フラグ(更新済)
			AND		DELIVERY_UPDATE_DATE		IS NOT NULL							-- 売掛締め日
			AND		CLAIM_UPDATE_DIVISION		=	c_ClaimUpdDiv0					-- 請求更新フラグ(未処理)
			AND		INVOICE_UPDATE_DATE			IS NULL								-- 請求締め日
			AND		APPROVAL_STATUS				=	c_ApprovalSts3					-- 承認ステータス(承認済)
			;

			-- 売掛更新未処理対象(会計関連項目と請求関連項目を更新)
			UPDATE PAYMENT
				SET
					(
						 ACCOUNT_SECTION_CD
						,CLAIM_TARGET_DIVISION
						,CLAIM_UPDATE_DIVISION
						,INVOICE_UPDATE_DATE
						,UPDATE_DATE
						,UPDATOR_CD
					)
					=
					(
					 SELECT
					 	 NVL(MAX(ACCOUNT_SECTION_CD),'') AS ACCOUNT_SECTION_CD		-- 会計部門
					 	,c_ClaimTrgDiv9												-- 請求対象(対象外)
					 	,c_ClaimUpdDiv1												-- 請求更新フラグ(更新済)
					 	,daCreditDate												-- 請求締め日
					 	,SYSDATE													-- 更新日時
					 	,P_STR_INPUTOR_CD											-- 更新者ＩＤ
					 FROM
					 	(
						 SELECT
						 	 BUMON.ACCOUNT_SECTION_CD
						 FROM
						 	 BUMON
						 WHERE
							 PAYMENT.ORGANIZATION_CD			=	BUMON.SECTION_CD
					 	)
					)
			WHERE
					ORGANIZATION_CD					=	REC_MAIN.ORGANIZATION_CD
			AND		SUPPLIER_CD					=	REC_MAIN.VENDER_CD
			AND		PAYMENT_DATE			   <=	daCreditDate
			AND		DEPOSIT_UPDATE_DIVISION		=	c_DepositUpdDiv0				-- 売掛更新フラグ(未処理)
			AND		DELIVERY_UPDATE_DATE		IS NULL								-- 売掛締め日
			AND		CLAIM_UPDATE_DIVISION		=	c_ClaimUpdDiv0					-- 請求更新フラグ(未処理)
			AND		INVOICE_UPDATE_DATE			IS NULL								-- 請求締め日
			AND		APPROVAL_STATUS				=	c_ApprovalSts3					-- 承認ステータス(承認済)
			;

			--------------------------------------------------------------------------------
			--★【請求対象】グループ間相殺トランザクション更新
			--------------------------------------------------------------------------------
			-- 売掛更新済対象(会計関連項目は売掛更新でセット済のため請求関連項目のみ更新)
			UPDATE OFFSET_GROUP_DATA
				SET
					CLAIM_TARGET_DIVISION		=	c_ClaimTrgDiv1					-- 請求対象(処理済)
				,	CLAIM_UPDATE_DIVISION		=	c_ClaimUpdDiv1					-- 請求更新フラグ(更新済)
				,	CLAIM_NO					=	nvClaimNo						-- 請求番号
				,	INVOICE_UPDATE_DATE			=	daCreditDate					-- 請求締め日
				,	UPDATE_DATE					=	SYSDATE							-- 更新日時
				,	UPDATOR_CD					=	P_STR_INPUTOR_CD				-- 更新者ＩＤ
			WHERE
					ORGANIZATION_CD					=	REC_MAIN.ORGANIZATION_CD
			AND		VENDER_CD					=	REC_MAIN.VENDER_CD
			AND		OFFSET_DATE				   <=	daCreditDate
			AND		DEPOSIT_UPDATE_DIVISION		=	c_DepositUpdDiv1				-- 売掛更新フラグ(更新済)
			AND		DELIVERY_UPDATE_DATE		IS NOT NULL							-- 売掛締め日
			AND		CLAIM_UPDATE_DIVISION		=	c_ClaimUpdDiv0					-- 請求更新フラグ(未処理)
			AND		INVOICE_UPDATE_DATE			IS NULL								-- 請求締め日
			AND		DEPOSIT_OFFSET_AMOUNT		IS NOT NULL
			AND		APPROVAL_STATUS				=	c_ApprovalSts3					-- 承認ステータス(承認済)
			AND		VENDER_DIVISION				=	c_VenderDivTS					-- 得意先
			AND		c_ClDiv1 = (													-- 請求対象
								SELECT
									CLAIM_DIVISION
								FROM
									CLASSIFICATION
								WHERE
									OFFSET_GROUP_DATA.DATA_TYPE				=	CLASSIFICATION.DATA_TYPE
								AND OFFSET_GROUP_DATA.CATEGORY_DIVISION		=	CLASSIFICATION.CATEGORY_DIVISION
							   )
			;

			-- 売掛更新未処理対象(会計関連項目と請求関連項目を更新)
			UPDATE OFFSET_GROUP_DATA
				SET
					(
						 ACCOUNT_SECTION_CD
						,DEBIT_TITLE_CD
						,DEBIT_SUB_TITLE_CD
						,CREDIT_TITLE_CD
						,CREDIT_SUB_TITLE_CD
						,CLAIM_TARGET_DIVISION
						,CLAIM_UPDATE_DIVISION
						,CLAIM_NO
						,INVOICE_UPDATE_DATE
						,UPDATE_DATE
						,UPDATOR_CD
					)
					=
					(
					 SELECT
					 	 NVL(MAX(ACCOUNT_SECTION_CD),'') AS ACCOUNT_SECTION_CD			-- 会計部門
					 	,NVL(MAX(DEBIT_ACCOUNTS_CD),'') AS DEBIT_ACCOUNTS_CD			-- 借方科目コード
					 	,NVL(MAX(DEBIT_ACCOUNTS_SUB_CD),'') AS DEBIT_ACCOUNTS_SUB_CD	-- 借方補助科目コード
					 	,NVL(MAX(CREDIT_ACCOUNTS_CD),'') AS CREDIT_ACCOUNTS_CD			-- 貸方科目コード
					 	,NVL(MAX(CREDIT_ACCOUNTS_SUB_CD),'') AS CREDIT_ACCOUNTS_SUB_CD	-- 貸方補助科目コード
					 	,c_ClaimTrgDiv1													-- 請求対象(処理済)
					 	,c_ClaimUpdDiv1													-- 請求更新フラグ(更新済)
					 	,nvClaimNo														-- 請求番号
					 	,daCreditDate													-- 請求締め日
					 	,SYSDATE														-- 更新日時
					 	,P_STR_INPUTOR_CD												-- 更新者ＩＤ
					 FROM
					 	(
						 SELECT
						 	 BUMON.ACCOUNT_SECTION_CD
						 	,CLASSIFICATION.DEBIT_ACCOUNTS_CD
						 	,CLASSIFICATION.DEBIT_ACCOUNTS_SUB_CD
						 	,CLASSIFICATION.CREDIT_ACCOUNTS_CD
						 	,CLASSIFICATION.CREDIT_ACCOUNTS_SUB_CD
						 FROM
						 	 BUMON
						 	,CLASSIFICATION
						 WHERE
						 		OFFSET_GROUP_DATA.ORGANIZATION_CD			=	BUMON.SECTION_CD
						 AND	OFFSET_GROUP_DATA.DATA_TYPE				=	CLASSIFICATION.DATA_TYPE
						 AND	OFFSET_GROUP_DATA.CATEGORY_DIVISION		=	CLASSIFICATION.CATEGORY_DIVISION
					 	)
					)
			WHERE
					ORGANIZATION_CD					=	REC_MAIN.ORGANIZATION_CD
			AND		VENDER_CD					=	REC_MAIN.VENDER_CD
			AND		OFFSET_DATE				   <=	daCreditDate
			AND		DEPOSIT_UPDATE_DIVISION		=	c_DepositUpdDiv0				-- 売掛更新フラグ(未処理)
			AND		DELIVERY_UPDATE_DATE		IS NULL								-- 売掛締め日
			AND		CLAIM_UPDATE_DIVISION		=	c_ClaimUpdDiv0					-- 請求更新フラグ(未処理)
			AND		INVOICE_UPDATE_DATE			IS NULL								-- 請求締め日
			AND		DEPOSIT_OFFSET_AMOUNT		IS NOT NULL
			AND		APPROVAL_STATUS				=	c_ApprovalSts3					-- 承認ステータス(承認済)
			AND		VENDER_DIVISION				=	c_VenderDivTS					-- 得意先
			AND		c_ClDiv1 = (													-- 請求対象
								SELECT
									CLAIM_DIVISION
								FROM
									CLASSIFICATION
								WHERE
									OFFSET_GROUP_DATA.DATA_TYPE				=	CLASSIFICATION.DATA_TYPE
								AND OFFSET_GROUP_DATA.CATEGORY_DIVISION		=	CLASSIFICATION.CATEGORY_DIVISION
							   )
			;

			--------------------------------------------------------------------------------
			--★【請求対象外】グループ間相殺トランザクション更新
			--------------------------------------------------------------------------------
			-- 売掛更新済対象(会計関連項目は売掛更新でセット済のため請求関連項目のみ更新)
			UPDATE OFFSET_GROUP_DATA
				SET
					CLAIM_TARGET_DIVISION		=	c_ClaimTrgDiv9					-- 請求対象(対象外)
				,	CLAIM_UPDATE_DIVISION		=	c_ClaimUpdDiv1					-- 請求更新フラグ(更新済)
				,	INVOICE_UPDATE_DATE			=	daCreditDate					-- 請求締め日
				,	UPDATE_DATE					=	SYSDATE							-- 更新日時
				,	UPDATOR_CD					=	P_STR_INPUTOR_CD				-- 更新者ＩＤ
			WHERE
					ORGANIZATION_CD					=	REC_MAIN.ORGANIZATION_CD
			AND		VENDER_CD					=	REC_MAIN.VENDER_CD
			AND		OFFSET_DATE				   <=	daCreditDate
			AND		DEPOSIT_UPDATE_DIVISION		=	c_DepositUpdDiv1				-- 売掛更新フラグ(更新済)
			AND		DELIVERY_UPDATE_DATE		IS NOT NULL							-- 売掛締め日
			AND		CLAIM_UPDATE_DIVISION		=	c_ClaimUpdDiv0					-- 請求更新フラグ(未処理)
			AND		INVOICE_UPDATE_DATE			IS NULL								-- 請求締め日
			AND		VENDER_DIVISION				=	c_VenderDivTS					-- 得意先
			AND		VENDER_DIVISION				=	c_VenderDivTS					-- 得意先
			;

			-- 売掛更新未処理対象(会計関連項目と請求関連項目を更新)
			UPDATE OFFSET_GROUP_DATA
				SET
					(
						 ACCOUNT_SECTION_CD
						,DEBIT_TITLE_CD
						,DEBIT_SUB_TITLE_CD
						,CREDIT_TITLE_CD
						,CREDIT_SUB_TITLE_CD
						,CLAIM_TARGET_DIVISION
						,CLAIM_UPDATE_DIVISION
						,INVOICE_UPDATE_DATE
						,UPDATE_DATE
						,UPDATOR_CD
					)
					=
					(
					 SELECT
					 	 NVL(MAX(ACCOUNT_SECTION_CD),'') AS ACCOUNT_SECTION_CD			-- 会計部門
					 	,NVL(MAX(DEBIT_ACCOUNTS_CD),'') AS DEBIT_ACCOUNTS_CD			-- 借方科目コード
					 	,NVL(MAX(DEBIT_ACCOUNTS_SUB_CD),'') AS DEBIT_ACCOUNTS_SUB_CD	-- 借方補助科目コード
					 	,NVL(MAX(CREDIT_ACCOUNTS_CD),'') AS CREDIT_ACCOUNTS_CD			-- 貸方科目コード
					 	,NVL(MAX(CREDIT_ACCOUNTS_SUB_CD),'') AS CREDIT_ACCOUNTS_SUB_CD	-- 貸方補助科目コード
					 	,c_ClaimTrgDiv9													-- 請求対象(対象外)
					 	,c_ClaimUpdDiv1													-- 請求更新フラグ(更新済)
					 	,daCreditDate													-- 請求締め日
					 	,SYSDATE														-- 更新日時
					 	,P_STR_INPUTOR_CD												-- 更新者ＩＤ
					 FROM
					 	(
						 SELECT
						 	 BUMON.ACCOUNT_SECTION_CD
						 	,CLASSIFICATION.DEBIT_ACCOUNTS_CD
						 	,CLASSIFICATION.DEBIT_ACCOUNTS_SUB_CD
						 	,CLASSIFICATION.CREDIT_ACCOUNTS_CD
						 	,CLASSIFICATION.CREDIT_ACCOUNTS_SUB_CD
						 FROM
						 	 BUMON
						 	,CLASSIFICATION
						 WHERE
						 		OFFSET_GROUP_DATA.ORGANIZATION_CD			=	BUMON.SECTION_CD
						 AND	OFFSET_GROUP_DATA.DATA_TYPE				=	CLASSIFICATION.DATA_TYPE
						 AND	OFFSET_GROUP_DATA.CATEGORY_DIVISION		=	CLASSIFICATION.CATEGORY_DIVISION
					 	)
					)
			WHERE
					ORGANIZATION_CD					=	REC_MAIN.ORGANIZATION_CD
			AND		VENDER_CD					=	REC_MAIN.VENDER_CD
			AND		OFFSET_DATE				   <=	daCreditDate
			AND		DEPOSIT_UPDATE_DIVISION		=	c_DepositUpdDiv0				-- 売掛更新フラグ(未処理)
			AND		DELIVERY_UPDATE_DATE		IS NULL								-- 売掛締め日
			AND		CLAIM_UPDATE_DIVISION		=	c_ClaimUpdDiv0					-- 請求更新フラグ(未処理)
			AND		INVOICE_UPDATE_DATE			IS NULL								-- 請求締め日
			AND		APPROVAL_STATUS				=	c_ApprovalSts3					-- 承認ステータス(承認済)
			AND		VENDER_DIVISION				=	c_VenderDivTS					-- 得意先
			;

			-- カウント
			nCount := nCount + 1;

		END LOOP;

		--対象データなしの場合
		IF nCount = 0 THEN
			--ロールバック
			ROLLBACK;
			--戻り値設定
			P_NUM_RET := 9;

			RETURN;
		END IF;

	END IF;

	--------------------------------------------------------------------------------
	--戻り値設定
	--------------------------------------------------------------------------------
	P_NUM_RET := 0;

EXCEPTION
	--------------------------------------------------------------------------------
	--例外処理
	--------------------------------------------------------------------------------
	WHEN OTHERS THEN
		--ロールバック
		ROLLBACK;

		--戻り値設定
		P_NUM_RET := 99;

END PRO_CLAIM_UPDATE;
/
