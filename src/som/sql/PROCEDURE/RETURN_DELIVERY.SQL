CREATE OR REPLACE PROCEDURE RETURN_DELIVERY(LNG_FLG IN NUMBER,SLIP_NO IN NVARCHAR2,STR_LOGIN_USER IN NVARCHAR2,OUT_PARA OUT NVARCHAR2 ) IS
		--検索
		cursor curHead(strNo varchar2) is
		select * from SALES where SALES_NO = strNo;
		rtHead curHead%rowtype;
		OpNo number;
		InOutKbn number;
		FaultQty number;
		ChkFlg number;
		CalcCostFlg number;
		Qty number;
		InOutDivision number;
		FuncDivision number;
		PARA VARCHAR2(255);
		InOutSourceDellFlg number;
		InOutDate date;
		Location VARCHAR2(20);
		addOpno number;
	BEGIN 
		IF SLIP_NO is NULL or SLIP_NO = '' THEN 
			OUT_PARA := '売上番号なし。';
			GOTO P_END;
		END IF;
		IF STR_LOGIN_USER is NULL or STR_LOGIN_USER = '' THEN 
			OUT_PARA := 'ログインユーザーなし。';
			GOTO P_END;
		END IF;
		OPEN curHead(SLIP_NO);
		FETCH curHead INTO rtHead;
		IF curHead%NOTFOUND = TRUE THEN
			CLOSE curHead;
			OUT_PARA := '該当データがありません。';
			GOTO P_END;
		END IF;
		CLOSE curHead;
		-- 固定値
		FaultQty := 0; -- 不良数量
		CASE
			WHEN LNG_FLG = 1 THEN
				-- 返品時
				OpNo := 16;
				InOutKbn := 0; -- 0:入庫
				ChkFlg := 1;  -- 1:在庫管理区分チェックをする
				CalcCostFlg := 1; --  1:在庫評価単価を再計算しない
				Qty :=  rtHead.SALES_QUANTITY; -- 数量
				InOutDate := rtHead.SALES_DATE; -- 入庫予定
				InOutDivision := 4; 
				InOutSourceDellFlg := 0; 
				FuncDivision := 52; 
			WHEN LNG_FLG = 2 THEN
				-- 返品取消時
				OpNo := 16;
				InOutKbn := 0; -- 0:入庫
				ChkFlg := 1;  -- 1:在庫管理区分チェックをする
				CalcCostFlg := 1; --  1:在庫評価単価を再計算しない
				Qty :=  -NVL(rtHead.SALES_QUANTITY,0); -- 数量
				InOutDate := rtHead.SALES_DATE; -- 入庫予定
				InOutDivision := 4; 
				InOutSourceDellFlg := 0; 
				FuncDivision := 92; 
			ELSE
				OUT_PARA := '処理選択が不正です。';
				GOTO P_END;
		END CASE;			
		--更新引数セット1-10
		PAK_ALLZAITABLE.LNG_OPNO :=OpNo;
		PAK_ALLZAITABLE.LNG_INOUTKBN := InOutKbn;
		PAK_ALLZAITABLE.STR_ITEMCODE := rtHead.ITEM_CD;
		PAK_ALLZAITABLE.LNG_QTY := Qty;
		PAK_ALLZAITABLE.LNG_FAULTQTY := FaultQty;
		PAK_ALLZAITABLE.DTE_INOUTDATE := InOutDate;
		PAK_ALLZAITABLE.STR_LOCATIONCODE := rtHead.HOUSING_LOCATION_CD;
		PAK_ALLZAITABLE.LNG_COST := rtHead.SALES_UNITPRICE;
		PAK_ALLZAITABLE.DTE_UKEDATE := InOutDate;
		PAK_ALLZAITABLE.LNG_COSTFLG := rtHead.TMP_UNITPRICE_FLG;
		--11-20
		PAK_ALLZAITABLE.LNG_CHKFLG := ChkFlg;
		PAK_ALLZAITABLE.LNG_CALCCOSTFLG := CalcCostFlg;
		PAK_ALLZAITABLE.LNG_INVENTORYQTY := null;
		PAK_ALLZAITABLE.LNG_INVENTORYCOST := null;
		PAK_ALLZAITABLE.STR_LOTCODE := rtHead.PACKAGE_DIRECTION_NO;
		PAK_ALLZAITABLE.DTE_START_DATE := null;
		PAK_ALLZAITABLE.DTE_ISSUE_DATE := null;
		PAK_ALLZAITABLE.DTE_END_DATE := null;
		PAK_ALLZAITABLE.LNG_INOUTDIVISION := InOutDivision;
		PAK_ALLZAITABLE.STR_ODERNO := rtHead.SALES_NO;
		--21-30
		PAK_ALLZAITABLE.LNG_ODERLINENO := 1;
		PAK_ALLZAITABLE.LNG_INOUTPRICE := rtHead.SALES_UNITPRICE;
		PAK_ALLZAITABLE.LNG_INOUTCOST := rtHead.SALES_AMOUNT;
		PAK_ALLZAITABLE.STR_REMARK := rtHead.REMARK;
		PAK_ALLZAITABLE.LNG_INOUTSOURCEDELFLG := InOutSourceDellFlg;
		PAK_ALLZAITABLE.STR_INOUTSOURCENO := null;
		PAK_ALLZAITABLE.STR_SECTIONCD := rtHead.ORGANIZATION_CD;
		PAK_ALLZAITABLE.STR_ACCOUNTCD := rtHead.DEBIT_TITLE_CD;
		PAK_ALLZAITABLE.STR_SUBACCOUNTCD := rtHead.DEBIT_SUB_TITLE_CD;
		PAK_ALLZAITABLE.STR_ITEMCATEGORY := null;
		--31-40
		PAK_ALLZAITABLE.STR_PARENTITEMCD := null;
		PAK_ALLZAITABLE.STR_PARENTACCOUNTCD := null;
		PAK_ALLZAITABLE.STR_PARENTSUBACCOUNTCD := null;
		PAK_ALLZAITABLE.STR_PARENTITEMCATEGORY := null;
		PAK_ALLZAITABLE.STR_REASON := rtHead.RY_CD;
		--	PAK_ALLZAITABLE.DTE_INOUTUPDATEDATE := P_DTE_INOUTUPDATEDATE;
		--	PAK_ALLZAITABLE.DTE_INVENTORYUPDATEDATE := P_DTE_INVENTORYUPDATEDATE;
		PAK_ALLZAITABLE.LNG_LOTTRACEDELFLG := 0;
		PAK_ALLZAITABLE.LNG_FUNCDIVISION := FuncDivision;
		PAK_ALLZAITABLE.STR_SLIPNO := rtHead.SALES_SLIP_NO;
		--41-46
		PAK_ALLZAITABLE.LNG_SLIPLINENO := rtHead.SALES_SLIP_ROW_NO;
		PAK_ALLZAITABLE.LNG_ORDERDIVISION := rtHead.CATEGORY_DIVISION;
		PAK_ALLZAITABLE.STR_ORDERNO := rtHead.ORDER_NO || rtHead.ORDER_ROW_NO;
		PAK_ALLZAITABLE.LNG_LASTINDIVISION := null;
		PAK_ALLZAITABLE.STR_LASTINNO := null;
		PAK_ALLZAITABLE.STR_INPUTNO := STR_LOGIN_USER;
		PAK_ALLZAITABLE.STR_HANPA_ITEMCODE := null;
		PAK_ALLZAITABLE.LNG_HANPAQTY := null;
		PAK_ALLZAITABLE.STR_ALIAS_LOT := rtHead.PRODUCT_LOTNO;
		OUT_PARA := '';
		PAK_ALLZAITABLE.DTE_LOTMAKEDATE := null;
		PAK_ALLZAITABLE.STR_RYCD := rtHead.RY_CD;

		--パッケージ実行
		PAK_ALLZAITABLE.UPDATE_ZAI(PARA);
		--戻り値セット
		OUT_PARA := PARA;
 <<P_END>>
			null;
	EXCEPTION
		when others then
			IF curHead%ISOPEN THEN
				CLOSE curHead;
			END IF;
			dbms_output.put_line('RETURN_DELIVERY ' || sqlcode || sqlerrm);
		OUT_PARA := 'RETURN_DELIVERY ' || sqlcode || sqlerrm;
    END;
/
