CREATE OR REPLACE PROCEDURE AP21.SET_ITEM IS
	CURSOR curItem IS
	/*  SELECT A.*
        FROM ITEM_QUEUE A, PRODUCT_ATTRIBUTE_QUEUE APRODUCT, ARTICLE_ATTRIBUTE_QUEUE AARTICLE, PURCHASE_ATTRIBUTE_QUEUE APURCHASE
        WHERE A.STATUS = 3
        AND LEAST(DECODE(NVL(A.PRODUCT_DIVISION, 0), 0, 3, APRODUCT.STATUS), DECODE(NVL(A.ARTICLE_DIVISION, 0), 0, 3, AARTICLE.STATUS), DECODE(NVL(A.PURCHASE_DIVISION, 0), 0, 3, APURCHASE.STATUS)) = 3
        AND A.ACTIVE_DATE = 
        (SELECT MAX(B.ACTIVE_DATE)
        FROM ITEM_QUEUE B, PRODUCT_ATTRIBUTE_QUEUE BPRODUCT, ARTICLE_ATTRIBUTE_QUEUE BARTICLE, PURCHASE_ATTRIBUTE_QUEUE BPURCHASE
        WHERE B.STATUS = 3
        AND LEAST(DECODE(NVL(B.PRODUCT_DIVISION, 0), 0, 3, BPRODUCT.STATUS), DECODE(NVL(B.ARTICLE_DIVISION, 0), 0, 3, BARTICLE.STATUS), DECODE(NVL(B.PURCHASE_DIVISION, 0), 0, 3, BPURCHASE.STATUS)) = 3
        AND B.ACTIVE_DATE <= TO_CHAR(SYSDATE, 'YYYY/MM/DD')
        AND B.ITEM_CD = A.ITEM_CD
        AND B.ITEM_CD = BARTICLE.ITEM_CD(+)
        AND B.VERSION = BARTICLE.VERSION(+)
        AND B.ITEM_CD = BPRODUCT.ITEM_CD(+)
        AND B.VERSION = BPRODUCT.VERSION(+)
        AND B.ITEM_CD = BPURCHASE.ITEM_CD(+)
        AND B.VERSION = BPURCHASE.VERSION(+))
        AND A.ITEM_CD = AARTICLE.ITEM_CD(+)
        AND A.VERSION = AARTICLE.VERSION(+)
        AND A.ITEM_CD = APRODUCT.ITEM_CD(+)
        AND A.VERSION = APRODUCT.VERSION(+)
        AND A.ITEM_CD = APURCHASE.ITEM_CD(+)
        AND A.VERSION = APURCHASE.VERSION(+)
        ;*/
		SELECT A.*
		FROM   ITEM_QUEUE               A
			  ,PRODUCT_ATTRIBUTE_QUEUE  APRODUCT
			  ,ARTICLE_ATTRIBUTE_QUEUE  AARTICLE
			  ,PURCHASE_ATTRIBUTE_QUEUE APURCHASE
		WHERE  A.STATUS = 3
		AND    LEAST(DECODE(NVL(A.PRODUCT_DIVISION, 0), 0, 3, APRODUCT.STATUS)
					,DECODE(NVL(A.ARTICLE_DIVISION, 0), 0, 3, AARTICLE.STATUS)
					,DECODE(NVL(A.PURCHASE_DIVISION, 0), 0, 3, APURCHASE.STATUS)) = 3
			  
		AND    A.VERSION = (SELECT MAX(C.VERSION)
							FROM   ITEM_QUEUE               C
								  ,PRODUCT_ATTRIBUTE_QUEUE  CPRODUCT
								  ,ARTICLE_ATTRIBUTE_QUEUE  CARTICLE
								  ,PURCHASE_ATTRIBUTE_QUEUE CPURCHASE
							WHERE  C.STATUS = 3
							AND    LEAST(DECODE(NVL(C.PRODUCT_DIVISION, 0), 0, 3, CPRODUCT.STATUS)
										,DECODE(NVL(C.ARTICLE_DIVISION, 0), 0, 3, CARTICLE.STATUS)
										,DECODE(NVL(C.PURCHASE_DIVISION, 0), 0, 3, CPURCHASE.STATUS)) = 3
								  
							AND    C.ACTIVE_DATE = (SELECT MAX(B.ACTIVE_DATE)
													FROM   ITEM_QUEUE               B
														  ,PRODUCT_ATTRIBUTE_QUEUE  BPRODUCT
														  ,ARTICLE_ATTRIBUTE_QUEUE  BARTICLE
														  ,PURCHASE_ATTRIBUTE_QUEUE BPURCHASE
													WHERE  B.STATUS = 3
													AND    LEAST(DECODE(NVL(B.PRODUCT_DIVISION, 0), 0, 3, BPRODUCT.STATUS)
																,DECODE(NVL(B.ARTICLE_DIVISION, 0), 0, 3, BARTICLE.STATUS)
																,DECODE(NVL(B.PURCHASE_DIVISION, 0), 0, 3, BPURCHASE.STATUS)) = 3
													AND    B.ACTIVE_DATE <= TO_CHAR(SYSDATE, 'YYYY/MM/DD')
													AND    B.ITEM_CD = C.ITEM_CD
													AND    B.ITEM_CD = BARTICLE.ITEM_CD(+)
													AND    B.VERSION = BARTICLE.VERSION(+)
													AND    B.ITEM_CD = BPRODUCT.ITEM_CD(+)
													AND    B.VERSION = BPRODUCT.VERSION(+)
													AND    B.ITEM_CD = BPURCHASE.ITEM_CD(+)
													AND    B.VERSION = BPURCHASE.VERSION(+))
								  
							AND    C.ITEM_CD = A.ITEM_CD
							AND    C.ITEM_CD = CARTICLE.ITEM_CD(+)
							AND    C.VERSION = CARTICLE.VERSION(+)
							AND    C.ITEM_CD = CPRODUCT.ITEM_CD(+)
							AND    C.VERSION = CPRODUCT.VERSION(+)
							AND    C.ITEM_CD = CPURCHASE.ITEM_CD(+)
							AND    C.VERSION = CPURCHASE.VERSION(+))
			  
		AND    A.ITEM_CD = AARTICLE.ITEM_CD(+)
		AND    A.VERSION = AARTICLE.VERSION(+)
		AND    A.ITEM_CD = APRODUCT.ITEM_CD(+)
		AND    A.VERSION = APRODUCT.VERSION(+)
		AND    A.ITEM_CD = APURCHASE.ITEM_CD(+)
		AND    A.VERSION = APURCHASE.VERSION(+)
		ORDER  BY A.ITEM_CD
				 ,A.VERSION;
	rtItem      curItem%ROWTYPE;
	ITEMCODE    NVARCHAR2(20);
	VER         NUMBER;
	CNT         NUMBER;
	UPDATE_FROM DATE;
	UPDATE_TO   DATE;
BEGIN
	OPEN curItem;
	LOOP
		FETCH curItem
			INTO rtItem;
		IF curItem%NOTFOUND = TRUE THEN
			EXIT;
		END IF;
		ITEMCODE    := rtItem.ITEM_CD;
		VER         := rtItem.VERSION;
		UPDATE_FROM := rtItem.UPDATE_DATE;
		SELECT COUNT(*) INTO CNT FROM ITEM WHERE ITEM_CD = ITEMCODE;
		IF CNT = 0 THEN
			INSERT INTO ITEM
				(SELECT ITEM_QUEUE.*
					   ,0
				 FROM   ITEM_QUEUE
				 WHERE  ITEM_CD = ITEMCODE
				 AND    VERSION = VER);
			OUTPUT_ITEM_LOG('SET_ITEM', 'aec', NULL, '品目コード（' || ITEMCODE || '）を追加しました。');
		ELSE
			SELECT UPDATE_DATE INTO UPDATE_TO FROM ITEM WHERE ITEM_CD = ITEMCODE;
		
			IF UPDATE_FROM <> UPDATE_TO THEN
				DELETE FROM ITEM WHERE ITEM_CD = ITEMCODE;
				INSERT INTO ITEM
					(SELECT ITEM_QUEUE.*
						   ,0
					 FROM   ITEM_QUEUE
					 WHERE  ITEM_CD = ITEMCODE
					 AND    VERSION = VER);
				OUTPUT_ITEM_LOG('SET_ITEM', 'aec', NULL, '品目コード（' || ITEMCODE || '）を更新しました。');
			END IF;
		END IF;
	END LOOP;
	CLOSE curItem;
	COMMIT;
EXCEPTION
	WHEN OTHERS THEN
		ROLLBACK;
		OUTPUT_ITEM_LOG('SET_ITEM', 'aec', SQLCODE, SUBSTR(SQLERRM, 1, 1024));
END SET_ITEM;
/
