CREATE OR REPLACE FUNCTION      FUN_IF_PRODUCTION_RESULT_SUB
      (
             I_DIRECTION_NO		IN	NVARCHAR2,	-- 製造指図番号
             IO_RETURN_CD		IN OUT	NVARCHAR2,	-- エラーコードを返す
             IO_RETURN_MSG		IN OUT	NVARCHAR2	-- エラーメッセージを返す
      )
RETURN NUMBER IS
/*-----------------------------------------------------------------------------------------------------*/
/*      種別          :      PROCEDURE                                                                 */
/*      名称          :      IF_PRODUCTION_RESULT                                                      */
/*      処理内容      :      製造完了時計装IFの製造実績データを取得する       			       */
/*      引数          :      なし                                                                      */
/*      VERNO.        :      1.00                                                                      */
/*(history)                                                                                            */
/*      date            ver         name                    comments                                   */
/*      ----------      ------      ------------------      -------------------------------------------*/
/*      2009.04.06      1.00        Ohga                    新規作成                                   */
/*-----------------------------------------------------------------------------------------------------*/
	ERR_CODE 		VARCHAR2(100);
	ERR_MSG 		VARCHAR2(2048);
	TEMP_CHAR		VARCHAR2(100);
	TEMP_STEP_NO		NUMBER; 	-- ｽﾃｯﾌﾟ番号を保持
	TEMP_BEFOR_STEP_NO	NUMBER; 	-- 前のｽﾃｯﾌﾟ番号を保持
	TEMP_BASE_ITEM_CD	VARCHAR2(100); 	-- 製造指図フォーミュラ基準品目コード
	TEMP_ADDITION_ITEM_CD	VARCHAR2(100); 	-- 製造指図フォーミュラ追加品目コード
	TEMP_INVENTORY_QTY	NUMBER;		-- ロット在庫総数
	TEMP_COUNT		NUMBER; 	-- カウンタ
	TEMP_RESULT_USE_VALUE	NUMBER; 	-- 使用量
	TEMP_SUM_USE_VALUE	NUMBER; 	-- ロットごとの使用量を順に累積
	TEMP_USE_VALUE		NUMBER; 	-- ロットごとの使用量
	TEMP_OPERATION_CD	NUMBER; 	-- 工程コード
	TEMP_RESULT_VALUE	NUMBER; 	-- 製造指図ヘッダ実績値
	TEMP_ITEM_RATE		NUMBER;		-- 処理ｽﾃｯﾌﾟの品目マスタ在庫管理単位の係数
	TEMP_ITEM_CD		VARCHAR2(100);	-- 品目コード
	TEMP_DEFAULT_LOCATION	VARCHAR2(100);	-- 基準保管場所
	TEMP_RESULT_QTY		NUMBER;		-- 実績数量
	TEMP_LOCATION_CD	VARCHAR2(100);	-- ロケーションコード
	TEMP_NEXT_LINE_NO	NUMBER; 	-- ｽﾃｯﾌﾟ番号を保持
	TEMP_SEQ_COUNT		NUMBER; 	-- SEQ連番保持
	TEMP_ALIAS_LOT_NO	VARCHAR2(100); 	-- 原料ロット番号
	
	TEMP_PROCEDURE_START	DIRECTION_PROCEDURE%ROWTYPE;	-- プロシージャの開始時刻取得用
	TEMP_PROCEDURE_END	DIRECTION_PROCEDURE%ROWTYPE;	-- プロシージャの終了時刻取得用

	TEMP_FORMULA		DIRECTION_FORMULA%ROWTYPE;	-- フォーミュラデータ保持用
	TEMP_FORMULA_SIAGE	DIRECTION_FORMULA%ROWTYPE;	-- 仕上げのフォーミュラデータ保持用
	CONST_LINE_TYPE_CHUKAN	VARCHAR2(1) := '2';		-- 製造指図フォーミュラ.品目タイプ[2:中間品]	
	CONST_LINE_TYPE_GENZAI	VARCHAR2(2) := '-1';		-- 製造指図フォーミュラ.品目タイプ[-1:原材料]	

	-- 製造指図番号でIF製造実績ヘッダを検索
    	CURSOR IF_HEAD IS SELECT * FROM JISSEKI_SEIZO_HEAD WHERE TRIM(JISSEKI_SEIZO_HEAD.SEIZOSASHIZUNO) = I_DIRECTION_NO;
	
	-- 製造指図番号でIF製造実績詳細を検索
    	CURSOR IF_DETAIL IS SELECT JISSEKI_SEIZO_DETAIL.*,SUBSTR(SUBSTEP,1,1) PROC_NO FROM JISSEKI_SEIZO_DETAIL WHERE TRIM(JISSEKI_SEIZO_DETAIL.SEIZOSASHIZUNO) = I_DIRECTION_NO ORDER BY STEP,PROC_NO,SUBSTEP ASC;
	
BEGIN

	TEMP_BEFOR_STEP_NO := 0;	-- 以前のオペレーションコードを保持する変数を初期化
	TEMP_SEQ_COUNT := 1;		-- カウンタを初期化
	
	-- 配合の結果を全て0で初期化する
	UPDATE DIRECTION_FORMULA SET RESULT_QTY = 0,UPDATE_DATE = SYSDATE ,UPDATOR_CD = 'AUTO' WHERE DIRECTION_DIVISION =  1 AND DIRECTION_NO = I_DIRECTION_NO;
				

	-- 製造実績詳細処理
   	FOR PROC_IF_DETAIL IN IF_DETAIL LOOP

		-- 製造指図プロシージャ更新処理
		
		DBMS_OUTPUT.PUT_LINE('製造指図NO:' || PROC_IF_DETAIL.SEIZOSASHIZUNO || ' 工程番号:' || PROC_IF_DETAIL.SHORICODE);
		
		-- AP製造指図プロシージャにIF.製造実績詳細のデータがあるか確認
		SELECT COUNT(*) INTO TEMP_COUNT FROM DIRECTION_PROCEDURE WHERE DIRECTION_PROCEDURE.DIRECTION_NO = I_DIRECTION_NO AND DIRECTION_PROCEDURE.DIRECTION_DIVISION = 1 AND DIRECTION_PROCEDURE.SEQ = PROC_IF_DETAIL.STEP;
		IF TEMP_COUNT IS NULL OR TEMP_COUNT = 0 THEN -- 
			IO_RETURN_MSG :='製造指図NO:' || I_DIRECTION_NO || ' SEQ:' || PROC_IF_DETAIL.STEP || 'がIF.製造実績詳細にあり、AP.製造指図プロシージャにありません';
			RETURN -1;
		END IF;

		-- 工程コードを取得
		SELECT STEP_NO,OPERATION_CD INTO TEMP_STEP_NO,TEMP_OPERATION_CD FROM DIRECTION_PROCEDURE WHERE DIRECTION_PROCEDURE.DIRECTION_NO = I_DIRECTION_NO AND DIRECTION_PROCEDURE.DIRECTION_DIVISION = 1 AND DIRECTION_PROCEDURE.SEQ = PROC_IF_DETAIL.STEP;

		-- 工程が変わった場合
		IF TEMP_BEFOR_STEP_NO <> TEMP_STEP_NO THEN
			-- 以前の工程コードを保持
			TEMP_BEFOR_STEP_NO := TEMP_STEP_NO;
			TEMP_SEQ_COUNT := 1;	-- カウンタを初期化
			DBMS_OUTPUT.PUT_LINE('工程コード更新');
		
			UPDATE DIRECTION_PROCEDURE SET 
				DIRECTION_PROCEDURE.RESULT_SDATE = PROC_IF_DETAIL.KAISHIJIKOKU,		-- 開始実績日時
				DIRECTION_PROCEDURE.RESULT_EDATE = PROC_IF_DETAIL.SHURYOJIKOKU,		-- 終了実績日時
				DIRECTION_PROCEDURE.RESULT_CONDITION_TEMP　= PROC_IF_DETAIL.ONDO,	-- 実績温度
				DIRECTION_PROCEDURE.RESULT_STIR_SPEED　= PROC_IF_DETAIL.KAKUHAN,	-- 実績攪拌速度
				DIRECTION_PROCEDURE.RESULT_PH　= PROC_IF_DETAIL.PH,			-- 実績pH
				DIRECTION_PROCEDURE.UPDATE_DATE = SYSDATE,				-- 更新日付
				DIRECTION_PROCEDURE.UPDATOR_CD = 'AUTO'					-- 更新者コード
			WHERE DIRECTION_PROCEDURE.DIRECTION_NO = I_DIRECTION_NO AND DIRECTION_PROCEDURE.DIRECTION_DIVISION = 1 AND DIRECTION_PROCEDURE.SEQ = PROC_IF_DETAIL.STEP;

			DBMS_OUTPUT.PUT_LINE('工程Update完　ｽﾃｯﾌﾟ:' || PROC_IF_DETAIL.STEP);
		ELSE
			DBMS_OUTPUT.PUT_LINE('現工程コード:' || TEMP_STEP_NO || ' 前工程コード:' || TEMP_BEFOR_STEP_NO || '同一工程');
			
		END IF;

		-- IFから0があがってきた場合配合更新処理を行わない
		IF PROC_IF_DETAIL.GENTONYURYO <> 0 THEN
			-- 製造指図フォーミュラ更新処理
			-- 工程コードがタンク以外の場合
			IF TEMP_OPERATION_CD = '27' OR TEMP_OPERATION_CD = '28' OR TEMP_OPERATION_CD = '31' OR TEMP_OPERATION_CD = '32' OR TEMP_OPERATION_CD = '33' OR TEMP_OPERATION_CD = '34' OR TEMP_OPERATION_CD = '35' OR TEMP_OPERATION_CD = '36' OR
				TEMP_OPERATION_CD = '23' OR TEMP_OPERATION_CD = '25' OR TEMP_OPERATION_CD = '54' OR TEMP_OPERATION_CD = '55' OR TEMP_OPERATION_CD = '56' OR TEMP_OPERATION_CD = '51' OR TEMP_OPERATION_CD = '52' OR TEMP_OPERATION_CD = '53' THEN
	
				DBMS_OUTPUT.PUT_LINE('配合工程:' || TEMP_STEP_NO);

				-- 計装IF製造実績詳細を元に製造指図フォーミュラを検索
				SELECT COUNT(*) INTO TEMP_CHAR FROM DIRECTION_FORMULA WHERE DIRECTION_DIVISION = '1' AND DIRECTION_NO = I_DIRECTION_NO AND STEP_NO = PROC_IF_DETAIL.STEP AND LINE_NO = SUBSTR(TO_CHAR(PROC_IF_DETAIL.SUBSTEP),1,1);
				IF TEMP_CHAR IS NULL OR TEMP_CHAR = 0 THEN -- AP.製造指図フォーミュラにデータが無い場合
					IO_RETURN_MSG :='製造指図NO:' || I_DIRECTION_NO || ' 品目コード:' || TEMP_CHAR || ' ｽﾃｯﾌﾟ:' || PROC_IF_DETAIL.STEP || ' ｻﾌﾞｽﾃｯﾌﾟ:' || PROC_IF_DETAIL.SUBSTEP || 'がIF.製造実績詳細にありAP.製造指図フォーミュラに存在しません';
					RETURN -1;
				END IF;

				-- フォーミュラデータ保持
				SELECT * INTO TEMP_FORMULA FROM DIRECTION_FORMULA WHERE DIRECTION_DIVISION = '1' AND DIRECTION_NO = I_DIRECTION_NO AND STEP_NO = PROC_IF_DETAIL.STEP AND LINE_NO = SUBSTR(TO_CHAR(PROC_IF_DETAIL.SUBSTEP),1,1);
				TEMP_ADDITION_ITEM_CD := TEMP_FORMULA.ITEM_CD;

				-- 工程によって処理を分岐
				IF TEMP_OPERATION_CD = '23' OR TEMP_OPERATION_CD = '25' OR TEMP_OPERATION_CD = '54' OR TEMP_OPERATION_CD = '55' OR TEMP_OPERATION_CD = '56' OR TEMP_OPERATION_CD = '51' OR TEMP_OPERATION_CD = '52' OR TEMP_OPERATION_CD = '53' THEN
					TEMP_ALIAS_LOT_NO := TEMP_FORMULA.MANUFACTURER_LOT_NO;	-- ロケーションコード（第1タンクNo　兼　実績タンクNo）
					TEMP_LOCATION_CD := TEMP_FORMULA.LOCATION_CD;		-- メーカーロット番号
				ELSE
					-- 品目タイプが[-1:原材料]の場合
					IF TEMP_FORMULA.LINE_TYPE = CONST_LINE_TYPE_GENZAI THEN

						-- IF.製品入出庫実績入荷ロット番号でロット在庫を検索
						SELECT COUNT(*) INTO TEMP_COUNT FROM LOT_INVENTORY WHERE LOT_INVENTORY.LOT_NO = TRIM(PROC_IF_DETAIL.NYUKALOT) AND LOT_INVENTORY.ITEM_CD = TEMP_ADDITION_ITEM_CD;
						IF TEMP_COUNT IS NULL OR TEMP_COUNT = 0 THEN -- ロット在庫に入荷ロット番号のデータが無い場合
							IO_RETURN_MSG :='製造指図NO:' || I_DIRECTION_NO || ' 品目コード:' || TEMP_ADDITION_ITEM_CD || ' ｽﾃｯﾌﾟ:' || PROC_IF_DETAIL.STEP || ' ｻﾌﾞｽﾃｯﾌﾟ:' || PROC_IF_DETAIL.SUBSTEP || ' 入荷ロット番号:' || PROC_IF_DETAIL.NYUKALOT || ' ロット在庫にありません。';
							RETURN -1;
						END IF;
						
						-- ロケーションコードと原料ロット番号をロット在庫から取得
						SELECT LOCATION_CD,ALIAS_LOT_NO INTO TEMP_LOCATION_CD,TEMP_ALIAS_LOT_NO FROM LOT_INVENTORY WHERE LOT_INVENTORY.LOT_NO = TRIM(PROC_IF_DETAIL.NYUKALOT) AND LOT_INVENTORY.ITEM_CD = TEMP_ADDITION_ITEM_CD;
					ELSE
						TEMP_ALIAS_LOT_NO := TEMP_FORMULA.MANUFACTURER_LOT_NO;	-- ロケーションコード（第1タンクNo　兼　実績タンクNo）
						TEMP_LOCATION_CD := TEMP_FORMULA.LOCATION_CD;		-- メーカーロット番号
					END IF;
	
				END IF;
	
				-- 処理をするIF.製造実績詳細のレコードの品目コードがあるかチェック
				SELECT COUNT(*) INTO TEMP_COUNT FROM ITEM WHERE ITEM.ITEM_CD = TEMP_ADDITION_ITEM_CD;
				IF TEMP_COUNT IS NULL OR TEMP_COUNT = 0 THEN -- 品目マスタにデータが無い場合
					IO_RETURN_MSG :='製造指図NO:' || I_DIRECTION_NO || ' 品目コード:' || TEMP_ADDITION_ITEM_CD || ' ｽﾃｯﾌﾟ:' || PROC_IF_DETAIL.STEP || ' ｻﾌﾞｽﾃｯﾌﾟ:' || PROC_IF_DETAIL.SUBSTEP || 'のIF.製造実績詳細レコードの品目コードが品目マスタにありません';
					RETURN -1;
				END IF;
				
				-- 品目コードから在庫管理単位を取得
				TEMP_ITEM_RATE := FUN_IF_GET_ITEM_UNIT_VALUE(TEMP_ADDITION_ITEM_CD);
				
				-- 品目の在庫管理単位を元に変換レートが取得できなかった場合
				IF TEMP_ITEM_RATE < 0 THEN 
					IO_RETURN_MSG :='製造指図NO:' || I_DIRECTION_NO || ' 品目コード:' || TEMP_ADDITION_ITEM_CD || ' ｽﾃｯﾌﾟ:' || PROC_IF_DETAIL.STEP || ' ｻﾌﾞｽﾃｯﾌﾟ:' || PROC_IF_DETAIL.SUBSTEP || 'が不正です。（在庫管理単位取得エラー）';
					RETURN -1;
				END IF;
	
				TEMP_RESULT_QTY := PROC_IF_DETAIL.GENTONYURYO / TEMP_ITEM_RATE;
	
				DBMS_OUTPUT.PUT_LINE('配合工程:' || TEMP_STEP_NO || ' 数量:' || TEMP_RESULT_QTY);
	
				-- 計装IF製造実績詳細のｻﾌﾞｽﾃｯﾌﾟ製造指図フォーミュラに元データがある場合(更新処理）
				IF PROC_IF_DETAIL.SUBSTEP < 100 THEN
					
					DBMS_OUTPUT.PUT_LINE('配合データ更新 ｻﾌﾞｽﾃｯﾌﾟ:' || PROC_IF_DETAIL.SUBSTEP );
					
					-- 計装IF製造実績詳細を元に製造指図フォーミュラを検索
					SELECT COUNT(*) INTO TEMP_CHAR FROM DIRECTION_FORMULA WHERE DIRECTION_DIVISION = '1' AND DIRECTION_NO = I_DIRECTION_NO AND STEP_NO = PROC_IF_DETAIL.STEP AND LINE_NO = SUBSTR(TO_CHAR(PROC_IF_DETAIL.SUBSTEP),1,1);
					IF TEMP_CHAR IS NULL OR TEMP_CHAR = 0 THEN -- AP.製造指図フォーミュラにデータが無い場合
						IO_RETURN_MSG :='製造指図NO:' || I_DIRECTION_NO ||  ' ｽﾃｯﾌﾟ:' || PROC_IF_DETAIL.STEP || ' ｻﾌﾞｽﾃｯﾌﾟ:' || PROC_IF_DETAIL.SUBSTEP || 'がIF.製造実績詳細にありAP.製造指図フォーミュラに存在しません';
						RETURN -1;
					END IF;
					
					-- データがあるのでAP.製造指図フォーミュラを計装IF.製造実績詳細データで更新
					UPDATE DIRECTION_FORMULA SET 
						DIRECTION_FORMULA.ITEM_CD = TEMP_ADDITION_ITEM_CD,		-- 品目コード
						DIRECTION_FORMULA.LOT_NO = TRIM(PROC_IF_DETAIL.NYUKALOT),		-- 入荷ロットNo
						DIRECTION_FORMULA.SEQ = TEMP_SEQ_COUNT,					-- SEQ
						DIRECTION_FORMULA.STOCKPD_QTY = TEMP_RESULT_QTY,			-- 在庫引落量
						DIRECTION_FORMULA.RESULT_QTY = TEMP_RESULT_QTY,				-- 実績数量
						DIRECTION_FORMULA.LOCATION_CD = TEMP_LOCATION_CD,			-- ロケーション
						DIRECTION_FORMULA.MANUFACTURER_LOT_NO = TEMP_ALIAS_LOT_NO,		-- メーカーロット番号
						DIRECTION_FORMULA.UPDATOR_CD = 'AUTO',					-- 更新者コード
						DIRECTION_FORMULA.UPDATE_DATE = SYSDATE					-- 更新日
					WHERE DIRECTION_DIVISION = '1' AND DIRECTION_NO = I_DIRECTION_NO AND STEP_NO = PROC_IF_DETAIL.STEP AND LINE_NO = PROC_IF_DETAIL.SUBSTEP;
	
				-- 配合が増えた場合
				ELSE
	
					DBMS_OUTPUT.PUT_LINE('配合が増えた場合:' || PROC_IF_DETAIL.SUBSTEP );
	
					-- 配合が分岐の為元レコードを保持
					SELECT * INTO TEMP_FORMULA FROM DIRECTION_FORMULA WHERE DIRECTION_DIVISION = '1' AND DIRECTION_NO = I_DIRECTION_NO AND STEP_NO = PROC_IF_DETAIL.STEP AND LINE_NO = SUBSTR(TO_CHAR(PROC_IF_DETAIL.SUBSTEP),1,1);
	
					-- 元レコードとの比較を行う(元レコードのｽﾃｯﾌﾟNOとｻﾌﾞｽﾃｯﾌﾟを比較）
					IF TEMP_FORMULA.STEP_NO <> PROC_IF_DETAIL.STEP OR TEMP_FORMULA.LINE_NO <> TO_NUMBER(SUBSTR(TO_CHAR(PROC_IF_DETAIL.SUBSTEP),1,1)) THEN
						IO_RETURN_MSG :='製造指図NO:' || I_DIRECTION_NO || ' 品目コード:' || TEMP_CHAR || ' ｽﾃｯﾌﾟ:' || PROC_IF_DETAIL.STEP || ' ｻﾌﾞｽﾃｯﾌﾟ:' || PROC_IF_DETAIL.SUBSTEP || 'の分割元データがAP.製造指図フォーミュラに存在しません';
						RETURN -1;
					END IF;
			
					-- 引数の品目コード両方ともに親品目コードを持っている場合親品目コードが同一かチェック　それ以外はノーチェック
					IF FUN_IF_CHECK_PARENT_ITEM_CD(TEMP_FORMULA.ITEM_CD,TEMP_ADDITION_ITEM_CD) < 0 THEN
						IO_RETURN_MSG :='分割元品目コード:' || TEMP_FORMULA.ITEM_CD || ' 分割先品目コード:' || TEMP_ADDITION_ITEM_CD || 'の親品目コードが同一ではありません';
						RETURN -1;
					END IF;
	
					-- 次のライン番号を取得（新規の場合は最大値＋１）
					SELECT MAX(DIRECTION_FORMULA.LINE_NO) + 1 INTO TEMP_NEXT_LINE_NO FROM DIRECTION_FORMULA WHERE DIRECTION_DIVISION = '1' AND DIRECTION_NO = I_DIRECTION_NO AND STEP_NO = PROC_IF_DETAIL.STEP ;
	
					-- 製造指図フォーミュラに新規レコード追加
					INSERT INTO DIRECTION_FORMULA (
						SELECT 
							FORMULA.DIRECTION_DIVISION,
							FORMULA.DIRECTION_NO,
							FORMULA.STEP_NO,
							TEMP_NEXT_LINE_NO,
							TEMP_SEQ_COUNT,
							FORMULA.LINE_TYPE,
							TEMP_ADDITION_ITEM_CD,
							FORMULA.TONYU,
							FORMULA.DATAREAD,
							FORMULA.TONYUSOKUDO,
							FORMULA.QTY,
							TEMP_RESULT_QTY,
							TEMP_RESULT_QTY,
							FORMULA.SAMPLE_QTY,
							FORMULA.LOSS_QTY,
							FORMULA.DEFECT_QTY,
							FORMULA.ADJUST_QTY,
							FORMULA.COST,
							FORMULA.STEP_CONDITION,
							FORMULA.NOTES,
							FORMULA.LOCATION_CD,
							FORMULA.NEXT_LOCATION_CD,
							FORMULA.NEXT_AFTER_LOCATION_CD,
							TRIM(PROC_IF_DETAIL.NYUKALOT),
							TEMP_ALIAS_LOT_NO,
							FORMULA.FILL_QTY,
							FORMULA.FILL_RESULT_QTY,
							FORMULA.REMARK,
							SYSDATE,
							'AUTO',
							SYSDATE,
							'AUTO'
					FROM DIRECTION_FORMULA FORMULA WHERE DIRECTION_DIVISION = '1' AND DIRECTION_NO = I_DIRECTION_NO AND STEP_NO = PROC_IF_DETAIL.STEP AND LINE_NO = TO_NUMBER(SUBSTR(TO_CHAR(PROC_IF_DETAIL.SUBSTEP),1,1)));
	
					DBMS_OUTPUT.PUT_LINE('配合追加完了' );
	
				END IF;
	
				-- カウントアップ
				TEMP_SEQ_COUNT := TEMP_SEQ_COUNT + 1;
	
				-- 在庫プロシージャコール
					
			-- 工程コードがタンクの場合
			ELSIF TEMP_OPERATION_CD = '21' OR TEMP_OPERATION_CD = '22' OR TEMP_OPERATION_CD = '24' OR TEMP_OPERATION_CD = '26' THEN
	
				DBMS_OUTPUT.PUT_LINE('タンク材料:' || TEMP_OPERATION_CD);
				
				TEMP_SEQ_COUNT := 1;		-- カウンタに初期化で１セット
				TEMP_SUM_USE_VALUE := 0;	-- 使用量累積を初期化で0をセット
				
				-- 処理をするIF.製造実績詳細のレコードの品目コードがあるかチェック
				SELECT COUNT(*) INTO TEMP_ADDITION_ITEM_CD FROM ITEM WHERE ITEM.ITEM_CD = TRIM(PROC_IF_DETAIL.GENZAICODE);
				IF TEMP_ADDITION_ITEM_CD IS NULL OR TEMP_ADDITION_ITEM_CD = 0 THEN -- 品目マスタにデータが無い場合
					IO_RETURN_MSG :='製造指図NO:' || I_DIRECTION_NO || ' 品目コード:' || TEMP_ADDITION_ITEM_CD || ' ｽﾃｯﾌﾟ:' || PROC_IF_DETAIL.STEP || ' ｻﾌﾞｽﾃｯﾌﾟ:' || PROC_IF_DETAIL.SUBSTEP || 'のIF.製造実績詳細レコードの品目コードが品目マスタにありません';
					RETURN -1;
				END IF;
				SELECT ITEM_CD INTO TEMP_ADDITION_ITEM_CD FROM ITEM WHERE ITEM.ITEM_CD = TRIM(PROC_IF_DETAIL.GENZAICODE);
	
				-- 計装IF製造実績詳細を元に製造指図フォーミュラを検索
				SELECT COUNT(*) INTO TEMP_CHAR FROM DIRECTION_FORMULA WHERE DIRECTION_DIVISION = '1' AND DIRECTION_NO = I_DIRECTION_NO AND STEP_NO = PROC_IF_DETAIL.STEP AND LINE_NO = PROC_IF_DETAIL.SUBSTEP;
				IF TEMP_CHAR IS NULL OR TEMP_CHAR = 0 THEN -- AP.製造指図フォーミュラにデータが無い場合
					IO_RETURN_MSG :='製造指図NO:' || I_DIRECTION_NO || ' 品目コード:' || TEMP_CHAR || ' ｽﾃｯﾌﾟ:' || PROC_IF_DETAIL.STEP || ' ｻﾌﾞｽﾃｯﾌﾟ:' || PROC_IF_DETAIL.SUBSTEP || 'がIF.製造実績詳細にありAP.製造指図フォーミュラに存在しません';
					RETURN -1;
				END IF;
				
				-- 該当する製造指図フォーミュラの第1タンク、第2タンク第3タンクの値を取得
				SELECT * INTO TEMP_FORMULA FROM DIRECTION_FORMULA WHERE DIRECTION_DIVISION = '1' AND DIRECTION_NO = I_DIRECTION_NO AND STEP_NO = PROC_IF_DETAIL.STEP AND LINE_NO = PROC_IF_DETAIL.SUBSTEP;
				
				-- 第1タンクが設定されていない場合
				IF TEMP_FORMULA.LOCATION_CD IS NULL THEN
					IO_RETURN_MSG :='製造指図NO:' || I_DIRECTION_NO || ' 品目コード:' || TEMP_CHAR || ' ｽﾃｯﾌﾟ:' || PROC_IF_DETAIL.STEP || ' ｻﾌﾞｽﾃｯﾌﾟ:' || PROC_IF_DETAIL.SUBSTEP || '第1タンクの設定がされていません';
					RETURN -1;
				END IF;
				
				-- 品目コードから在庫管理単位を取得
				TEMP_ITEM_RATE := FUN_IF_GET_ITEM_UNIT_VALUE(TEMP_ADDITION_ITEM_CD);
	
				-- 品目コードから在庫管理単位の取得の成否で分岐
				IF TEMP_ITEM_RATE <= 0 THEN 
					IO_RETURN_MSG :='製造指図NO:' || I_DIRECTION_NO || ' 品目コード:' || TEMP_CHAR || 'が不正です。（在庫管理単位取得エラー）';
					RETURN -1;
				END IF;	
					
				-- 該当する品目、ﾛｹｰｼｮﾝの在庫の総量を取得
				SELECT NVL(SUM(INVENTORY_QTY),0) INTO TEMP_INVENTORY_QTY FROM LOT_INVENTORY WHERE LOT_INVENTORY.ITEM_CD = TEMP_ADDITION_ITEM_CD AND LOCATION_CD IN (TEMP_FORMULA.LOCATION_CD,TEMP_FORMULA.NEXT_LOCATION_CD,TEMP_FORMULA.NEXT_AFTER_LOCATION_CD);
				
				-- 実績使用量を計算
				TEMP_RESULT_USE_VALUE := PROC_IF_DETAIL.GENTONYURYO / TEMP_ITEM_RATE;
	
				DBMS_OUTPUT.PUT_LINE(TEMP_ADDITION_ITEM_CD);
				DBMS_OUTPUT.PUT_LINE('実績数量:' || TEMP_RESULT_USE_VALUE || ' タンク在庫:' || TEMP_INVENTORY_QTY);
				
				-- 実績数量よりロット在庫テーブルの該当する（品目とﾛｹｰｼｮﾝ）在庫量のほうが少ない場合エラー
				IF TEMP_RESULT_USE_VALUE > TEMP_INVENTORY_QTY THEN
					IO_RETURN_MSG :='製造指図NO:' || I_DIRECTION_NO || ' ｽﾃｯﾌﾟ:' || PROC_IF_DETAIL.STEP || ' ｻﾌﾞｽﾃｯﾌﾟ:' || PROC_IF_DETAIL.SUBSTEP || '実績量より在庫量のほうが少ないです。' || '実績数量:' || TEMP_RESULT_USE_VALUE || ' タンク在庫:' || TEMP_INVENTORY_QTY;
					RETURN -1;
				END IF;
	
				-- ロット在庫を製造指図プロシージャの第1,第2,第3タンク順に（同一タンクでロットが分かれる場合、ロット発生日の古い順）処理
				FOR LOT_LOOP IN	(SELECT USE_LOT.* FROM(
					(SELECT LOT_INVENTORY.*,'1' AS PROC_NUMBER FROM LOT_INVENTORY WHERE LOT_INVENTORY.ITEM_CD = TEMP_ADDITION_ITEM_CD AND LOCATION_CD = TEMP_FORMULA.LOCATION_CD)
					UNION
					(SELECT LOT_INVENTORY.*,'2' AS PROC_NUMBER FROM LOT_INVENTORY WHERE LOT_INVENTORY.ITEM_CD = TEMP_ADDITION_ITEM_CD AND LOCATION_CD = TEMP_FORMULA.NEXT_LOCATION_CD)
					UNION
					(SELECT LOT_INVENTORY.*,'3' AS PROC_NUMBER FROM LOT_INVENTORY WHERE LOT_INVENTORY.ITEM_CD = TEMP_ADDITION_ITEM_CD AND LOCATION_CD = TEMP_FORMULA.NEXT_AFTER_LOCATION_CD)) USE_LOT ORDER BY PROC_NUMBER,ISSUE_DATE ASC)
				LOOP
					
					-- １レコードごとの使用量を設定
					IF TEMP_RESULT_USE_VALUE > TEMP_SUM_USE_VALUE + LOT_LOOP.INVENTORY_QTY THEN	-- IFの実績量 > 使用累計量 + 次払い出す予定のロット在庫
						TEMP_USE_VALUE := LOT_LOOP.INVENTORY_QTY;
					ELSE										-- IFの実績量 <= 使用累計量 + 次払い出す予定のロット在庫
						TEMP_USE_VALUE := TEMP_RESULT_USE_VALUE - TEMP_SUM_USE_VALUE;
					END IF;
	
					-- 品目タイプが[-1:原材料]の場合
					IF TEMP_FORMULA.LINE_TYPE = CONST_LINE_TYPE_GENZAI THEN	-- ロット在庫のデータでフォーミュラを更新
						TEMP_LOCATION_CD := LOT_LOOP.LOCATION_CD;	-- 使用しているロケーションコードを保持
						TEMP_ALIAS_LOT_NO := LOT_LOOP.ALIAS_LOT_NO;	-- メーカーロット番号
					ELSE
						TEMP_LOCATION_CD := TEMP_FORMULA.LOCATION_CD;		-- ロケーションコード（第1タンクNo　兼　実績タンクNo）
						TEMP_ALIAS_LOT_NO := TEMP_FORMULA.MANUFACTURER_LOT_NO;	-- メーカーロット番号
					END IF;
					
					-- １レコード目の場合（新規ではなく更新の場合)
					IF TEMP_SEQ_COUNT = 1 THEN
						-- データがあるのでAP.製造指図フォーミュラを計装IF.製造実績詳細データで更新
						UPDATE DIRECTION_FORMULA SET 
							DIRECTION_FORMULA.ITEM_CD = TRIM(PROC_IF_DETAIL.GENZAICODE),		-- 品目コード
							DIRECTION_FORMULA.LOT_NO = LOT_LOOP.LOT_NO,				-- 入荷ロットNo
							DIRECTION_FORMULA.LOCATION_CD = TEMP_LOCATION_CD,			-- ロケーションコード
							DIRECTION_FORMULA.MANUFACTURER_LOT_NO = TEMP_ALIAS_LOT_NO,		-- メーカーロット番号
							DIRECTION_FORMULA.STOCKPD_QTY = TEMP_USE_VALUE,				-- 在庫引落量
							DIRECTION_FORMULA.RESULT_QTY = TEMP_USE_VALUE,				-- 実績数量
							DIRECTION_FORMULA.UPDATOR_CD = 'AUTO',					-- 更新者コード
							DIRECTION_FORMULA.UPDATE_DATE = SYSDATE					-- 更新日
						WHERE DIRECTION_DIVISION = '1' AND DIRECTION_NO = I_DIRECTION_NO AND STEP_NO = PROC_IF_DETAIL.STEP AND SEQ = PROC_IF_DETAIL.SUBSTEP;
						
					ELSE
						SELECT MAX(DIRECTION_FORMULA.LINE_NO) + 1 INTO TEMP_CHAR FROM DIRECTION_FORMULA WHERE DIRECTION_DIVISION = '1' AND DIRECTION_NO = I_DIRECTION_NO AND STEP_NO = PROC_IF_DETAIL.STEP;
	
						-- 製造指図フォーミュラに新規レコード追加
						INSERT INTO DIRECTION_FORMULA (
							SELECT 
								FORMULA.DIRECTION_DIVISION,
								FORMULA.DIRECTION_NO,
								FORMULA.STEP_NO,
								-- ｽﾃｯﾌﾟ番号の最大値を取得
								TEMP_CHAR ,
								TEMP_SEQ_COUNT,
								FORMULA.LINE_TYPE,
								TRIM(PROC_IF_DETAIL.GENZAICODE),
								FORMULA.TONYU,
								FORMULA.DATAREAD,
								FORMULA.TONYUSOKUDO,
								FORMULA.QTY,
								TEMP_USE_VALUE,		-- 在庫引落量(計装IFからあがってきた実績数量をセット)
								TEMP_USE_VALUE,		-- 実績数量(計装IFからあがってきた実績数量をセット)
								FORMULA.SAMPLE_QTY,
								FORMULA.LOSS_QTY,
								FORMULA.DEFECT_QTY,
								FORMULA.ADJUST_QTY,
								FORMULA.COST,
								FORMULA.STEP_CONDITION,
								FORMULA.NOTES,
								TEMP_LOCATION_CD,		-- 第一、第二、第三ロケーションを設定
								FORMULA.NEXT_LOCATION_CD,
								FORMULA.NEXT_AFTER_LOCATION_CD,
								LOT_LOOP.LOT_NO,
								TEMP_ALIAS_LOT_NO,
								FORMULA.FILL_QTY,
								FORMULA.FILL_RESULT_QTY,
								FORMULA.REMARK,
								SYSDATE,
								'AUTO',
								SYSDATE,
								'AUTO'
						FROM DIRECTION_FORMULA FORMULA WHERE DIRECTION_DIVISION = '1' AND DIRECTION_NO = I_DIRECTION_NO AND STEP_NO = PROC_IF_DETAIL.STEP AND SEQ = TO_NUMBER(SUBSTR(TO_CHAR(PROC_IF_DETAIL.SUBSTEP),1,1)));
						DBMS_OUTPUT.PUT_LINE('配合追加終了');
			
					END IF;
					
					TEMP_SUM_USE_VALUE := TEMP_SUM_USE_VALUE + TEMP_USE_VALUE;	-- 使用量累計を計算
					TEMP_SEQ_COUNT := TEMP_SEQ_COUNT + 1;				-- 同一工程での工数を算出
	
					-- 実績数量 <= 使用数量となった場合処理終了
					IF TEMP_RESULT_USE_VALUE <= TEMP_SUM_USE_VALUE THEN
						
						DBMS_OUTPUT.PUT_LINE('実績数量:' || TEMP_RESULT_USE_VALUE ||' 使用数量:' || TEMP_USE_VALUE);
						EXIT;
						
					END IF;
				END LOOP;
					
			END IF;

		END IF;

	END LOOP;

	-- 製造実績ヘッダ処理
   	FOR PROC_IF_HEAD IN IF_HEAD LOOP

		DBMS_OUTPUT.PUT_LINE('製造指図NO:' || PROC_IF_HEAD.SEIZOSASHIZUNO );

		-- 製造実績フォーミュラのｽﾃｯﾌﾟ = 1 ｻﾌﾞｽﾃｯﾌﾟ= 1001 のデータを検索（仕上げのデータ）
		SELECT COUNT(*) INTO TEMP_COUNT FROM DIRECTION_FORMULA WHERE DIRECTION_NO = I_DIRECTION_NO AND DIRECTION_DIVISION = 1 AND STEP_NO = 1 AND LINE_NO = 1001;
		IF TEMP_COUNT IS NULL OR TEMP_COUNT = 0 THEN -- 製造実績フォーミュラにデータが無い場合
			IO_RETURN_MSG :='製造指図NO:' || I_DIRECTION_NO || ' ｽﾃｯﾌﾟ:1 ラインNO:1001 の仕上データがAP.製造指図フォーミュラのデータがありません';
			RETURN -1;
		END IF;

		-- 製造実績フォーミュラの仕上げのデータを保持
		SELECT * INTO TEMP_FORMULA_SIAGE FROM DIRECTION_FORMULA WHERE DIRECTION_NO = I_DIRECTION_NO AND DIRECTION_DIVISION = 1 AND STEP_NO = 1 AND LINE_NO = 1001;
		
		-- 製造指図番号から品目コードを取得
		SELECT ITEM_CD INTO TEMP_ITEM_CD FROM DIRECTION_HEADER WHERE DIRECTION_HEADER.DIRECTION_NO = I_DIRECTION_NO;
		
		-- 品目コードが品目マスタにあるか検索
		SELECT COUNT(*) INTO TEMP_COUNT FROM ITEM WHERE ITEM.ITEM_CD = TRIM(PROC_IF_HEAD.DAISEICODE);
		IF TEMP_COUNT IS NULL OR TEMP_COUNT = 0 THEN -- 品目マスタに品目がない場合
			IO_RETURN_MSG := '製造指図NO:' || I_DIRECTION_NO || ' 品目コード:' || TEMP_ITEM_CD || ' IF.製造実績ヘッダの品目コードが品目マスタにありません';
			RETURN -1;
		END IF;
		
		-- 品目コードから在庫管理単位を取得
		TEMP_ITEM_RATE := FUN_IF_GET_ITEM_UNIT_VALUE(TEMP_ITEM_CD);

		-- 品目コードから在庫管理単位が取得できなかった場合エラー
		IF TEMP_ITEM_RATE <= 0 THEN 
			IO_RETURN_MSG :='製造指図NO:' || I_DIRECTION_NO || ' 品目コード:' || TEMP_ITEM_CD || 'が不正です。（在庫管理単位取得エラー）';
			RETURN -1;
		END IF;	
			
		-- 実績数量を算出
		TEMP_RESULT_QTY := PROC_IF_HEAD.SIKOMIRYO / TEMP_ITEM_RATE;

		-- 工程の開始時刻を取得(SEQが1の工程の開始時刻)
		SELECT * INTO TEMP_PROCEDURE_START FROM DIRECTION_PROCEDURE WHERE DIRECTION_NO = I_DIRECTION_NO AND DIRECTION_DIVISION = 1 AND SEQ = 1 ;
		
		-- 工程の終了時刻を取得(SEQがMAXの工程の終了時刻)
		SELECT * INTO TEMP_PROCEDURE_END FROM DIRECTION_PROCEDURE WHERE DIRECTION_NO = I_DIRECTION_NO AND DIRECTION_DIVISION = 1 AND SEQ = (SELECT MAX(SEQ) FROM DIRECTION_PROCEDURE WHERE DIRECTION_NO = I_DIRECTION_NO AND DIRECTION_DIVISION = 1);

		
		-- AP.製造指図ヘッダーをIF.製造実績ヘッダーで更新
		UPDATE DIRECTION_HEADER SET 
			DIRECTION_HEADER.DIRECTION_STATUS = 6,						-- ステータスを[6:FA受信]
			DIRECTION_HEADER.SEIZOTANTOCODE = TRIM(PROC_IF_HEAD.SEIZOTANTOCODE),		-- 製造担当者
			DIRECTION_HEADER.SENJOTANTOCODE = TRIM(PROC_IF_HEAD.SENJOTANTOCODE),		-- 調合タンク洗浄担当者
			DIRECTION_HEADER.ITEM_CD = TRIM(PROC_IF_HEAD.DAISEICODE),			-- 品目コード
			DIRECTION_HEADER.COMPOUND_TANK_NO = TRIM(PROC_IF_HEAD.CHOGOTANKNO),		-- 調合タンクno
			DIRECTION_HEADER.HOLD_TANK_NO = TRIM(PROC_IF_HEAD.HOLDTANKNO),			-- ﾎｰﾙﾄﾞタンクno
			DIRECTION_HEADER.RESULT_QTY = TEMP_RESULT_QTY,					-- 実績生産量
			DIRECTION_HEADER.CHOGOTANKCONDI = TRIM(PROC_IF_HEAD.CHOGOTANKCONDI),		-- 調合タンク内部状態
			DIRECTION_HEADER.YOBIYOKAICONDI = TRIM(PROC_IF_HEAD.YOBIYOKAICONDI),		-- 予備用階槽内部状態
			DIRECTION_HEADER.HOLDTANKCONDI = TRIM(PROC_IF_HEAD.HOLDTANKCONDI),		-- ホールドタンク内部状態
			DIRECTION_HEADER.MEKKINTANTOCODE = TRIM(PROC_IF_HEAD.MEKKINTANTOCODE),		-- 調合タンク滅菌作業担当者
			DIRECTION_HEADER.STERIT_SDATE = TO_DATE(TO_CHAR(PROC_IF_HEAD.SEIZOBI,'YYYY-MM-DD') || ' ' || SUBSTR(PROC_IF_HEAD.MEKKINKAISHIJIKAN,1,2) || ':' || SUBSTR(PROC_IF_HEAD.MEKKINKAISHIJIKAN,3,2),'yyyy/MM/dd hh24:mi'),		-- 滅菌作業開始時間
			DIRECTION_HEADER.STERIT_EDATE = TO_DATE(TO_CHAR(PROC_IF_HEAD.SEIZOBI,'YYYY-MM-DD') || ' ' || SUBSTR(PROC_IF_HEAD.MEKKINSHURYOJIKAN,1,2) || ':' || SUBSTR(PROC_IF_HEAD.MEKKINSHURYOJIKAN,3,2),'yyyy/MM/dd hh24:mi'), 		-- 滅菌作業終了時間
			DIRECTION_HEADER.MEKKIN_TANK_TEMP_MIN = PROC_IF_HEAD.MEKKINMINONDO,
			DIRECTION_HEADER.MEKKIN_TANK_TEMP_MAX = PROC_IF_HEAD.MEKKINMAXONDO,
			DIRECTION_HEADER.HAISUI_CHECK = TRIM(PROC_IF_HEAD.MEKKINHAISUI),

			DIRECTION_HEADER.RESULT_SDATE = TEMP_PROCEDURE_START.RESULT_SDATE,		-- 実績開始日時
			DIRECTION_HEADER.RESULT_EDATE = TEMP_PROCEDURE_END.RESULT_EDATE,		-- 実績終了日時

			DIRECTION_HEADER.UPDATE_DATE = SYSDATE,		-- 更新日付
			DIRECTION_HEADER.UPDATOR_CD = 'AUTO'		-- 更新者コード
		WHERE DIRECTION_HEADER.DIRECTION_NO = I_DIRECTION_NO AND DIRECTION_HEADER.DIRECTION_DIVISION  =1;

		DBMS_OUTPUT.PUT_LINE('更新完了');

		-- 仕上げデータの品目タイプが[2:中間品]の場合
		IF TEMP_FORMULA_SIAGE.LINE_TYPE = CONST_LINE_TYPE_CHUKAN THEN
			
			-- 品目コードを元に品目マスタから基準保管場所を取得
			SELECT COUNT(*) INTO TEMP_COUNT FROM ITEM WHERE ITEM.ITEM_CD = TEMP_FORMULA_SIAGE.ITEM_CD;
			IF TEMP_COUNT IS NULL AND TEMP_COUNT = 0 THEN	-- 基準保管場所を取得できない場合
				TEMP_DEFAULT_LOCATION := TEMP_FORMULA_SIAGE.LOCATION_CD;
			ELSE
				-- 品目マスタの基準保管場所を取得
				SELECT DEFAULT_LOCATION INTO TEMP_DEFAULT_LOCATION FROM ITEM WHERE ITEM.ITEM_CD = TEMP_ITEM_CD;
			END IF;
			
		END IF;
		
		-- 製造指図フォーミュラ仕上げのデータを更新処理
		UPDATE DIRECTION_FORMULA 
		SET RESULT_QTY = TEMP_RESULT_QTY,
			STOCKPD_QTY = TEMP_RESULT_QTY,
			LOCATION_CD = TEMP_DEFAULT_LOCATION,	-- 
			UPDATE_DATE = SYSDATE,
			UPDATOR_CD = 'AUTO'
		WHERE DIRECTION_NO = I_DIRECTION_NO AND DIRECTION_DIVISION = 1 AND STEP_NO = 1 AND LINE_NO = 1001;
	END LOOP;

	RETURN 0;

-- 異常処理
EXCEPTION

	WHEN OTHERS THEN

		-- SQLエラーコード、エラーメッセージを取得
	    	IO_RETURN_CD := SQLCODE;
		IO_RETURN_MSG  := SUBSTR(SQLERRM,1,1024);

		RETURN -9;

END;
/
