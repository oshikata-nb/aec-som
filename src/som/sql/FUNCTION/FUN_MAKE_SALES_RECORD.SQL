CREATE OR REPLACE FUNCTION      FUN_MAKE_SALES_RECORD
      (
             I_SHIPPING_NO		IN	NVARCHAR2,	-- 出荷番号
             I_TANTO_CD			IN	NVARCHAR2,	-- 担当者コード
             O_RETURN_CD		OUT	NVARCHAR2,	-- エラーコードを返す
             O_RETURN_MSG		OUT	NVARCHAR2	-- エラーメッセージを返す
      )

RETURN NUMBER IS
/*-----------------------------------------------------------------------------------------------------*/
/*      種別          :      FUNCTION                                                                  */
/*      名称          :      FUN_MAKE_SALES_RECORD                                                     */
/*      処理内容      :      出荷指図番号から売上トランザクションレコードを作製		       、      */
/*      引数          :      I_SHIPPING_NO		出荷番号		NVARCHAR2型            */
/*      引数          :      I_TANTO_CD			担当者コード		NVARCHAR2型            */
/*      引数          :      O_RETURN_CD		エラーコード		NVARCHAR2型            */
/*      引数          :      O_RETURN_MSG		エラーメッセージ	NVARCHAR2型            */
/*      VERNO.        :      1.00                                                                      */
/*(history)                                                                                            */
/*      date            ver         name                    comments                                   */
/*      ----------      ------      ------------------      -------------------------------------------*/
/*      2009.04.16      1.00        Ohga                    新規作成                                   */
/*-----------------------------------------------------------------------------------------------------*/
	TEMP_COUNT		NUMBER;			-- 検索結果有無用カウント変数
	TEMP_SHIPPING_EXIST	NUMBER;			-- 出荷指図の存在チェック用
	TEMP_ORDER_EXIST	NUMBER;			-- 受注の存在チェック用
	TEMP_SALES_CHAR		VARCHAR2(20);		-- 売上番号上二桁
	TEMP_SALES_NO		VARCHAR2(20);		-- 売上番号
	TEMP_SALES_NUMBER	NUMBER;			-- 売上番号連番
	TEMP_SHIPPING		SHIPPING%ROWTYPE;	-- 処理対象出荷ヘッダデータ
	TEMP_ORDER_HEAD		ORDER_HEAD%ROWTYPE;	-- 処理対象受注ヘッダデータ
	TEMP_ORDER_DETAIL	ORDER_DETAIL%ROWTYPE;	-- 処理対象受注明細データ

	TEMP_TAX_DIVISION	NUMBER;			-- 消費税課税区分
	TEMP_TAX_CALC_DIVISION	NUMBER;			-- 消費税算出区分
	TEMP_TAX_RATIO		NUMBER;			-- 消費税率
	TEMP_TAX_ROUNDUP	NUMBER;			-- 消費税端数区分
	TEMP_TAX_ROUNDUP_UNIT	NUMBER;			-- 消費税端数単位
	TEMP_TAX_AMOUNT		NUMBER;			-- 消費税額
	TEMP_TRUNC_UP		NUMBER;			-- 切り上げ処理用

	TEMP_SALES_AMOUNT	NUMBER;			-- 売上金額
	TEMP_SALES_QUANTITY	NUMBER;			-- 売上数

	TEMP_ACCOUNT_DATE	VARCHAR2(20);		-- 勘定年月

	TEMP_SHIPPING_COMP_NUM	NUMBER;			-- 受注番号内の出荷完了数
	TEMP_ORDER_DETAIL_NUM	NUMBER;			-- 受注番号内の受注明細数

	TEMP_DIVISION_ITEM_CD	VARCHAR2(20);		-- 納入先区分品目コード

	TEMP_PAYMENT_INVOICE_CD VARCHAR2(20);		-- 請求先コード
	
	CONST_COMPANY_CD     	VARCHAR2(20) := '000001';	-- 自社マスタコード
	
	CONST_DIVISION_YUSI	VARCHAR2(20) := '99999999';	-- 納入先コードが油脂である運賃品目
	CONST_DIVISION_KASEI	VARCHAR2(20) := '99999999';	-- 納入先コードが化成品である運賃品目
	
BEGIN
	-- [第一引数:出荷番号]が出荷トランザクションにあるか検索
	SELECT COUNT(*) INTO TEMP_SHIPPING_EXIST FROM SHIPPING,SHIPPING_DETAIL WHERE SHIPPING.SHIPPING_NO = SHIPPING_DETAIL.SHIPPING_NO AND SHIPPING.SHIPPING_NO = TRIM(I_SHIPPING_NO);

	DBMS_OUTPUT.PUT_LINE('処理該当レコード' || TEMP_SHIPPING_EXIST);
	
	-- [第一引数:出荷番号]出荷トランザクションにない場合
	IF TEMP_SHIPPING_EXIST IS NULL OR TEMP_SHIPPING_EXIST = 0 THEN	
		
		O_RETURN_MSG := '出荷番号:' || I_SHIPPING_NO || 'は出荷トランザクションにありません';
		RETURN -1;
	END IF;

	-- [第一引数:出荷番号]で指定している出荷データで受注番号があるかチェック
	SELECT COUNT(*) INTO TEMP_SHIPPING_EXIST FROM SHIPPING WHERE SHIPPING.SHIPPING_NO = TRIM(I_SHIPPING_NO) AND SHIPPING.ORDER_NO IS NOT NULL;

	-- 受注番号がない出荷は相手にしない（すでに売上がたっているため）
	IF TEMP_SHIPPING_EXIST IS NULL OR TEMP_SHIPPING_EXIST = 0 THEN	
		
		RETURN 0;	-- 売上計上しない出荷なので正常終了
	END IF;

	-- 対象の出荷データを保持
	SELECT * INTO TEMP_SHIPPING FROM SHIPPING WHERE SHIPPING.SHIPPING_NO = TRIM(I_SHIPPING_NO);
	
	-- 出荷トランザクションの受注番号が受注にあるかチェック
	SELECT COUNT(*) INTO TEMP_ORDER_EXIST FROM ORDER_HEAD,ORDER_DETAIL WHERE ORDER_HEAD.ORDER_NO = ORDER_DETAIL.ORDER_NO AND ORDER_HEAD.ORDER_NO = TEMP_SHIPPING.ORDER_NO AND ORDER_DETAIL.ROW_NO = TEMP_SHIPPING.ORDER_ROW_NO;

	DBMS_OUTPUT.PUT_LINE('処理該当レコード(受注)' || TEMP_ORDER_EXIST);
	
	-- [第一引数:出荷番号]の出荷データの受注番号、行番号が受注トランザクションにない場合
	IF TEMP_ORDER_EXIST IS NULL OR TEMP_ORDER_EXIST = 0 THEN	
		
		O_RETURN_MSG := '出荷番号:' || I_SHIPPING_NO || ' 受注番号:' || TEMP_SHIPPING.ORDER_NO || ' 受注行番号:' || TEMP_SHIPPING.ORDER_ROW_NO || 'は受注トランザクションにありません';
		RETURN -1;
	END IF;
	
	-- 受注ヘッダーデータを保持
	SELECT * INTO TEMP_ORDER_HEAD FROM ORDER_HEAD WHERE ORDER_HEAD.ORDER_NO = TEMP_SHIPPING.ORDER_NO;
	
	-- 受注詳細を保持
	SELECT * INTO TEMP_ORDER_DETAIL FROM ORDER_DETAIL WHERE ORDER_DETAIL.ORDER_NO = TEMP_SHIPPING.ORDER_NO AND ORDER_DETAIL.ROW_NO = TEMP_SHIPPING.ORDER_ROW_NO;

	-- 売上番号上二桁を名称マスタから取得
	SELECT NAME01 INTO TEMP_SALES_CHAR FROM NAMES WHERE NAME_DIVISION = 'NUM' AND NAME_CD = 'UR';

	-- 売上番号用連番を取得
	SELECT NO_KEY_UR_SLIP_NO.NEXTVAL INTO TEMP_SALES_NUMBER FROM DUAL;

	-- 売上番号作成
	TEMP_SALES_NO := TEMP_SALES_CHAR || LPAD(TEMP_SALES_NUMBER,9,'0') ;

	-- 売上数量算出
	SELECT SUM(SHIPPING_INSTRUCTION) INTO TEMP_SALES_QUANTITY FROM SHIPPING_DETAIL WHERE SHIPPING_NO = I_SHIPPING_NO;

	-- 売上金額算出(売上数量 * 売上単価(受注単価))
	TEMP_SALES_AMOUNT := TEMP_SALES_QUANTITY * TEMP_ORDER_DETAIL.ORDER_UNITPRICE;

	-- 勘定年月算出(出荷予定日 + リードタイムの年月)
	TEMP_ACCOUNT_DATE := to_char(TEMP_ORDER_HEAD.SCHEDULED_SHIPPING_DATE + TEMP_ORDER_HEAD.LEAD_TIME,'YYYYMM');

	-- 請求先コードを取得
	SELECT COUNT(PAYMENT_INVOICE_CD) INTO TEMP_COUNT FROM VENDER WHERE VENDER_DIVISION = 'TS' AND VENDER_CD = TEMP_SHIPPING.VENDER_CD;
	IF TEMP_COUNT IS NOT NULL OR TEMP_COUNT <> 0 THEN	-- 請求先コードがある場合
		SELECT PAYMENT_INVOICE_CD INTO TEMP_PAYMENT_INVOICE_CD FROM VENDER WHERE VENDER_DIVISION = 'TS' AND VENDER_CD = TEMP_SHIPPING.VENDER_CD;
	ELSE
		TEMP_PAYMENT_INVOICE_CD := TEMP_SHIPPING.VENDER_CD;
	END IF;
	
	-- 消費税計算値を取得
	SELECT
		(CASE -- 販売品扱い属性.売上消費税課税区分＝4:取引先ﾏｽﾀの場合は次へ
			WHEN NVL(ARTICLE_ATTRIBUTE_QUEUE.TAX_DIVISION,4) = 4 THEN  -- 販売品扱い属性にデータが存在しない場合の対応
				(CASE	-- 取引先ﾏｽﾀ.消費税区分＝4:自社ﾏｽﾀの場合は自社ﾏｽﾀ.消費税課税区分
					WHEN VENDER.TAX_DIVISION = 4 THEN (SELECT TAX_DIVISION FROM COMPANY WHERE COMPANY_CD = CONST_COMPANY_CD)
					ELSE VENDER.TAX_DIVISION	-- 取引先ﾏｽﾀ.消費税区分
				 END )
			ELSE ARTICLE_ATTRIBUTE_QUEUE.TAX_DIVISION	-- 販売品扱い属性.売上消費税課税区分
		 END) AS TAX_DIVISION		   -- 消費税課税区分
	,	(CASE	-- 取引先ﾏｽﾀ.消費税算出区分=4:自社ﾏｽﾀの場合は自社ﾏｽﾀ.消費税算出区分
			WHEN VENDER.CALC_DIVISION = 4 THEN (SELECT CALC_DIVISION FROM COMPANY WHERE COMPANY_CD = CONST_COMPANY_CD)
			ELSE VENDER.CALC_DIVISION	-- 取引先ﾏｽﾀ.消費税算出区分
		 END) AS TAX_CALC_DIVISION		   -- 消費税算出区分
	,	(CASE	-- 取引先ﾏｽﾀ.売上消費税課税区分＝4の場合自社マスタから取得
			WHEN VENDER.TAX_DIVISION = 4 THEN (SELECT TAX_RATIO FROM COMPANY WHERE COMPANY_CD = CONST_COMPANY_CD)
			ELSE VENDER.TAX_RATIO	-- 取引先ﾏｽﾀ.消費税率
		 END) AS TAX_RATIO    -- 消費税率
	,	(CASE	-- 取引先マスタ.消費税端数区分 = [4:自社マスタ]の場合自社マスタから取得
			WHEN VENDER.TAX_ROUNDUP = 4 THEN (SELECT TAX_ROUNDUP FROM COMPANY WHERE COMPANY_CD = CONST_COMPANY_CD)
			ELSE VENDER.TAX_ROUNDUP	-- 取引先ﾏｽﾀ.消費税端数区分
		 END) AS TAX_ROUNDUP    -- 消費税率
	,	(CASE	-- 取引先マスタ.消費税端数区分 = [8:自社マスタ]の場合自社マスタから取得
				WHEN VENDER.TAX_ROUNDUP_UNIT = 8 THEN (SELECT TAX_ROUNDUP_UNIT FROM COMPANY WHERE COMPANY_CD = CONST_COMPANY_CD)
				ELSE VENDER.TAX_ROUNDUP_UNIT	-- 取引先ﾏｽﾀ.消費税率
		 END) AS TAX_ROUNDUP_UNIT    -- 消費税端数単位
		INTO TEMP_TAX_DIVISION,TEMP_TAX_CALC_DIVISION,TEMP_TAX_RATIO,TEMP_TAX_ROUNDUP,TEMP_TAX_ROUNDUP_UNIT
	FROM
		(SELECT TAX_DIVISION,CALC_DIVISION,TAX_RATIO,TAX_ROUNDUP,TAX_ROUNDUP_UNIT FROM VENDER WHERE VENDER_DIVISION = 'TS' AND VENDER.VENDER_CD = TEMP_PAYMENT_INVOICE_CD) VENDER
	,	(SELECT ARTICLE_ATTRIBUTE_QUEUE.* FROM ARTICLE_ATTRIBUTE_QUEUE,ITEM WHERE ITEM.ITEM_CD = TEMP_SHIPPING.ITEM_CD AND ITEM.ITEM_CD = ARTICLE_ATTRIBUTE_QUEUE.ITEM_CD(+) AND ITEM.VERSION = ARTICLE_ATTRIBUTE_QUEUE.VERSION(+)) ARTICLE_ATTRIBUTE_QUEUE ;-- 販売品扱い属性キュー

	DBMS_OUTPUT.PUT_LINE('消費税課税区分:' || TEMP_TAX_DIVISION || ' 消費税算出区分:' || TEMP_TAX_CALC_DIVISION || ' 消費税率:' || TEMP_TAX_RATIO || ' 消費税端数処理:' || TEMP_TAX_ROUNDUP || ' 消費税端数単位:' || TEMP_TAX_ROUNDUP_UNIT);
	
	IF TEMP_TAX_ROUNDUP_UNIT = 1 THEN
		TEMP_TRUNC_UP := 0.9;
	ELSIF TEMP_TAX_ROUNDUP_UNIT = 2 THEN
		TEMP_TRUNC_UP := 0.09;
	ELSIF TEMP_TAX_ROUNDUP_UNIT = 3 THEN
		TEMP_TRUNC_UP := 0.009;
	ELSIF TEMP_TAX_ROUNDUP_UNIT = 4 THEN
		TEMP_TRUNC_UP := 0.0009;
	ELSIF TEMP_TAX_ROUNDUP_UNIT = 5 THEN
		TEMP_TRUNC_UP := 0.00009;
	ELSIF TEMP_TAX_ROUNDUP_UNIT = 6 THEN
		TEMP_TRUNC_UP := 0.000009;
	ELSIF TEMP_TAX_ROUNDUP_UNIT = 7 THEN
		TEMP_TRUNC_UP := 0.0000009;
	END IF;
	
	-- 消費税算出区分が[1:明細単位] または　消費税課税区分が[3:非課税]以外の場合消費税算出
	IF TEMP_TAX_CALC_DIVISION = 1 AND TEMP_TAX_DIVISION <> 3 THEN
		
		-- 金額 * 消費税率(%) / 100
		TEMP_TAX_AMOUNT := TEMP_SALES_AMOUNT * TEMP_TAX_RATIO / 100;

		DBMS_OUTPUT.PUT_LINE('消費税率' || TEMP_TAX_AMOUNT);
		DBMS_OUTPUT.PUT_LINE('消費税率' || TEMP_TRUNC_UP);
		
		IF TEMP_TAX_ROUNDUP = 1 THEN		-- 切捨
			TEMP_TAX_AMOUNT := TRUNC(TEMP_TAX_AMOUNT,TEMP_TAX_ROUNDUP_UNIT-1);
		ELSIF TEMP_TAX_ROUNDUP = 2 THEN		-- 四捨五入
			TEMP_TAX_AMOUNT := ROUND(TEMP_TAX_AMOUNT,TEMP_TAX_ROUNDUP_UNIT-1);
		ELSIF TEMP_TAX_ROUNDUP = 3 THEN		-- 切上
			TEMP_TAX_AMOUNT := TRUNC((TEMP_TAX_AMOUNT+TEMP_TRUNC_UP),TEMP_TAX_ROUNDUP_UNIT-1);
		END IF;

		DBMS_OUTPUT.PUT_LINE('消費税率' || TEMP_TAX_AMOUNT);
	ELSE	-- 消費税算出区分が[1:明細単位]以外　または消費税課税区分が[3:非課税]の場合消費税を算出しない
		TEMP_TAX_AMOUNT := 0;
	END IF;
	
	-- 売上トランザクション新規レコード追加
	INSERT INTO SALES(
		SALES_DATE,
		SALES_NO,
		CANCEL_SALES_NO,
		ITEM_CD,
		ORGANIZATION_CD,
		VENDER_CD,
		INPUT_TANTO_CD,
		SALES_TANTO_CD,
		PRODUCT_LOTNO,
		ORDER_NO,
		ORDER_ROW_NO,
		SALES_QUANTITY,
		SALES_UNITPRICE,
		STANDARD_UNITPRICE,
		STANDARD_DISCOUNT,
		SPECIAL_DISCOUNT,
		TMP_UNITPRICE_FLG,
		REMARK,
		DISBURSEMENT_LOCATION_CD,
		DELIVERY_COMP,
		DELIVERY_UPDATE_DATE,
		INVOICE_UPDATE_DATE,
		INPUT_DIVISION,
		DELIVERY_CD,
		TAX_DIVISION,
		TAX_AMOUNT,
		INVOICE_CD,
		SALES_AMOUNT,
		SALES_BASIC,
		TAX_RATIO,
		UPDATE_FLG,
		CONFIG_EXP_RATIO,
		RATIO_NOTAPPLY_SALES_UNITPRICE,
		SHIPPING_NO,
		SALES_SLIP_NO,
		SALES_SLIP_ROW_NO,
		SLIP_PUBLISH_COMP,
		SLIP_PUBLISH_DATE,
		TRANSMISSION_DATE,
		LEDGER_POST_DATE,
		LEDGER_POST_NO,
		SALES_CONVERT_QUANTITY,
		ACCEPT_CONVERT_QUANTITY,
		DATA_TYPE,
		DATA_TOTAL_DIVISION,
		CATEGORY_DIVISION,
		ACCOUNT_YEARS,
		ACCOUNT_DEBIT_SECTION_CD,
		ACCOUNT_CREDIT_SECTION_CD,
		DEBIT_TITLE_CD,
		DEBIT_SUB_TITLE_CD,
		CREDIT_TITLE_CD,
		CREDIT_SUB_TITLE_CD,
		DEPOSIT_TARGET_DIVISION,
		CLAIM_TARGET_DIVISION,
		SUMMARY_CD,
		SUMMARY,
		DEPOSIT_UPDATE_DIVISION,
		DEPOSIT_NO,
		CLAIM_UPDATE_DIVISION,
		CLAIM_NO,
		ERASER_COMPLETE_DIVISION,
		ERASER_COMPLETE_DATE,
		APPROVAL_STATUS,
		APPROVEDBY,
		APPROVALDATE,
		CHARGE_ORGANIZATION_CD,
		KEEP_FLAG,
		RY_CD,
		HOUSING_LOCATION_CD,
		PACKAGE_DIRECTION_NO,
		INPUT_DATE,
		INPUTOR_CD,
		UPDATE_DATE,
		UPDATOR_CD
	) VALUES(
		TO_CHAR(SYSDATE, 'YYYY/MM/DD'),		--売上日付
		TEMP_SALES_NO,				--売上番号
		NULL,					--売上-取消　売上番号
		TEMP_SHIPPING.ITEM_CD,			--品目コード
		--部署コード(取引先マスタの部署とする）
		(SELECT ORGANIZATION_CD FROM VENDER WHERE VENDER_DIVISION = 'TS' AND VENDER_CD = TEMP_SHIPPING.VENDER_CD),
		TEMP_SHIPPING.VENDER_CD,		--得意先コード
		I_TANTO_CD,				--入力担当者コード
		--営業担当者コード
		(SELECT TANTO_CD FROM DELIVERY WHERE DELIVERY_CD = TEMP_SHIPPING.DELIVERY_CD) ,
		NULL,					--製品ロット番号
		TEMP_SHIPPING.ORDER_NO,			--受注番号
		TEMP_SHIPPING.ORDER_ROW_NO,		--受注行番号
		TEMP_SALES_QUANTITY,			--売上数量
		TEMP_ORDER_DETAIL.ORDER_UNITPRICE,	--売上単価
		TEMP_ORDER_DETAIL.STANDARD_UNITPRICE,	--標準単価
		TEMP_ORDER_DETAIL.STANDARD_DISCOUNT,	--標準値引
		TEMP_ORDER_DETAIL.SPECIAL_DISCOUNT,	--特別値引
		TEMP_ORDER_DETAIL.TMP_UNITPRICE_FLG,	--仮単価FLG|==0:通常 1:仮単価
		NULL,					--摘要
		NULL,					--出庫ロケーションコード
		0,					--完納区分|==0:未完納 1:伝票発行 2:完納 3:ｸﾛｰｽﾞ
		NULL,					--売掛締め日
		NULL,					--請求締め日
		1,					--入力区分|==0:売上入力 1:出荷入力 2:仕入入力
		TEMP_SHIPPING.DELIVERY_CD,		--納入先コード
		TEMP_TAX_DIVISION,			--消費税課税区分|==1:外税 2:内税 3:非課税
		TEMP_TAX_AMOUNT,			--消費税額
		TEMP_PAYMENT_INVOICE_CD,		--請求先コード
		TEMP_SALES_AMOUNT,			--売上金額
		0,					--売上基準|==0:検収無し 1:検収有り
		TEMP_TAX_RATIO,				--消費税率
		0,					--更新フラグ
		0,					--設定掛率
		0,					--掛率適用前売上単価
		TEMP_SHIPPING.SHIPPING_NO,		--出荷番号
		NULL,					--売上伝票番号
		NULL,					--売上伝票行番号
		0,					--伝票発行済区分|==0..未発行 1..発行済
		NULL,					--伝票発行日
		NULL,					--データ転送日時|==外部システムインタフェース
		NULL,					--元帳転記日時|==会計インタフェース
		NULL,					--元帳転記番号|==会計インタフェース
		0,					--売上数換算量
		0,					--合格数換算量
		1,					--ﾃﾞｰﾀ種別　1:売上（’1’固定）
		1,					--ﾃﾞｰﾀ集計区分（1:売上 2:返品 3:値引き 4:運賃 5:売上取消 6:返品取消 7:値引き取消 8:運賃取消 9:その他）
		1,					--分類コード
		TEMP_ACCOUNT_DATE,			--勘定年月
		--会計部門借方コード
		(SELECT SECTION_CD FROM VENDER WHERE VENDER_DIVISION = 'TS' AND VENDER_CD = TEMP_PAYMENT_INVOICE_CD),
		--会計部門貸方コード
		(SELECT SECTION_CD FROM ARTICLE_ATTRIBUTE_QUEUE,ITEM WHERE ITEM.ITEM_CD = TEMP_SHIPPING.ITEM_CD AND ITEM.ITEM_CD = ARTICLE_ATTRIBUTE_QUEUE.ITEM_CD(+) AND ITEM.VERSION = ARTICLE_ATTRIBUTE_QUEUE.VERSION(+)),
		--借方科目コード
		(SELECT ACCOUNTS_CD FROM VENDER WHERE VENDER_DIVISION = 'TS' AND VENDER_CD = TEMP_PAYMENT_INVOICE_CD),
		NULL,					--借方補助科目コード
		--貸方科目コード
		(SELECT ACCOUNTS_CD FROM ARTICLE_ATTRIBUTE_QUEUE,ITEM WHERE ITEM.ITEM_CD = TEMP_SHIPPING.ITEM_CD AND ITEM.ITEM_CD = ARTICLE_ATTRIBUTE_QUEUE.ITEM_CD(+) AND ITEM.VERSION = ARTICLE_ATTRIBUTE_QUEUE.VERSION(+)),
		NULL,					--貸方補助科目コード
		0,					--売掛対象(0：未処理、1：処理済、9：対象外)
		0,					--請求対象(0：未処理、1：処理済、9：対象外)
		NULL,					--摘要コード
		NULL,					--摘要名
		0,					--売掛更新フラグ(0：未処理、1：処理済)
		NULL,					--売掛番号
		0,					--請求更新フラグ(0：未処理、1：処理済)
		NULL,					--請求番号
		0,					--消込完了フラグ(0：未処理、1：処理済)
		NULL,					--消込完了日
		0,					--承認ステータス(1：入力中、2：承認依頼中、3：承認済み)
		NULL,					--承認者
		NULL,					--承認日
		(SELECT ORGANIZATION_CD FROM VENDER WHERE VENDER_DIVISION = 'TS' AND VENDER_CD = TEMP_SHIPPING.VENDER_CD),--担当部署
		0,					--預り品フラグ (0:標準 1:預り品)
		NULL,					--理由コード
		NULL,					--入庫ロケーション
		NULL,					--包装指図番号
		SYSDATE,				--登録日時
		I_TANTO_CD,				--登録者ID
		SYSDATE,				--更新日時
		I_TANTO_CD				--更新者ID
		
	);
	
	-----------------------------------------
	-- ここから受注運賃計上処理
	-----------------------------------------

	-- 運賃が0の場合売上計上しない
	IF TEMP_ORDER_HEAD.CARRY_FARE = 0 THEN
		DBMS_OUTPUT.PUT_LINE('受注運賃:' || TEMP_ORDER_HEAD.CARRY_FARE);
		RETURN 0 ;
	END IF;

	-- 第1引数[出荷番号]に紐づく受注番号を取得し、受注番号の明細数を取得
	SELECT COUNT(*) INTO TEMP_ORDER_DETAIL_NUM FROM ORDER_DETAIL WHERE ORDER_NO = (SELECT ORDER_NO FROM ORDER_DETAIL WHERE SHIPPING_NO =I_SHIPPING_NO);
	
	-- 第1引数[出荷番号]に紐づく受注番号を取得し、受注明細の出荷完了数を取得
	SELECT COUNT(*) INTO TEMP_SHIPPING_COMP_NUM FROM ORDER_DETAIL,SHIPPING WHERE ORDER_DETAIL.ORDER_NO = (SELECT ORDER_NO FROM ORDER_DETAIL WHERE SHIPPING_NO =I_SHIPPING_NO) AND 
		ORDER_DETAIL.SHIPPING_NO = SHIPPING.SHIPPING_NO AND SHIPPING.SHIPPING_STATUS = 5;
	
	-- 出荷番号に紐づく受注全ての出荷指図ステータスが[5:出荷完了]でない場合
	IF TEMP_ORDER_DETAIL_NUM <> TEMP_SHIPPING_COMP_NUM THEN
		DBMS_OUTPUT.PUT_LINE('受注詳細数:' || TEMP_ORDER_DETAIL_NUM || ' 受注明細出荷完了数:' || TEMP_SHIPPING_COMP_NUM);
		RETURN 0;
	END IF;
	
	-- 納入先の区分を取得
	SELECT DIVISION INTO TEMP_DIVISION_ITEM_CD FROM DELIVERY WHERE DELIVERY_CD = TEMP_SHIPPING.DELIVERY_CD;
	IF TEMP_DIVISION_ITEM_CD = 1 THEN		-- 1:油脂
		TEMP_DIVISION_ITEM_CD := CONST_DIVISION_YUSI;
	-- 納入先区分毎に油脂、化成品の品目をセット
	ELSIF TEMP_DIVISION_ITEM_CD = 2 THEN		-- 2:化成品
		TEMP_DIVISION_ITEM_CD := CONST_DIVISION_KASEI;
	ELSE
		RETURN 0;
	END IF;

	-- 売上番号用連番を取得
	SELECT NO_KEY_UR_SLIP_NO.NEXTVAL INTO TEMP_SALES_NUMBER FROM DUAL;

	-- 売上番号作成
	TEMP_SALES_NO := TEMP_SALES_CHAR || LPAD(TEMP_SALES_NUMBER,9,'0') ;

	-- 売上数量算出
	SELECT SUM(SHIPPING_INSTRUCTION) INTO TEMP_SALES_QUANTITY FROM SHIPPING_DETAIL WHERE SHIPPING_NO = I_SHIPPING_NO;

	-- 売上金額算出(売上数量 * 売上単価(受注単価))
	TEMP_SALES_AMOUNT := TEMP_ORDER_HEAD.CARRY_FARE;

	-- 勘定年月算出(出荷予定日 + リードタイムの年月)
	TEMP_ACCOUNT_DATE := to_char(TEMP_ORDER_HEAD.SCHEDULED_SHIPPING_DATE + TEMP_ORDER_HEAD.LEAD_TIME,'YYYYMM');

	-- 消費税計算値を取得
	SELECT
		(CASE -- 販売品扱い属性.売上消費税課税区分＝4:取引先ﾏｽﾀの場合は次へ
			WHEN NVL(ARTICLE_ATTRIBUTE_QUEUE.TAX_DIVISION,4) = 4 THEN  -- 販売品扱い属性にデータが存在しない場合の対応
				(CASE	-- 取引先ﾏｽﾀ.消費税区分＝4:自社ﾏｽﾀの場合は自社ﾏｽﾀ.消費税課税区分
					WHEN VENDER.TAX_DIVISION = 4 THEN (SELECT TAX_DIVISION FROM COMPANY WHERE COMPANY_CD = CONST_COMPANY_CD)
					ELSE VENDER.TAX_DIVISION	-- 取引先ﾏｽﾀ.消費税区分
				 END )
			ELSE ARTICLE_ATTRIBUTE_QUEUE.TAX_DIVISION	-- 販売品扱い属性.売上消費税課税区分
		 END) AS TAX_DIVISION		   -- 消費税課税区分
	,	(CASE	-- 取引先ﾏｽﾀ.消費税算出区分=4:自社ﾏｽﾀの場合は自社ﾏｽﾀ.消費税算出区分
			WHEN VENDER.CALC_DIVISION = 4 THEN (SELECT CALC_DIVISION FROM COMPANY WHERE COMPANY_CD = CONST_COMPANY_CD)
			ELSE VENDER.CALC_DIVISION	-- 取引先ﾏｽﾀ.消費税算出区分
		 END) AS TAX_CALC_DIVISION		   -- 消費税算出区分
	,	(CASE	-- 取引先ﾏｽﾀ.売上消費税課税区分＝4の場合自社マスタから取得
			WHEN VENDER.TAX_DIVISION = 4 THEN (SELECT TAX_RATIO FROM COMPANY WHERE COMPANY_CD = CONST_COMPANY_CD)
			ELSE VENDER.TAX_RATIO	-- 取引先ﾏｽﾀ.消費税率
		 END) AS TAX_RATIO    -- 消費税率
	,	(CASE	-- 取引先マスタ.消費税端数区分 = [4:自社マスタ]の場合自社マスタから取得
			WHEN VENDER.TAX_ROUNDUP = 4 THEN (SELECT TAX_ROUNDUP FROM COMPANY WHERE COMPANY_CD = CONST_COMPANY_CD)
			ELSE VENDER.TAX_ROUNDUP	-- 取引先ﾏｽﾀ.消費税端数区分
		 END) AS TAX_ROUNDUP    -- 消費税率
	,	(CASE	-- 取引先マスタ.消費税端数区分 = [8:自社マスタ]の場合自社マスタから取得
				WHEN VENDER.TAX_ROUNDUP_UNIT = 8 THEN (SELECT TAX_ROUNDUP_UNIT FROM COMPANY WHERE COMPANY_CD = CONST_COMPANY_CD)
				ELSE VENDER.TAX_ROUNDUP_UNIT	-- 取引先ﾏｽﾀ.消費税率
		 END) AS TAX_ROUNDUP_UNIT    -- 消費税端数単位
		INTO TEMP_TAX_DIVISION,TEMP_TAX_CALC_DIVISION,TEMP_TAX_RATIO,TEMP_TAX_ROUNDUP,TEMP_TAX_ROUNDUP_UNIT
	FROM
		(SELECT TAX_DIVISION,CALC_DIVISION,TAX_RATIO,TAX_ROUNDUP,TAX_ROUNDUP_UNIT FROM VENDER WHERE VENDER_DIVISION = 'TS' AND VENDER.VENDER_CD = TEMP_PAYMENT_INVOICE_CD) VENDER
	,	(SELECT ARTICLE_ATTRIBUTE_QUEUE.* FROM ARTICLE_ATTRIBUTE_QUEUE,ITEM WHERE ITEM.ITEM_CD = TEMP_SHIPPING.ITEM_CD AND ITEM.ITEM_CD = ARTICLE_ATTRIBUTE_QUEUE.ITEM_CD(+) AND ITEM.VERSION = ARTICLE_ATTRIBUTE_QUEUE.VERSION(+)) ARTICLE_ATTRIBUTE_QUEUE ;-- 販売品扱い属性キュー

	DBMS_OUTPUT.PUT_LINE('消費税課税区分:' || TEMP_TAX_DIVISION || ' 消費税算出区分:' || TEMP_TAX_CALC_DIVISION || ' 消費税率:' || TEMP_TAX_RATIO || ' 消費税端数処理:' || TEMP_TAX_ROUNDUP || ' 消費税端数単位:' || TEMP_TAX_ROUNDUP_UNIT);
	
	IF TEMP_TAX_ROUNDUP_UNIT = 1 THEN
		TEMP_TRUNC_UP := 0.9;
	ELSIF TEMP_TAX_ROUNDUP_UNIT = 2 THEN
		TEMP_TRUNC_UP := 0.09;
	ELSIF TEMP_TAX_ROUNDUP_UNIT = 3 THEN
		TEMP_TRUNC_UP := 0.009;
	ELSIF TEMP_TAX_ROUNDUP_UNIT = 4 THEN
		TEMP_TRUNC_UP := 0.0009;
	ELSIF TEMP_TAX_ROUNDUP_UNIT = 5 THEN
		TEMP_TRUNC_UP := 0.00009;
	ELSIF TEMP_TAX_ROUNDUP_UNIT = 6 THEN
		TEMP_TRUNC_UP := 0.000009;
	ELSIF TEMP_TAX_ROUNDUP_UNIT = 7 THEN
		TEMP_TRUNC_UP := 0.0000009;
	END IF;
	
	-- 消費税算出区分が[1:明細単位] または　消費税課税区分が[3:非課税]以外の場合消費税算出
	IF TEMP_TAX_CALC_DIVISION = 1 AND TEMP_TAX_DIVISION <> 3 THEN
		
		-- 金額 * 消費税率(%) / 100
		TEMP_TAX_AMOUNT := TEMP_SALES_AMOUNT * TEMP_TAX_RATIO / 100;

		IF TEMP_TAX_ROUNDUP = 1 THEN		-- 切捨
			TEMP_TAX_AMOUNT := TRUNC(TEMP_TAX_AMOUNT,TEMP_TAX_ROUNDUP_UNIT-1);
		ELSIF TEMP_TAX_ROUNDUP = 2 THEN		-- 四捨五入
			TEMP_TAX_AMOUNT := ROUND(TEMP_TAX_AMOUNT,TEMP_TAX_ROUNDUP_UNIT-1);
		ELSIF TEMP_TAX_ROUNDUP = 3 THEN		-- 切上
			TEMP_TAX_AMOUNT := TRUNC((TEMP_TAX_AMOUNT+TEMP_TRUNC_UP),TEMP_TAX_ROUNDUP_UNIT-1);
		END IF;

	ELSE	-- 消費税算出区分が[1:明細単位]以外　または消費税課税区分が[3:非課税]の場合消費税を算出しない
		TEMP_TAX_AMOUNT := 0;
	END IF;
	
	-- 売上トランザクション新規レコード追加
	INSERT INTO SALES(
		SALES_DATE,
		SALES_NO,
		CANCEL_SALES_NO,
		ITEM_CD,
		ORGANIZATION_CD,
		VENDER_CD,
		INPUT_TANTO_CD,
		SALES_TANTO_CD,
		PRODUCT_LOTNO,
		ORDER_NO,
		ORDER_ROW_NO,
		SALES_QUANTITY,
		SALES_UNITPRICE,
		STANDARD_UNITPRICE,
		STANDARD_DISCOUNT,
		SPECIAL_DISCOUNT,
		TMP_UNITPRICE_FLG,
		REMARK,
		DISBURSEMENT_LOCATION_CD,
		DELIVERY_COMP,
		DELIVERY_UPDATE_DATE,
		INVOICE_UPDATE_DATE,
		INPUT_DIVISION,
		DELIVERY_CD,
		TAX_DIVISION,
		TAX_AMOUNT,
		INVOICE_CD,
		SALES_AMOUNT,
		SALES_BASIC,
		TAX_RATIO,
		UPDATE_FLG,
		CONFIG_EXP_RATIO,
		RATIO_NOTAPPLY_SALES_UNITPRICE,
		SHIPPING_NO,
		SALES_SLIP_NO,
		SALES_SLIP_ROW_NO,
		SLIP_PUBLISH_COMP,
		SLIP_PUBLISH_DATE,
		TRANSMISSION_DATE,
		LEDGER_POST_DATE,
		LEDGER_POST_NO,
		SALES_CONVERT_QUANTITY,
		ACCEPT_CONVERT_QUANTITY,
		DATA_TYPE,
		DATA_TOTAL_DIVISION,
		CATEGORY_DIVISION,
		ACCOUNT_YEARS,
		ACCOUNT_DEBIT_SECTION_CD,
		ACCOUNT_CREDIT_SECTION_CD,
		DEBIT_TITLE_CD,
		DEBIT_SUB_TITLE_CD,
		CREDIT_TITLE_CD,
		CREDIT_SUB_TITLE_CD,
		DEPOSIT_TARGET_DIVISION,
		CLAIM_TARGET_DIVISION,
		SUMMARY_CD,
		SUMMARY,
		DEPOSIT_UPDATE_DIVISION,
		DEPOSIT_NO,
		CLAIM_UPDATE_DIVISION,
		CLAIM_NO,
		ERASER_COMPLETE_DIVISION,
		ERASER_COMPLETE_DATE,
		APPROVAL_STATUS,
		APPROVEDBY,
		APPROVALDATE,
		CHARGE_ORGANIZATION_CD,
		KEEP_FLAG,
		RY_CD,
		HOUSING_LOCATION_CD,
		PACKAGE_DIRECTION_NO,
		INPUT_DATE,
		INPUTOR_CD,
		UPDATE_DATE,
		UPDATOR_CD
	) VALUES(
		TO_CHAR(SYSDATE, 'YYYY/MM/DD'),		--売上日付
		TEMP_SALES_NO,				--売上番号
		NULL,					--売上-取消　売上番号
		TEMP_DIVISION_ITEM_CD,			--品目コード
		--部署コード(取引先マスタの部署とする）
		(SELECT ORGANIZATION_CD FROM VENDER WHERE VENDER_DIVISION = 'TS' AND VENDER_CD = TEMP_SHIPPING.VENDER_CD),
		TEMP_SHIPPING.VENDER_CD,		--得意先コード
		I_TANTO_CD,				--入力担当者コード
		--営業担当者コード
		(SELECT TANTO_CD FROM DELIVERY WHERE DELIVERY_CD = TEMP_SHIPPING.DELIVERY_CD) ,
		NULL,					--製品ロット番号
		TEMP_SHIPPING.ORDER_NO,			--受注番号
		TEMP_SHIPPING.ORDER_ROW_NO,		--受注行番号
		1,					--売上数量
		TEMP_SALES_AMOUNT,			--売上単価
		TEMP_SALES_AMOUNT,			--標準単価
		0,					--標準値引
		0,					--特別値引
		0,					--仮単価FLG|==0:通常 1:仮単価
		NULL,					--摘要
		NULL,					--出庫ロケーションコード
		0,					--完納区分|==0:未完納 1:伝票発行 2:完納 3:ｸﾛｰｽﾞ
		NULL,					--売掛締め日
		NULL,					--請求締め日
		1,					--入力区分|==0:売上入力 1:出荷入力 2:仕入入力
		TEMP_SHIPPING.DELIVERY_CD,		--納入先コード
		TEMP_TAX_DIVISION,			--消費税課税区分|==1:外税 2:内税 3:非課税
		TEMP_TAX_AMOUNT,			--消費税額
		TEMP_PAYMENT_INVOICE_CD,		--請求先コード
		TEMP_SALES_AMOUNT,			--売上金額
		0,					--売上基準|==0:検収無し 1:検収有り
		TEMP_TAX_RATIO,				--消費税率
		0,					--更新フラグ
		0,					--設定掛率
		0,					--掛率適用前売上単価
		TEMP_SHIPPING.SHIPPING_NO,		--出荷番号
		NULL,					--売上伝票番号
		NULL,					--売上伝票行番号
		0,					--伝票発行済区分|==0..未発行 1..発行済
		NULL,					--伝票発行日
		NULL,					--データ転送日時|==外部システムインタフェース
		NULL,					--元帳転記日時|==会計インタフェース
		NULL,					--元帳転記番号|==会計インタフェース
		0,					--売上数換算量
		0,					--合格数換算量
		1,					--ﾃﾞｰﾀ種別　1:売上（’1’固定）
		1,					--ﾃﾞｰﾀ集計区分（1:売上 2:返品 3:値引き 4:運賃 5:売上取消 6:返品取消 7:値引き取消 8:運賃取消 9:その他）
		1,					--分類コード
		TEMP_ACCOUNT_DATE,			--勘定年月
		--会計部門借方コード
		(SELECT SECTION_CD FROM VENDER WHERE VENDER_DIVISION = 'TS' AND VENDER_CD = TEMP_PAYMENT_INVOICE_CD),
		--会計部門貸方コード
		(SELECT SECTION_CD FROM ARTICLE_ATTRIBUTE_QUEUE,ITEM WHERE ITEM.ITEM_CD = TEMP_SHIPPING.ITEM_CD AND ITEM.ITEM_CD = ARTICLE_ATTRIBUTE_QUEUE.ITEM_CD(+) AND ITEM.VERSION = ARTICLE_ATTRIBUTE_QUEUE.VERSION(+)),
		--借方科目コード
		(SELECT ACCOUNTS_CD FROM VENDER WHERE VENDER_DIVISION = 'TS' AND VENDER_CD = TEMP_PAYMENT_INVOICE_CD),
		NULL,					--借方補助科目コード
		--貸方科目コード
		(SELECT ACCOUNTS_CD FROM ARTICLE_ATTRIBUTE_QUEUE,ITEM WHERE ITEM.ITEM_CD = TEMP_SHIPPING.ITEM_CD AND ITEM.ITEM_CD = ARTICLE_ATTRIBUTE_QUEUE.ITEM_CD(+) AND ITEM.VERSION = ARTICLE_ATTRIBUTE_QUEUE.VERSION(+)),
		NULL,					--貸方補助科目コード
		0,					--売掛対象(0：未処理、1：処理済、9：対象外)
		0,					--請求対象(0：未処理、1：処理済、9：対象外)
		NULL,					--摘要コード
		NULL,					--摘要名
		0,					--売掛更新フラグ(0：未処理、1：処理済)
		NULL,					--売掛番号
		0,					--請求更新フラグ(0：未処理、1：処理済)
		NULL,					--請求番号
		0,					--消込完了フラグ(0：未処理、1：処理済)
		NULL,					--消込完了日
		0,					--承認ステータス(1：入力中、2：承認依頼中、3：承認済み)
		NULL,					--承認者
		NULL,					--承認日
		(SELECT ORGANIZATION_CD FROM VENDER WHERE VENDER_DIVISION = 'TS' AND VENDER_CD = TEMP_SHIPPING.VENDER_CD),--担当部署
		0,					--預り品フラグ (0:標準 1:預り品)
		NULL,					--理由コード
		NULL,					--入庫ロケーション
		NULL,					--包装指図番号
		SYSDATE,				--登録日時
		I_TANTO_CD,				--登録者ID
		SYSDATE,				--更新日時
		I_TANTO_CD				--更新者ID
		
	);
	
	RETURN 0;
-- 異常処理
EXCEPTION

	WHEN OTHERS THEN

		-- SQLエラーコード、エラーメッセージを取得
	    	O_RETURN_CD := SQLCODE;
		O_RETURN_MSG  := SUBSTR(SQLERRM,1,1024);

		OUTPUT_ERROR_LOG('FUN_IF_PRODUCTION_RESULT_SUB',I_TANTO_CD,O_RETURN_CD,O_RETURN_MSG);
		RETURN -9;


END;
/
