/*
 *
 *
 * entityName=InventoryLowerLocationListForReport
 * packageName=inventorylistforreport
 * methodName=getLowerLocationListForReport
 *
 */
SELECT
	LOCATION_INVENTORY.LOCATION_CD
,	LOCATION.LOCATION_NAME
,	LOCATION_INVENTORY.ITEM_CD
,	BASE_ITEM.ITEM_NAME
,	BASE_ITEM.STYLE_OF_PACKING
,	BASE_ITEM.OTHER_COMPANY_CD1
,	LOCATION_INVENTORY.PARENT_ITEM_CD
,	PARENT_ITEM.ITEM_NAME AS PARENT_ITEM_NAME
,	DECODE(BASE_ITEM.UNIT_OF_OPERATION_MANAGEMENT, '1', DECODE(NVL(BASE_ITEM.KG_OF_FRACTION_MANAGEMENT, 1), 0, 0, NVL(LOCATION_INVENTORY.INVENTORY_QTY, 0) / NVL(BASE_ITEM.KG_OF_FRACTION_MANAGEMENT, 1)),
	DECODE(BASE_ITEM.UNIT_OF_OPERATION_MANAGEMENT, '5', DECODE(NVL(BASE_ITEM.KG_OF_FRACTION_MANAGEMENT, 1), 0, 0, NVL(LOCATION_INVENTORY.INVENTORY_QTY, 0) / NVL(BASE_ITEM.KG_OF_FRACTION_MANAGEMENT, 1)),
	CASE BASE_ITEM.TYPE_DIVISION
	    WHEN 1 THEN FLOOR(NVL(LOCATION_INVENTORY.INVENTORY_QTY, 0) / NVL(BASE_ITEM.KG_OF_FRACTION_MANAGEMENT, 1))
	    WHEN 3 THEN FLOOR(NVL(LOCATION_INVENTORY.INVENTORY_QTY, 0) / NVL(BASE_ITEM.KG_OF_FRACTION_MANAGEMENT, 1))
	    ELSE NVL(INVENTORY_QTY, 0)
	END)) PACK_QTY
,	OPERATION_NAMES.NAME01 AS PACK_UNIT

,	DECODE(NVL(BASE_ITEM.KG_CONVERSION_COEFFICIENT, 1), 0, 0, DECODE(BASE_ITEM.UNIT_OF_OPERATION_MANAGEMENT, '1', 0, DECODE(BASE_ITEM.UNIT_OF_OPERATION_MANAGEMENT, '5', 0,
	CASE BASE_ITEM.TYPE_DIVISION
	    WHEN 1 THEN DECODE(NVL(BASE_ITEM.KG_OF_FRACTION_MANAGEMENT, 1), 0, 0, MOD(NVL(LOCATION_INVENTORY.INVENTORY_QTY, 0), NVL(BASE_ITEM.KG_OF_FRACTION_MANAGEMENT, 1)))
	    WHEN 3 THEN DECODE(NVL(BASE_ITEM.KG_OF_FRACTION_MANAGEMENT, 1), 0, 0, MOD(NVL(LOCATION_INVENTORY.INVENTORY_QTY, 0), NVL(BASE_ITEM.KG_OF_FRACTION_MANAGEMENT, 1)))
	    ELSE 0
	END)) / NVL(BASE_ITEM.KG_CONVERSION_COEFFICIENT, 1)) AS FRACTION_NUM
	
,	FRACTION_NAMES.NAME01 AS FRACTION_UNIT
,	LOCATION_INVENTORY.INVENTORY_QTY
,	LOCATION_INVENTORY.BACKORDER_QTY
,	LOCATION_INVENTORY.ASSIGN_QTY
,	LOCATION_INVENTORY.SALES_ASSIGN_QTY
,	LOCATION_INVENTORY.FINISH_QTY
,	LOCATION_INVENTORY.INSPECTION_QTY
,	LOCATION_INVENTORY.INVALID_QTY
,	LOCATION_INVENTORY.FAULT_QTY
,	LOCATION_INVENTORY.INVENTORY_COST
,	LOCATION_INVENTORY.LAST_IN_DATE
,	LOCATION_INVENTORY.LAST_OUT_DATE
,	LOCATION_INVENTORY.LAST_INVENTORY_DATE
,	LOCATION_INVENTORY.LAST_INVENTORY_QTY
,	LOCATION_INVENTORY.LAST_INVENTORY_COST
,	LOCATION_INVENTORY.NEW_INVENTORY_QTY
,	LOCATION_INVENTORY.LM_INVENTORY_QTY
,	LOCATION_INVENTORY.LM_INVENTORY_COST
,	LOCATION_INVENTORY.INOUT_QTY
,	LOCATION_INVENTORY.FRACTION
,	LOCATION_INVENTORY.INPUT_DATE
,	LOCATION_INVENTORY.INPUTOR_CD
,	INPUTOR.TANTO_NM AS INPUTOR_NAME
,	LOCATION_INVENTORY.UPDATE_DATE
,	LOCATION_INVENTORY.UPDATOR_CD
,	UPDATOR.TANTO_NM AS UPDATOR_NAME
FROM
	LOCATION_INVENTORY
,	LOCATION
,	ITEM BASE_ITEM
,	ITEM PARENT_ITEM
,	LOGIN INPUTOR
,	LOGIN UPDATOR
, 	NAMES OPERATION_NAMES
,	NAMES FRACTION_NAMES
WHERE
	LOCATION_INVENTORY.LOCATION_CD = LOCATION.LOCATION_CD(+)
AND	LOCATION_INVENTORY.ITEM_CD = BASE_ITEM.ITEM_CD(+)
AND	LOCATION_INVENTORY.PARENT_ITEM_CD = PARENT_ITEM.ITEM_CD(+)
AND	LOCATION_INVENTORY.INPUTOR_CD = INPUTOR.TANTO_CD(+)
AND	LOCATION_INVENTORY.UPDATOR_CD = UPDATOR.TANTO_CD(+)
AND 	OPERATION_NAMES.NAME_DIVISION(+) = 'UNIT'
AND 	BASE_ITEM.UNIT_OF_OPERATION_MANAGEMENT = OPERATION_NAMES.NAME_CD(+)
AND 	FRACTION_NAMES.NAME_DIVISION(+) = 'UNIT'
AND 	BASE_ITEM.UNIT_OF_FRACTION_MANAGEMENT = FRACTION_NAMES.NAME_CD(+)

/*IF (condition.srhLocationCd != null) && (condition.srhLocationCd != "")*/
AND	LOCATION.UPPER_LOCATION_CD = /*condition.srhLocationCd*/'%'
/*END*/

/*IF (condition.srhLocationCd == null) || (condition.srhLocationCd == "")*/
AND	LOCATION_INVENTORY.LOCATION_CD IN (SELECT LOCATION_CD FROM LOCATION WHERE UPPER_LOCATION_CD IS NOT NULL)
AND LOCATION.LOCATION_LEVEL = 2
/*END*/

/*IF (condition.srhItemCd != null) && (condition.srhItemCd != "")*/
AND LOCATION_INVENTORY.ITEM_CD LIKE /*condition.srhItemCd*/'%'
/*END*/

/*IF (condition.srhOtherCompanyCd1 != null) && (condition.srhOtherCompanyCd1 != "")*/
AND BASE_ITEM.OTHER_COMPANY_CD1 LIKE /*condition.srhOtherCompanyCd1*/'%'
/*END*/

ORDER BY 
	LOCATION_INVENTORY.LOCATION_CD
,	LOCATION_INVENTORY.ITEM_CD
